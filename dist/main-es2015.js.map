{"version":3,"sources":["./src/frontend/services/local-storage.service.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.html","./src/frontend/app/login/login.component.ts","./src/frontend/app/login/login.component.html","./src/frontend/services/login-redirect.service.ts","./src/frontend/app/menu/menu.component.ts","./src/frontend/app/menu/menu.component.html","./src/frontend/app/splitter/viewer/viewer.component.ts","./src/frontend/app/splitter/viewer/viewer.component.html","./src/frontend/app/settings/general/version-update/version-update.component.ts","./src/frontend/app/settings/general/version-update/version-update.component.html","./src/frontend/services/last-url.service.ts","./src/frontend/app/settings/general/users/list/users-list.component.ts","./src/frontend/app/settings/general/users/list/users-list.component.html","./src/frontend/app/env.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.html","./src/frontend/services/has-privilege.service.ts","./src/frontend/app/app-routing.module.ts","./src/frontend/app/splitter/list/list.component.ts","./src/frontend/app/splitter/list/list.component.html","./src/frontend/app/app.module.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.html","./src/frontend/app/verifier/viewer/viewer.component.ts","./src/frontend/app/verifier/viewer/viewer.component.html","./src/frontend/services/notifications/notifications.service.ts","./src/frontend/services/notifications/notification.service.html","./src/frontend/services/privileges.service.ts","./src/frontend/app/settings/general/about-us/about-us.component.html","./src/frontend/app/settings/general/about-us/about-us.component.ts","./src/frontend/services/user.service.ts","./src/frontend/app/settings/general/roles/create/create-role.component.ts","./src/frontend/app/settings/general/roles/create/create-role.component.html","./src/frontend/services/auth.service.ts","./src/frontend/app/settings/settings.component.ts","./src/frontend/app/home/home.component.ts","./src/frontend/app/home/home.component.html","./src/frontend/app/settings/general/users/create/create-user.component.ts","./src/frontend/app/settings/general/users/create/create-user.component.html","./src/frontend/app/settings/general/roles/update/update-role.component.ts","./src/frontend/app/settings/general/roles/update/update-role.component.html","./src/frontend/app/settings/verifier/form/builder/form-builder.component.ts","./src/frontend/app/settings/verifier/form/builder/form-builder.component.html","./src/frontend/services/locale.service.ts","./src/frontend/app/custom-mat-paginator.ts","./src/frontend/app/settings/settings-routing.module.ts","./src/frontend/app/profile/profile.component.ts","./src/frontend/app/profile/profile.component.html","./src/frontend/app/settings/verifier/form/list/form-list.component.ts","./src/frontend/app/settings/verifier/form/list/form-list.component.html","./src/frontend/app/app-material.module.ts","./src/frontend/services/config.service.ts","./src/frontend/services/settings.service.ts","./src/frontend/app/logout/logout.component.ts","./src/frontend/app/verifier/list/list.component.ts","./src/frontend/app/verifier/list/list.component.html","./src/frontend/app/upload/upload.component.ts","./src/frontend/app/upload/upload.component.html","./src/frontend/main.ts","./src/frontend/services/services.module.ts","./src/frontend/app/app.component.ts","./src/frontend/app/app.component.html","./src/frontend/app/loader.component.ts","./src/frontend/app/not-found/not-found.component.ts","./src/frontend/app/not-found/not-found.component.html","./src/frontend/services/login-required.service.ts","./src/frontend/app/settings/general/users/update/update-user.component.ts","./src/frontend/app/settings/general/users/update/update-user.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n    constructor() {\n    }\n\n    save(id: string, content: any) {\n        localStorage.setItem(id, content);\n    }\n\n    get(id: string) {\n        return localStorage.getItem(id);\n    }\n\n    remove(id: string) {\n        localStorage.removeItem(id);\n    }\n\n    resetLocal() {\n        const arr: string | any[] = [];\n        // Iterate over arr and remove the items by key\n        for (let i = 0; i < arr.length; i++) {\n            localStorage.removeItem(arr[i]);\n        }\n    }\n\n    getCookie(cname: string) {\n        let name = cname + \"=\";\n        let decodedCookie = decodeURIComponent(document.cookie);\n        let ca = decodedCookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    setCookie(cname: string, cvalue: string, exdays: number) {\n        let d = new Date();\n        if (exdays !== 0) {\n            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n            let expires = \"expires=\" + d.toUTCString();\n            document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n        } else {\n            document.cookie = cname + \"=\" + cvalue;\n        }\n    }\n\n    deleteCookie(cname: string){\n        this.setCookie(cname, '', -1)\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-roles-list',\n    templateUrl: './roles-list.component.html',\n    styleUrls: ['./roles-list.component.scss']\n})\n\nexport class RolesListComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    columnsToDisplay: string[] = ['id', 'label_short', 'label', 'status', 'actions'];\n    loading: boolean = true;\n    roles: any = [];\n    pageSize: number = 10;\n    pageIndex: number = 0;\n    total: number = 0;\n    offset: number = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init()\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('roles/') || lastUrl == '/') {\n            if (this.localeStorageService.get('rolesPageIndex'))\n                this.pageIndex = parseInt(<string>this.localeStorageService.get('rolesPageIndex'))\n            this.offset = this.pageSize * (this.pageIndex)\n        } else\n            this.localeStorageService.remove('rolesPageIndex')\n        this.loadRoles()\n    }\n\n    loadRoles(): void {\n        this.http.get(API_URL + '/ws/roles/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.total = data.roles[0].total\n                this.roles = data.roles\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize\n        this.offset = this.pageSize * (event.pageIndex)\n        this.localeStorageService.save('rolesPageIndex', event.pageIndex)\n        this.loadRoles()\n    }\n\n    deleteConfirmDialog(role_id: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_delete', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteRole(role_id)\n            }\n        });\n    }\n\n\n    disableConfirmDialog(role_id: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_disable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableRole(role_id)\n            }\n        });\n    }\n\n    enableConfirmDialog(role_id: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_enable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableRole(role_id)\n            }\n        });\n    }\n\n    deleteRole(role_id: number) {\n        if (role_id !== undefined) {\n            this.http.delete(API_URL + '/ws/roles/delete/' + role_id, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    disableRole(role_id: number){\n        if (role_id !== undefined){\n            this.http.put(API_URL + '/ws/roles/disable/' + role_id, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    enableRole(role_id: number){\n        if (role_id !== undefined){\n            this.http.put(API_URL + '/ws/roles/enable/' + role_id, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    sortData(sort: Sort) {\n        let data = this.roles.slice()\n        if (!sort.active || sort.direction === '') {\n            this.roles = data\n            return;\n        }\n\n        this.roles = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort [dataSource]=\"roles\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label_short\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label_short}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-play fa-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/general/roles/update/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","import {Component, OnInit} from '@angular/core';\nimport {Validators, FormBuilder} from '@angular/forms';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {API_URL} from \"../env\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {ConfigService} from \"../../services/config.service\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService\n) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required]\n        });\n        this.localeService.getCurrentLocale();\n    }\n\n    onSubmit() {\n        let password = this.loginForm.get('password').value;\n        let username = this.loginForm.get('username').value;\n        if (password && username){\n            this.http.post(\n                API_URL + '/ws/auth/login',\n                {\n                    'username': username,\n                    'password': password,\n                    'lang': this.localeService.currentLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())), data.body.days_before_exp);\n                    this.authService.generateHeaders()\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        if (this.authService.getCachedUrl()) {\n                            this.router.navigate([this.authService.getCachedUrl()]).then();\n                            this.authService.cleanCachedUrl();\n                        } else {\n                            this.router.navigate(['/home']).then();\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if(this.loginForm.get(field).hasError('required')){\n            return this.translate.instant('AUTH.field_required');\n        }\n        return this.translate.instant('ERROR.unknow_error');\n    }\n}\n","<div class=\"mt-32 -mb-32 flex justify-center h-20\">\n    <img src=\"assets/imgs/logo_opencapture.png\" alt=\"Open-Capture For Invoices logo\"/>\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            {{ 'GLOBAL.login' | translate }}\n        </mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                    <input matInput formControlName=\"username\"  type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                    <mat-error *ngIf=\"loginForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                    <input matInput formControlName=\"password\" type=\"password\" placeholder=\"{{ 'USER.password' | translate }}\" required>\n                    <mat-error *ngIf=\"loginForm.controls.password.invalid\">{{ getErrorMessage('password') }}</mat-error>\n                </mat-form-field>\n                <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\">\n                    {{ 'AUTH.login' | translate }}\n                </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRedirectService {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(): boolean {\n        if (this.authService.getToken()) {\n            this.router.navigateByUrl('/home');\n            return false;\n        }\n        return true;\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { UserService } from \"../../services/user.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n    animations: [\n        trigger('toggle', [\n            state('hide', style({\n                display: 'none',\n\n            })),\n            state('show', style({\n                display: \"block\",\n            })),\n            transition('show => hide', animate('150ms ease-out')),\n            transition('hide => show', animate('100ms ease-in'))\n        ])\n    ]\n})\n\nexport class MenuComponent implements OnInit {\n    @Input() image: any;\n    profileDropdownCurrentState : string = 'hide';\n    profileSettingsCurrentState : string = 'hide';\n    mobileMenuState             : string = 'hide';\n\n    constructor(\n        public router: Router,\n        public location: Location,\n        public userService: UserService,\n        public localeService: LocaleService,\n        public privilegesService: PrivilegesService,\n        public localeStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.userService.user = this.userService.getUserFromLocal();\n        if (this.userService.user){\n            this.localeService.getLocales();\n            this.localeService.getCurrentLocale();\n        }\n    }\n\n    getSplitterOrVerifier() {\n        return this.localeStorageService.get('splitter_or_verifier')\n    }\n\n    toggleProfileDropdown() {\n        this.profileDropdownCurrentState = this.profileDropdownCurrentState === 'hide' ? 'show' : 'hide';\n        this.profileSettingsCurrentState = this.profileDropdownCurrentState === 'show' && this.profileSettingsCurrentState == 'show' ? 'hide' : this.profileSettingsCurrentState;\n    }\n\n    closeprofileDropDown() {\n        this.profileDropdownCurrentState = 'hide';\n    }\n\n    toggleMobileMenu() {\n        this.mobileMenuState = this.mobileMenuState === 'hide' ? 'show' : 'hide';\n    }\n}\n","<nav style=\"background: #f8f9fa\" class=\"shadow-md relative z-30\">\n    <div class=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n        <div class=\"relative flex items-center justify-between h-16 z-50\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                <!-- Mobile menu button-->\n                <button (click)=\"toggleMobileMenu()\"\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-white hover:bg-gray-900 focus:ring-2 focus:ring-inset focus:ring-gray-900\"\n                        aria-expanded=\"false\">\n                    <svg *ngIf=\"mobileMenuState == 'hide'\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"/>\n                    </svg>\n                    <svg *ngIf=\"mobileMenuState == 'show'\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 flex items-center\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.image\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"hidden sm:block sm:ml-6\">\n                    <div class=\"flex space-x-4\">\n                        <button mat-flat-button routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                           class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.home' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/verifier\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() == 'verifier'\"\n                           class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/splitter\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() == 'splitter'\"\n                           class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() != undefined\"\n                                [class.disabled]=\"!this.privilegesService.hasPrivilege('upload')\"\n                       class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.upload' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <!-- Profile dropdown -->\n                <div class=\"ml-3 relative mr-2\">\n                    <div>\n                        <button [class.settings_active]=\"location.path().includes('profile/' + userService.user['id'])\"\n                                mat-mini-fab (click)=\"toggleProfileDropdown()\"\n                                class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\"\n                                id=\"user-menu\" aria-haspopup=\"true\">\n                            <i class=\"fas fa-users-cog\"></i>\n                        </button>\n                    </div>\n                    <div [@toggle]=\"profileDropdownCurrentState\" class=\"origin-top-right absolute md:right-0 mt-2 w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50\"\n                         role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <span class=\"block text-center mb-2 text-gray-900\">\n                            <b>{{ userService.user['lastname'] }}</b> {{ userService.user['firstname'] }} ({{ userService.user['username'] }})\n                            <i>{{ userService.user['role']['label'] }}</i>\n                            <hr>\n                        </span>\n                        <a (click)=\"closeprofileDropDown()\" routerLink=\"/profile/{{ userService.user['id'] }}\"\n                           class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\"\n                           role=\"menuitem\">\n                            {{ 'USER.my_profile' | translate }}\n                        </a>\n                        <a (click)=\"closeprofileDropDown()\"\n                           routerLink=\"/logout\"\n                           class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\"\n                           role=\"menuitem\">\n                            {{ 'GLOBAL.log_out' | translate }}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ml-3 relative\" *ngIf=\"this.privilegesService.hasPrivilege('settings')\">\n                    <button id=\"settings-menu\" aria-haspopup=\"true\"\n                            mat-mini-fab routerLink=\"/settings\"\n                            [class.settings_active]=\"location.path().includes('settings')\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fas fa-cog \"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative\">\n                    <mat-form-field class=\"origin-top-right right-0 mt-4 w-32\">\n                        <mat-label>{{ 'GLOBAL.language' | translate }}</mat-label>\n                        <mat-select (selectionChange)=\"localeService.changeLocale($event)\" [(value)]=\"localeService.currentLang\">\n                            <mat-option *ngFor=\"let lang of localeService.langs\" [value]=\"lang[0]\">{{ lang[1] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class SplitterViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewer works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Component({\n    selector: 'app-version-update',\n    templateUrl: './version-update.component.html',\n    styleUrls: ['./version-update.component.scss']\n})\nexport class VersionUpdateComponent implements OnInit {\n    loading: boolean = true\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/config/gitInfo', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n              console.log(data)\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Injectable } from '@angular/core';\nimport {Router, NavigationEnd} from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class LastUrlService {\n\n    private previousUrl: string = '';\n    private currentUrl: string = '';\n\n    constructor(private router : Router) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getPreviousUrl(){\n        return this.previousUrl;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport { API_URL } from \"../../../../env\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss']\n})\n\nexport class UsersListComponent implements OnInit {\n    headers: HttpHeaders          = this.authService.headers;\n    loading : boolean             = true;\n    columnsToDisplay: string[]    = ['id', 'username', 'firstname', 'lastname', 'role','status', 'actions'];\n    users : any                   = [];\n    pageSize : number             = 10;\n    pageIndex: number             = 0;\n    total: number                 = 0;\n    offset: number                = 0;\n    roles : any                   = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) { }\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init()\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('profile/') || lastUrl == '/'){\n            if (this.localeStorageService.get('usersPageIndex'))\n                this.pageIndex = parseInt(<string>this.localeStorageService.get('usersPageIndex'))\n            this.offset = this.pageSize * (this.pageIndex)\n        }else\n            this.localeStorageService.remove('usersPageIndex')\n\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.roles = data.roles\n                this.loadUsers()\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    onPageChange(event: any){\n        this.pageSize = event.pageSize\n        this.offset = this.pageSize * (event.pageIndex)\n        this.localeStorageService.save('usersPageIndex', event.pageIndex)\n        this.loadUsers()\n    }\n\n    loadUsers(): void{\n        this.http.get(API_URL + '/ws/users/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.total = data.users[0].total\n                this.users = data.users;\n                if (this.roles){\n                    this.users.forEach((user: any) => {\n                        this.roles.forEach((element: any) => {\n                            if (user.role == element.id){\n                                user.role_label = element.label\n                            }\n                        })\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    deleteConfirmDialog(user_id: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_delete', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.deleteUser(user_id)\n            }\n        });\n    }\n\n    disableConfirmDialog(user_id: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_disable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.disableUser(user_id)\n            }\n        });\n    }\n\n    enableConfirmDialog(user_id: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_enable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.enableUser(user_id)\n            }\n        });\n    }\n\n    deleteUser(user_id: number){\n        if (user_id !== undefined){\n            this.http.delete(API_URL + '/ws/users/delete/' + user_id, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    disableUser(user_id: number){\n        if (user_id !== undefined){\n            this.http.put(API_URL + '/ws/users/disable/' + user_id, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    enableUser(user_id: number){\n        if (user_id !== undefined){\n            this.http.put(API_URL + '/ws/users/enable/' + user_id, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    sortData(sort: Sort){\n        let data = this.users.slice()\n        if(!sort.active || sort.direction === ''){\n            this.users = data\n            return;\n        }\n\n        this.users = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'username': return this.compare(a.username, b.username, isAsc);\n                case 'firstname': return this.compare(a.firstname, b.firstname, isAsc);\n                case 'lastname': return this.compare(a.lastname, b.lastname, isAsc);\n                case 'role': return this.compare(a.role_label, b.role_label, isAsc);\n                case 'status': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button\n                    (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu()\" class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <h3 class=\"text-center\">{{ this.serviceSettings.getTitle() }}</h3>\n            <hr class=\"border-green-400\">\n        </div>\n        <mat-table matSort [dataSource]=\"users\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"username\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.username' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.username}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"firstname\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.firstname' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.firstname}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"lastname\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.lastname' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.lastname}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"role\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.role' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.role_label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled \"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'USER.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'USER.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-play fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 routerLink=\"/settings/general/users/update/{{row.id}}\"\n                 class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","export const API_URL = 'http://192.168.1.9:5000';\n// export const API_URL = '../../backend_oc';","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { API_URL } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-custom-fields',\n    templateUrl: './custom-fields.component.html',\n    styleUrls: ['./custom-fields.component.scss'],\n})\nexport class CustomFieldsComponent implements OnInit {\n    form!: FormGroup;\n    inactiveFields: any[] = [];\n    activeFields: any[] = [];\n    parent: any[] = [\n        {\n            'id': 'verifier',\n            'label': 'Open-Capture Verifier'\n        },\n        {\n            'id': 'splitter',\n            'label': 'Open-Capture Splitter'\n        }\n    ]\n    addFieldInputs: any[] = [\n        {\n            controlType: 'textbox',\n            label_short: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            required: true,\n        },\n        {\n            controlType: 'textbox',\n            label_short: 'label',\n            label: this.translate.instant('HEADER.label'),\n            required: true,\n        },\n        {\n            controlType: 'dropdown',\n            label_short: 'type',\n            label: this.translate.instant('CUSTOM-FIELDS.type'),\n            options: [\n                {key: 'textbox', value: this.translate.instant('CUSTOM-FIELDS.textbox')},\n                {key: 'textarea', value: this.translate.instant('CUSTOM-FIELDS.textarea')},\n                {key: 'select', value: this.translate.instant('CUSTOM-FIELDS.select')},\n                {key: 'checkBok', value: this.translate.instant('CUSTOM-FIELDS.checkbox')},\n            ],\n            required: true,\n        },\n        {\n            controlType: 'dropdown',\n            label_short: 'module',\n            label: this.translate.instant('CUSTOM-FIELDS.module'),\n            options: [\n                {key: 'verifier', value: this.translate.instant('HOME.verifier')},\n                {key: 'splitter', value: this.translate.instant('HOME.splitter')}\n            ],\n            required: true,\n        },\n    ]\n    loading = true\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.retrieveCustomFields()\n        this.form = this.toFormGroup();\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            this.enableCustomField(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n        }\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.addFieldInputs.forEach(input => {\n            group[input.label_short] = input.required ? new FormControl(input.value || '', Validators.required)\n                : new FormControl(input.value || '');\n        });\n        return new FormGroup(group);\n    }\n\n    moveToActive(index: number) {\n        this.enableCustomField(this.inactiveFields, this.activeFields, index, this.activeFields.length);\n    }\n\n    moveToInactive(index: number) {\n        this.enableCustomField(this.activeFields, this.inactiveFields, index, this.inactiveFields.length);\n    }\n\n    retrieveCustomFields() {\n        let newField;\n        this.http.get(API_URL + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: {\n                        id: any;\n                        label_short: string;\n                        module: string;\n                        label: string;\n                        type: string;\n                        enabled: boolean;\n                    }) => {\n                        newField = {\n                            'id': field.id,\n                            'label_short': field.label_short,\n                            'module': field.module,\n                            'label': field.label,\n                            'type': field.type,\n                            'enabled': field.enabled,\n                        }\n                        field.enabled ? this.activeFields.push(newField) : this.inactiveFields.push(newField);\n                    }\n                )\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    addCustomField() {\n        let newField = this.form.getRawValue()\n        newField = {\n            'label_short': newField.label_short,\n            'label': newField.label,\n            'type': newField.type,\n            'module': newField.module,\n            'enabled': newField.enabled,\n        };\n\n        this.http.post(API_URL + '/ws/customFields/add', newField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                newField['id'] = data.id;\n\n                this.activeFields.push(newField);\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_added'));\n                this.form.reset();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    enableCustomField(oldList: any[], newList: any[], oldIndex: number, newIndex: number) {\n        let updatedField = oldList[oldIndex];\n\n        updatedField = {\n            'id': updatedField['id'],\n            'label_short': updatedField['label_short'],\n            'module': updatedField['module'],\n            'label': updatedField['label'],\n            'type': updatedField['type'],\n            'enabled': !updatedField['enabled']\n        };\n\n        this.http.post(API_URL + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                transferArrayItem(\n                    oldList,\n                    newList,\n                    oldIndex,\n                    newIndex,\n                );\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\"\n                 style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\"\n            style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel\n                                    *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\"\n                   class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-accordion class=\"setting-custom-fields\">\n            <mat-expansion-panel [expanded]=\"true\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{ 'SETTINGS.add_custom_fields' | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <form (ngSubmit)=\"addCustomField()\" [formGroup]=\"form\">\n                    <div [formGroup]=\"form\" class=\"mx-8 grid grid-cols-6 gap-4\">\n                        <mat-form-field appearance=\"outline\" class=\"w-full\" *ngFor=\"let input of addFieldInputs\">\n                            <mat-label [attr.for]=\"input.label_short\">{{ input.label | translate }}</mat-label>\n                            <div [ngSwitch]=\"input.controlType\">\n                                <input matInput *ngSwitchCase=\"'textbox'\" [formControlName]=\"input.label_short\"\n                                       [id]=\"input.label_short\" [type]=\"input.type\"/>\n                                <mat-select [id]=\"input.label_short\" *ngSwitchCase=\"'dropdown'\"\n                                            [formControlName]=\"input.label_short\">\n                                    <mat-option *ngFor=\"let opt of input.options\" [value]=\"opt.key\">\n                                        {{ opt.value | translate }}\n                                    </mat-option>\n                                </mat-select>\n                            </div>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex justify-center m-5\">\n                        <button mat-button\n                                class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\"\n                                type=\"submit\">\n                            {{ 'CUSTOM-FIELDS.add' | translate }}\n                        </button>\n                    </div>\n                </form>\n            </mat-expansion-panel>\n        </mat-accordion>\n        <div class=\"custom-fields-control w-full\">\n            <mat-tab-group>\n                <mat-tab *ngFor=\"let parent of this.parent\" [label]=\"this.translate.instant(parent.label)\">\n                    <div cdkDropListGroup class=\"w-max mx-auto\">\n                        <div class=\"list-container\">\n                            <h2>{{ 'HEADER.inactive' | translate }}</h2>\n                            <div cdkDropList [cdkDropListData]=\"inactiveFields\" (cdkDropListDropped)=\"drop($event)\" class=\"custom-fields-list overflow-auto\">\n                                <span *ngFor=\"let item of inactiveFields; let i = index;\">\n                                    <div cdkDrag class=\"custom-field-box\" *ngIf=\"item.module == parent['id']\">\n                                        <div class=\"text-left\">\n                                            {{item.label}}\n                                            <span class=\"text-gray-400\">\n                                                ({{ 'CUSTOM-FIELDS.' + item.type | translate }})\n                                            </span>\n                                        </div>\n                                        <button mat-button (click)=\"moveToActive(i)\"><i class=\"fa fa-plus\"></i></button>\n                                    </div>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"list-container\">\n                            <h2>{{ 'HEADER.active' | translate }}</h2>\n                            <div cdkDropList [cdkDropListData]=\"activeFields\" (cdkDropListDropped)=\"drop($event)\" class=\"custom-fields-list overflow-auto\">\n                                <span *ngFor=\"let item of activeFields; let i = index;\">\n                                    <div cdkDrag class=\"custom-field-box\" *ngIf=\"item.module == parent['id']\">\n                                        <div class=\"text-left\">\n                                            {{item.label}}\n                                            <span class=\"text-gray-400\">\n                                                ({{ 'CUSTOM-FIELDS.' + item.type | translate }})\n                                            </span>\n                                        </div>\n                                        <button mat-button (click)=\"moveToInactive(i)\"><i class=\"fa fa-minus\"></i></button>\n                                    </div>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {PrivilegesService} from \"./privileges.service\";\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"./notifications/notifications.service\";\n\n@Injectable({\n        providedIn: 'root'\n})\nexport class HasPrivilegeService {\n\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private privilegesService: PrivilegesService,\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        if (route.data.privileges !== undefined){\n            let return_value = true\n            route.data.privileges.forEach((privilege:any) => {\n                let hasPrivilege = this.privilegesService.hasPrivilege(privilege)\n                if (!hasPrivilege){\n                    this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                        this.notify.error(translated)\n                        this.router.navigateByUrl('/home')\n                    });\n                    return_value = false\n                }\n            })\n            return return_value\n        }else{\n          return false\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { LoginRedirectService } from '../services/login-redirect.service';\nimport { LoginRequiredService } from '../services/login-required.service';\n\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { UserProfileComponent } from \"./profile/profile.component\";\nimport { SplitterViewerComponent } from \"./splitter/viewer/viewer.component\";\nimport { SplitterListComponent } from \"./splitter/list/list.component\";\nimport { VerifierViewerComponent } from './verifier/viewer/viewer.component';\nimport { VerifierListComponent } from './verifier/list/list.component';\nimport { UploadComponent } from \"./upload/upload.component\";\nimport { HasPrivilegeService } from \"../services/has-privilege.service\";\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\n    {path: 'home', component: HomeComponent , data: {title: marker('GLOBAL.home')}, canActivate: [LoginRequiredService]},\n    {path: 'login', component: LoginComponent , data: {title: marker('GLOBAL.login')}, canActivate: [LoginRedirectService]},\n    {path: 'logout', component: LogoutComponent , canActivate: [LoginRequiredService]},\n    {path: 'profile/:id', component: UserProfileComponent, canActivate: [LoginRequiredService]},\n    {\n        path: 'splitter/viewer/:id', component: SplitterViewerComponent,\n        data: {title: marker('SPLITTER.viewer'), privileges: ['splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'splitter/list', component: SplitterListComponent,\n        data: {title: marker('SPLITTER.list'), privileges: ['splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {path: 'splitter', redirectTo: 'splitter/list', pathMatch: 'full'},\n    {\n        path: 'verifier/viewer', component: VerifierViewerComponent,\n        data: {title: marker('VERIFIER.viewer'), privileges: ['verifier']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'verifier/list', component: VerifierListComponent,\n        data: {title: marker('VERIFIER.list'), privileges: ['verifier']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {path: 'verifier', redirectTo: 'verifier/list', pathMatch: 'full'},\n    {\n        path: 'upload', component: UploadComponent,\n        data: {title: marker('GLOBAL.upload'), privileges: ['upload']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n\n    {path: '404', component: NotFoundComponent}, // This two routes (** and 404) need to be the last of const routes: Routes variable\n    {path: '**', redirectTo: '404'}, // if routes doesn't exists, redirect to 404, display a popup and then redirect to login\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\n\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss']\n})\nexport class SplitterListComponent implements OnInit {\n\n    constructor(\n        private localeStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.localeStorageService.save('splitter_or_verifier', 'splitter')\n    }\n\n}\n","<p>list works!</p>\n","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppMaterialModule } from './app-material.module';\nimport { ServicesModule } from '../services/services.module';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule, TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient} from \"@angular/common/http\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsRoutingModule } from './settings/settings-routing.module';\nimport { AppComponent } from './app.component';\nimport { VerifierViewerComponent } from './verifier/viewer/viewer.component';\nimport { VerifierListComponent } from './verifier/list/list.component';\nimport { SplitterViewerComponent } from './splitter/viewer/viewer.component';\nimport { SplitterListComponent } from './splitter/list/list.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from \"./logout/logout.component\";\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserProfileComponent } from './profile/profile.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { NgxFileDragDropModule } from \"ngx-file-drag-drop\";\nimport { UsersListComponent} from './settings/general/users/list/users-list.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { MatPaginatorIntl } from \"@angular/material/paginator\";\nimport { CustomMatPaginatorIntl } from \"./custom-mat-paginator\";\nimport { LastUrlService } from \"../services/last-url.service\";\nimport { AboutUsComponent } from './settings/general/about-us/about-us.component';\nimport { VersionUpdateComponent } from './settings/general/version-update/version-update.component';\nimport { CreateUserComponent } from './settings/general/users/create/create-user.component';\nimport { UpdateUserComponent } from './settings/general/users/update/update-user.component';\nimport { RolesListComponent } from './settings/general/roles/list/roles-list.component';\nimport { UpdateRoleComponent } from './settings/general/roles/update/update-role.component';\nimport { CreateRoleComponent } from './settings/general/roles/create/create-role.component';\nimport { LoaderComponent } from './loader.component';\nimport { CustomFieldsComponent } from './settings/general/custom-fields/custom-fields.component';\nimport { FormListComponent } from './settings/verifier/form/list/form-list.component';\nimport { FormBuilderComponent } from './settings/verifier/form/builder/form-builder.component';\nimport { NgsgModule } from 'ng-sortgrid'\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, 'assets/i18n/frontend/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VerifierViewerComponent,\n    VerifierListComponent,\n    SplitterListComponent,\n    SplitterViewerComponent,\n    LoginComponent,\n    LogoutComponent,\n    HomeComponent,\n    MenuComponent,\n    NotFoundComponent,\n    UserProfileComponent,\n    UploadComponent,\n    UsersListComponent,\n    SettingsComponent,\n    AboutUsComponent,\n    VersionUpdateComponent,\n    RolesListComponent,\n    CreateUserComponent,\n    UpdateUserComponent,\n    UpdateRoleComponent,\n    CreateRoleComponent,\n    LoaderComponent,\n    CustomFieldsComponent,\n    FormBuilderComponent,\n    FormListComponent,\n    FormBuilderComponent\n  ],\n    imports: [\n        BrowserModule,\n        SettingsRoutingModule,\n        AppRoutingModule,\n        AppMaterialModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ServicesModule,\n        NgsgModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'fra',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n        FormsModule,\n        NgxFileDragDropModule,\n        DragDropModule,\n    ],\n  providers: [\n    Title,\n    TranslateService,\n    LastUrlService,\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    {\n      provide: MatPaginatorIntl,\n      useClass: CustomMatPaginatorIntl\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n      private routerExtService: LastUrlService,\n  ){}\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\nexport interface ConfirmData {\n    confirmTitle : string,\n    confirmText : string,\n    confirmButton : string,\n    confirmButtonColor : string,\n    cancelButton : string,\n}\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss']\n})\n\nexport class ConfirmDialogComponent implements OnInit {\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmData,\n    ) { }\n\n    ngOnInit(): void {}\n}","<h2 mat-dialog-title>{{ data.confirmTitle }}</h2>\n<hr class=\"border-green-400 -mt-4 mb-4\">\n<mat-dialog-content class=\"mat-typography\">\n    {{ data.confirmText }}\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{ data.cancelButton }}</button>\n    <button mat-button [mat-dialog-close]=\"true\" color=\"{{ data.confirmButtonColor }}\" cdkFocusInitial>{{ data.confirmButton }}</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class VerifierViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewer works!</p>\n","import { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { API_URL } from \"../../app/env\";\n\n@Component({\n    selector: 'custom-snackbar',\n    templateUrl: 'notification.service.html',\n    styleUrls: ['notification.service.scss'],\n})\nexport class CustomSnackbarComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n    dismiss() {\n        this.data.close();\n    }\n}\n\n@Injectable()\nexport class NotificationService {\n    constructor(\n        public translate: TranslateService,\n        private router: Router,\n        public snackBar: MatSnackBar)\n    { }\n\n    success(message: string) {\n        const duration = this.getMessageDuration(message, 2000);\n        const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n            duration: duration,\n            panelClass: ['success-snackbar', 'mt-20', 'mr-3'],\n            verticalPosition : 'top',\n            horizontalPosition: 'right',\n            data: { message: message, icon: 'info-circle', close: () => {snackBar.dismiss()} }\n        });\n    }\n\n    error(message: string, url: any = null) {\n        const duration = this.getMessageDuration(message, 8000);\n        const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n            duration: duration,\n            panelClass: ['error-snackbar', 'mt-20', 'mr-3'],\n            verticalPosition : 'top',\n            horizontalPosition: 'right',\n            data: { url: url, message: message, icon: 'exclamation-triangle', close: () => {snackBar.dismiss()} }\n        });\n    }\n\n    handleErrors(err: any, route='') {\n        if (err.status === 0 && err.statusText === 'Unknown Error') {\n            let message = this.translate.instant('ERROR.connection_failed') + ' : ' + this.translate.instant('ERROR.is_server_up', {server: API_URL});\n            this.error(message);\n            if (this.router.url !== '/login')\n                this.router.navigate(['/logout']);\n        } else if (err.error !== undefined) {\n            if (err.error.errors !== undefined) {\n                this.error(err.error.errors + ' : ' + err.error.message, err.url);\n                if (err.status === 403 || err.status === 404)\n                    this.router.navigate(['/login']).then();\n                else if (err.error.errors == this.translate.instant('ERROR.jwt_error'))\n                    this.router.navigate(['/logout']).then();\n            } else if (err.error.exception !== undefined)\n                this.error(err.error.exception[0].message, err.url);\n            else if (err.error.error !== undefined) {\n                if (err.error.error[0] !== undefined)\n                    this.error(err.error.error[0].message, err.url);\n                else\n                    this.error(err.error.error.message, err.url);\n            } else\n                this.error(`${err.status} : ${err.statusText}`, err.url);\n        } else\n            this.error(err);\n\n        if (route){\n            this.router.navigate([route]).then()\n        }\n    }\n\n    getMessageDuration(message: string, minimumDuration: number) {\n        const duration = (message.length / 25) * 1000;\n        const maxDuration = 10000;\n        if (duration < minimumDuration) {\n            return minimumDuration;\n        } else if (duration > maxDuration) {\n            return maxDuration;\n        }\n        return duration;\n    }\n}\n","<div class=\"notif-container\" (click)=\"dismiss()\">\n    <div class=\"notif-container-icon\">\n        <i class=\"fa fa-{{data.icon}} fa-2x\"></i>\n    </div>\n    <div class=\"notif-container-content\">\n        <div class=\"notif-container-content-msg\">\n            <div [innerHTML]=\"data.url\"></div>\n            <div [innerHTML]=\"data.message\"></div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrivilegesService {\n\n    constructor(\n        private userService: UserService\n    ) { }\n\n    hasPrivilege(privilege_id: any) {\n        let found = false\n        let user_privileges = this.userService.getUserFromLocal()['privileges']\n        if (user_privileges){\n            if (user_privileges == '*')\n                return true\n\n            user_privileges.forEach((element: any) => {\n                if (privilege_id == element){\n                    found = true\n                }\n            })\n            return found\n        }\n        return false\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"edissyum text-center mt-10 text-2xl\" style=\"line-height: 35px !important;\">\n            Société Edissyum <br>\n            129 Boulevard Louis Giraud <br>\n            84200 Carpentras\n        </div>\n        <div class=\"logo flex justify-center items-center gap-48 mt-12\">\n            <div id=\"verifier\">\n                <img src=\"assets/imgs/logo_verifier.png\" alt=\"Open-Capture Verifier\">\n                <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                <h3 class=\"mt-6\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n            </div>\n            <div id=\"splitter\">\n                <img src=\"assets/imgs/logo_splitter.png\" alt=\"Open-Capture Splitter\">\n                <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                <h3 class=\"mt-6\">{{ 'ABOUT-US.lead_dev' | translate }} : BRICH Oussama</h3>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {Router} from \"@angular/router\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n  loading : boolean = true\n  constructor(\n      public router: Router,\n      public serviceSettings: SettingsService,\n      public privilegesService: PrivilegesService\n  ) { }\n\n  ngOnInit(): void {\n    this.loading = false\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user : any = {};\n\n    constructor(\n        private http: HttpClient,\n        private localStorage: LocalStorageService,\n    ) {\n    }\n\n    setUser(value: any) {\n        this.user = value;\n    }\n\n    getUser(){\n        return this.user;\n    }\n\n    getUserFromLocal() {\n        let token = this.getTokenAuth();\n        if (token) {\n            return JSON.parse(atob(<string>token));\n        }\n    }\n\n    getTokenAuth() {\n        return this.localStorage.getCookie('OpenCaptureForInvoicesToken_2');\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-role.component.html',\n    styleUrls: ['./create-role.component.scss']\n})\nexport class CreateRoleComponent implements OnInit {\n    loading : boolean = true;\n    privileges: any;\n    rolePrivileges: any[] = [];\n    roleForm: any[] = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init()\n\n        this.http.get(API_URL + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    isValidForm() {\n        let state = true\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {};\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            let role_privileges: any[] = []\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] == element2){\n                        role_privileges.push(element['id'])\n                    }\n                })\n            })\n\n            this.http.post(API_URL + '/ws/roles/create', {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    let newRoleId = data.id\n                    this.http.put(API_URL + '/ws/roles/updatePrivilege/' + newRoleId, {'privileges': role_privileges}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.notify.success(this.translate.instant('ROLE.created'))\n                            this.router.navigate(['/settings/general/roles/'])\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err)\n                            // this.notify.handleErrors(err, '/settings/general/roles/');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error = undefined;\n        this.roleForm.forEach(element => {\n            if (element.id == field){\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        })\n        return error\n    }\n\n    hasPrivilege(privilege_id: number){\n        let found = false\n        if (this.rolePrivileges){\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege_id == element){\n                    found = true\n                }\n            })\n        }\n        return found\n    }\n\n    getChildsByParent(parent: any){\n        let data: any[] = []\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent == element['parent']){\n                data.push(element['label'])\n            }\n        })\n        return data\n    }\n\n    changePrivilege(event: any){\n        let privilege = event.source.name\n        let checked = event.checked\n        if (!checked){\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege == element){\n                    let index = this.rolePrivileges.indexOf(privilege, 0)\n                    this.rolePrivileges.splice(index, 1)\n                }\n            })\n        }else{\n            this.rolePrivileges.push(privilege)\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-2 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of roleForm\">\n                    <mat-form-field *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <mat-tab-group *ngIf=\"this.privileges\" dynamicHeight>\n                <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                    <div class=\"grid grid-cols-4 gap-x-60 gap-y-10 mt-10\">\n                        <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                          [name]=\"privilege\"\n                                          [checked]=\"this.hasPrivilege(privilege)\"\n                                          (change)=\"changePrivilege($event)\">\n                            {{ 'PRIVILEGES.' + privilege | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <div class=\"flex justify-center items-center mt-10\">\n            <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" (click)=\"onSubmit()\" mat-button>\n                {{ 'ROLE.create' | translate }}\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {LocalStorageService} from \"./local-storage.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public headers : HttpHeaders;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private userService: UserService,\n        private localStorage: LocalStorageService,\n    ) {\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    generateHeaders(){\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    setCachedUrl(url: string) {\n        this.localStorage.save('OpenCaptureForInvoicesCachedUrl', url);\n    }\n\n    getCachedUrl() {\n        return this.localStorage.get('OpenCaptureForInvoicesCachedUrl');\n    }\n\n    cleanCachedUrl() {\n        return this.localStorage.remove('OpenCaptureForInvoicesCachedUrl');\n    }\n\n    setTokenCustom(name: string, token: string) {\n        this.localStorage.save(name, token);\n    }\n\n    getTokenCustom(name: string){\n        return this.localStorage.get(name);\n    }\n\n    setTokens(token: string, token2: string, days_before_exp: number) {\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken', token, days_before_exp);\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken_2', token2, days_before_exp);\n    }\n\n    setTokenAuth(token: string, days_before_exp: number){\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken_2', token, days_before_exp);\n    }\n\n    getToken() {\n        return this.localStorage.getCookie('OpenCaptureForInvoicesToken');\n    }\n\n    clearTokens() {\n        this.localStorage.deleteCookie('OpenCaptureForInvoicesToken');\n        this.localStorage.deleteCookie('OpenCaptureForInvoicesToken_2');\n        this.localStorage.remove('splitter_or_verifier');\n    }\n\n    logout(){\n        this.userService.setUser({});\n        this.clearTokens();\n        this.router.navigateByUrl(\"/login\");\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\nimport {SettingsService} from \"../../services/settings.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-panel',\n    templateUrl: \"settings.component.html\"\n})\n\nexport class SettingsComponent implements OnInit {\n    isMenuOpen : boolean            = this.serviceSettings.getIsMenuOpen();\n    selectedSetting : string        = this.serviceSettings.getSelectedSetting();\n    selectedParentSetting : string  = this.serviceSettings.getSelectedParentSetting();\n    settingListOpenState : boolean  = this.serviceSettings.getSettingListOpenState();\n    settings : any                  = this.serviceSettings.getSettings()\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init()\n        this.selectedSetting = this.serviceSettings.getSelectedSetting();\n        this.selectedParentSetting = this.serviceSettings.getSelectedParentSetting();\n        this.settings = this.serviceSettings.getSettings();\n        this.settings[this.selectedParentSetting].forEach((element: any) => {\n            if (element['id'] == this.selectedSetting){\n                let routeToGo = element.route;\n                if (routeToGo && this.privilegesService.hasPrivilege(element.privilege))\n                    this.router.navigateByUrl(routeToGo).then();\n            }\n        })\n    }\n\n    toggleMenu() {\n        this.isMenuOpen = !this.isMenuOpen;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {LocalStorageService} from \"../../services/local-storage.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    constructor(\n        private authService: AuthService,\n        private userService: UserService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    setValue(value: string){\n        this.localeStorageService.save('splitter_or_verifier', value);\n    }\n}\n","<div class=\"flex relative justify-center items-center gap-8\" style=\"height: 85vh\">\n    <mat-card [class.disabled]=\"!this.privilegesService.hasPrivilege('splitter')\" class=\"text-center w-full lg:w-1/6 shadow-lg transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/splitter/list\" class=\"block\" (click)=\"setValue('splitter')\">\n            <div class=\"bg-splitter bg-100 bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\"></div>\n        </a>\n        <mat-card-subtitle>\n            {{ 'HOME.splitter' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card [class.disabled]=\"!this.privilegesService.hasPrivilege('verifier')\" class=\"text-center w-full lg:w-1/6 shadow-lg transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/verifier/list\" class=\"block\" (click)=\"setValue('verifier')\">\n            <div class=\"bg-verifier bg-60 bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\"></div>\n        </a>\n        <mat-card-subtitle>\n            {{ 'HOME.verifier' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-create-user',\n    templateUrl: './create-user.component.html',\n    styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n    loading     : boolean = true\n    roles       : any[] = [];\n    userForm    : any[] = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init()\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable){\n                        this.roles.push(element)\n                    }\n                });\n                this.userForm.forEach(element => {\n                    if (element.id == 'role'){\n                        element.values = this.roles\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.userForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    // @ts-ignore\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user : any = {};\n            this.userForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            if (user['password'] !== user['password_check']){\n                this.notify.handleErrors('USER.password_mismatch');\n                return of(false);\n            }\n\n            this.http.post(API_URL + '/ws/users/new', user, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.created'))\n                    this.router.navigate(['/settings/general/users/'])\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error = undefined;\n        this.userForm.forEach(element => {\n            if(element.id == field)\n                if (element.required){\n                    error = this.translate.instant('AUTH.field_required');\n                }\n        })\n        return error\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.create' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-role.component.html',\n    styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    roleId: any;\n    role: any;\n    roles: any[] = [];\n    privileges: any;\n    rolePrivileges: any;\n    roleForm: any[] = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'enabled',\n            label: this.translate.instant('ROLE.enable'),\n            type: 'checkbox',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    // Only used to get translation available while running the extract-translations\n    parent_label = [\n        this.translate.instant('PRIVILEGES.general'),\n        this.translate.instant('PRIVILEGES.administration'),\n        this.translate.instant('PRIVILEGES.verifier'),\n        this.translate.instant('PRIVILEGES.splitter')\n    ]\n    privileges_label = [\n        this.translate.instant('PRIVILEGES.access_verifier'),\n        this.translate.instant('PRIVILEGES.access_splitter'),\n        this.translate.instant('PRIVILEGES.settings'),\n        this.translate.instant('PRIVILEGES.upload'),\n        this.translate.instant('PRIVILEGES.users_list'),\n        this.translate.instant('PRIVILEGES.add_user'),\n        this.translate.instant('PRIVILEGES.update_user'),\n        this.translate.instant('PRIVILEGES.roles_list'),\n        this.translate.instant('PRIVILEGES.add_role'),\n        this.translate.instant('PRIVILEGES.update_role'),\n        this.translate.instant('PRIVILEGES.version_update'),\n        this.translate.instant('PRIVILEGES.custom_fields'),\n        this.translate.instant('PRIVILEGES.forms_list'),\n        this.translate.instant('PRIVILEGES.form_builder')\n    ]\n    // End translation\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init()\n        this.roleId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/roles/getById/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.role = data;\n                for (let field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.roleForm.forEach(element => {\n                            if (element.id == field) {\n                                element.control.setValue(data[field]);\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/general/roles']).then()\n                return of(false);\n            })\n        ).subscribe()\n\n        this.http.get(API_URL + '/ws/privileges/getbyRoleId/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.rolePrivileges = data\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe()\n\n        this.http.get(API_URL + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {};\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            let role_privileges: any[] = []\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] == element2){\n                        role_privileges.push(element['id'])\n                    }\n                })\n            })\n\n            this.http.put(API_URL + '/ws/roles/update/' + this.roleId, {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err)\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(API_URL + '/ws/roles/updatePrivilege/' + this.roleId, {'privileges': role_privileges}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ROLE.updated'))\n                    this.router.navigate(['/settings/general/roles/'])\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error = undefined;\n        this.roleForm.forEach(element => {\n            if (element.id == field){\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        })\n        return error\n    }\n\n    hasPrivilege(privilege_id: number){\n        let found = false\n        this.rolePrivileges.forEach((element: any) => {\n            if (privilege_id == element){\n                found = true\n            }\n        })\n        return found\n    }\n\n    getChildsByParent(parent: any){\n        let data: any[] = []\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent == element['parent']){\n                data.push(element['label'])\n            }\n        })\n        return data\n    }\n\n    changePrivilege(event: any){\n        let privilege = event.source.name\n        let checked = event.checked\n        if (!checked){\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege == element){\n                    let index = this.rolePrivileges.indexOf(privilege, 0)\n                    this.rolePrivileges.splice(index, 1)\n                }\n            })\n        }else{\n            this.rolePrivileges.push(privilege)\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\" *ngIf=\"this.role\">\n                <h3>{{ this.serviceSettings.getTitle() }} : {{ this.role['label'] }} <b>({{ this.role['label_short'] }})</b></h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of roleForm\">\n                    <mat-form-field *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-checkbox class=\"mt-4 -ml-72\"\n                            *ngIf=\"field.type == 'checkbox'\"\n                            [formControl]=\"field.control\">\n                        {{ field.label | translate }}\n                    </mat-checkbox>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <mat-tab-group *ngIf=\"this.privileges && this.rolePrivileges\" dynamicHeight>\n                <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                    <div class=\"grid grid-cols-4 gap-x-60 gap-y-10 mt-10\">\n                        <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                          [name]=\"privilege\"\n                                          [checked]=\"this.hasPrivilege(privilege)\"\n                                          (change)=\"changePrivilege($event)\">\n                            {{ 'PRIVILEGES.' + privilege | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <div class=\"flex justify-center items-center mt-10\">\n            <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" (click)=\"onSubmit()\" mat-button>\n                {{ 'ROLE.update' | translate }}\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {DateAdapter, MAT_DATE_LOCALE} from \"@angular/material/core\";\nimport {LocaleService} from \"../../../../../services/locale.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.scss'],\n})\nexport class FormBuilderComponent implements OnInit {\n    loading = true\n    form: any = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'default': {\n            'control': new FormControl(),\n        }\n    }\n    formId: any;\n    creationMode: boolean = true\n    labelType = [\n        this.translate.instant('TYPES.text'),\n        this.translate.instant('TYPES.textarea'),\n        this.translate.instant('TYPES.date'),\n        this.translate.instant('TYPES.select')\n    ]\n\n    fieldCategories: any[] = [\n        {\n            'id': 'accounts',\n            'label': this.translate.instant('ACCOUNTS.accounts')\n        },\n        {\n            'id': 'facturation',\n            'label': this.translate.instant('FACTURATION.facturation')\n        },\n        {\n            'id': 'other',\n            'label': this.translate.instant('FORMS.other')\n        }\n    ];\n    availableFieldsParent = [\n        {\n            'id': 'accounts_fields',\n            'label': this.translate.instant('ACCOUNTS.accounts'),\n            'values': [\n                {\n                    id: 'name',\n                    label: this.translate.instant('ACCOUNTS.name'),\n                    unit: 'accounts',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'siret',\n                    label: this.translate.instant('ACCOUNTS.siret'),\n                    unit: 'accounts',\n                    type: 'text',\n                    required: false,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'siren',\n                    label: this.translate.instant('ACCOUNTS.siren'),\n                    unit: 'accounts',\n                    type: 'text',\n                    required: false,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'vat_number',\n                    label: this.translate.instant('ACCOUNTS.vat_number'),\n                    unit: 'accounts',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'address1',\n                    label: this.translate.instant('ADDRESSES.address_1'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'address2',\n                    label: this.translate.instant('ADDRESSES.address_2'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'postal_code',\n                    label: this.translate.instant('ADDRESSES.postal_code'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'city',\n                    label: this.translate.instant('ADDRESSES.city'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'country',\n                    label: this.translate.instant('ADDRESSES.country'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n            ]\n        },\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'order_number',\n                    label: this.translate.instant('FACTURATION.order_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'delivery_number',\n                    label: this.translate.instant('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'invoice_number',\n                    label: this.translate.instant('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'invoice_date',\n                    label: this.translate.instant('FACTURATION.invoice_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'invoice_due_date',\n                    label: this.translate.instant('FACTURATION.invoice_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'vat_rate',\n                    label: this.translate.instant('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: this.translate.instant('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'vat_amount',\n                    label: this.translate.instant('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'accounting_plan',\n                    label: this.translate.instant('FACTURATION.accounting_plan'),\n                    unit: 'facturation',\n                    type: 'select',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'total_ttc',\n                    label: this.translate.instant('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    class: \"w-1/3\"\n                },\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': this.translate.instant('FORMS.custom_fields'),\n            'values': []\n        },\n    ]\n    fields: any = {\n        'accounts': [],\n        'facturation': [],\n        'other': []\n    }\n    classList: any[] = [\n        {\n            'id': 'w-full',\n            'label': '1'\n        },\n        {\n            'id': 'w-1/2',\n            'label': '1/2'\n        },\n        {\n            'id': 'w-30',\n            'label': '1/3'\n        },\n        {\n            'id': 'w-1/3',\n            'label': '1/33'\n        },\n        {\n            'id': 'w-1/4',\n            'label': '1/4'\n        },\n        {\n            'id': 'w-1/5',\n            'label': '1/5'\n        }\n    ]\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private _adapter: DateAdapter<any>,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this._adapter.setLocale(this.localeService.matLang);\n        this.serviceSettings.init()\n        this.formId = this.route.snapshot.params['id'];\n        if (this.formId) {\n            this.creationMode = false\n\n            this.http.get(API_URL + '/ws/forms/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    for (let field in this.form){\n                        if (this.form.hasOwnProperty(field)){\n                            for (let info in data){\n                                if (data.hasOwnProperty(info)){\n                                    if (info == field){\n                                        this.form[field].control.value = data[info]\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n\n            this.http.get(API_URL + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.customFields) {\n                        for (let field in data.customFields) {\n                            if (data.customFields.hasOwnProperty(field)){\n                                if(data.customFields[field].module == 'verifier'){\n                                    for (let parent in this.availableFieldsParent){\n                                        if(this.availableFieldsParent[parent].id == 'custom_fields'){\n                                            this.availableFieldsParent[parent].values.push(\n                                                {\n                                                    id: 'custom_' + data.customFields[field].id,\n                                                    label: data.customFields[field].label,\n                                                    unit: 'custom',\n                                                    type: data.customFields[field].type,\n                                                    required: data.customFields[field].required,\n                                                    class: \"w-1/3\"\n                                                }\n                                            )\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {}, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n\n            this.http.get(API_URL + '/ws/forms/getFields/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.form_fields.fields) {\n                        if(data.form_fields.fields.facturation !== undefined)\n                            this.fields.facturation = data.form_fields.fields.facturation\n                        if(data.form_fields.fields.accounts)\n                            this.fields.accounts = data.form_fields.fields.accounts\n                        if(data.form_fields.fields.other)\n                            this.fields.other = data.form_fields.fields.other\n\n                        for (let category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((current_field: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0\n                                        parent['values'].forEach((child_fields: any) => {\n                                            if (current_field.id == child_fields.id) {\n                                                parent['values'].splice(cpt, 1)\n                                            }\n                                            cpt = cpt + 1\n                                        })\n                                    })\n                                })\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }else{\n            this.loading = false\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        let unit = event.previousContainer.id\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    changeClass(event: any, category: any) {\n        let new_class = event.value\n        let id = event.source.id.replace('_size', '')\n        this.fields[category].forEach((element: any) => {\n            if (element.id == id) {\n                element.class = new_class\n            }\n        })\n    }\n\n    dropFromForm(event: any) {\n        let unit = event.container.id\n        let previousUnit = event.previousContainer.id\n\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(event: any, previousIndex: any, category:any, unit: any){\n        if (unit == 'addresses')\n            unit = 'accounts'\n        for(let parent_field in this.availableFieldsParent){\n            let id = this.availableFieldsParent[parent_field].id.split('_fields')[0]\n            if (id == unit){\n                let currentIndex = this.availableFieldsParent[parent_field]['values'].length\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parent_field]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n\n    }\n\n    storeNewOrder(event: any, category_id: any) {\n        let tmpCurrentOrder: any[] = []\n        event.currentOrder.forEach((element: any) => {\n            this.fields[category_id].forEach((field: any) => {\n                if (element.id == field.id) {\n                    tmpCurrentOrder.push(element)\n                }\n            })\n        })\n        this.fields[category_id] = tmpCurrentOrder\n    }\n\n    updateForm() {\n        let label = this.form.label.control.value\n        let is_default = this.form.default.control.value\n        if (label){\n            this.http.put(API_URL + '/ws/forms/update/' + this.formId, {'args': {'label' : label, '\"default\"' : is_default}}, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(API_URL + '/ws/forms/updateFields/' + this.formId, this.fields, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.notify.success(this.translate.instant('FORMS.updated'))\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else{\n            this.notify.error('FORMS.label_mandatory')\n        }\n    }\n\n    createForm(){\n        let label = this.form.label.control.value\n        let is_default = this.form.default.control.value\n        if (label){\n            this.http.post(API_URL + '/ws/forms/add', {'args': {'label' : label, '\"default\"' : is_default}}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(API_URL + '/ws/forms/updateFields/' + data.id, this.fields, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe()\n                    this.notify.success(this.translate.instant('FORMS.created'))\n                    this.router.navigateByUrl('settings/verifier/forms').then()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else{\n            this.notify.error('FORMS.label_mandatory')\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n            <button mat-icon-button (click)=\"sidenav2.toggle();\"\n                    class=\"absolute right-2 top-2\">\n                <i class=\"fas fa-stream text-2xl\"></i>\n            </button>\n        </div>\n        <div *ngIf=\"!loading\" class=\"overflow-auto\" style=\"height: calc(100% - 64px)\">\n            <div class=\"flex flex-wrap justify-center items-center mx-6\">\n                <mat-form-field class=\"w-3/4 mt-6\">\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <div class=\"w-1/4 flex justify-center mt-1\">\n                    <mat-slide-toggle [formControl]=\"this.form['default'].control\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n            </div>\n            <ng-container *ngFor=\"let category of fieldCategories; let i = index\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white\" style=\"top: 2.5rem; left:2.5rem; width:130px\">\n                    {{ category['label'] | translate }}\n                </div>\n                <div class=\"border-green-400 border rounded-lg mx-6 m-7\">\n                    <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" id=\"{{ category['id'] }}\"\n                         class=\"flex flex-wrap cursor-pointer w-full my-3\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.fields[category['id']]; let index = index\" class=\"test flex items-center px-3 overflow-hidden\" [class]=\"field.class\"\n                             ngSortGridGroup=\"{{ category['id'] }}\" ngSortgridItem [ngSortGridItems]=\"fields[category['id']]\" (sorted)=\"storeNewOrder($event, category['id'])\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <mat-form-field class=\"right-0 w-full form-builder\"\n                                                [matTooltip]=\"this.translate.instant(field['label']) + ' (' + this.translate.instant('TYPES.' + field['type']) + ')'\">\n                                    <i cdkDrag class=\"fas fa-trash\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <mat-label class=\"border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        <b>{{ field.label | translate }}</b> ({{ 'TYPES.' + field.type | translate }})\n                                    </mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                    <mat-select [id]=\"field.id + '_size'\" class=\"relative float-right w-1/5\" [(ngModel)]=\"field.class\" (selectionChange)=\"changeClass($event, category['id'])\">\n                                        <mat-option *ngFor=\"let _class of classList\" [value]=\"_class.id\">\n                                            {{ _class.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <mat-form-field class=\"right-0 w-full form-builder\"\n                                                [matTooltip]=\"this.translate.instant(field['label']) + ' (' + this.translate.instant('TYPES.' + field['type']) + ')'\">\n                                    <i cdkDrag class=\"fas fa-trash\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <mat-label class=\"border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        <b>{{ field.label | translate }}</b> ({{ 'TYPES.' + field.type | translate }})\n                                    </mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                    <mat-select [id]=\"field.id + '_size'\" class=\"relative float-right w-1/5\" [(ngModel)]=\"field.class\" (selectionChange)=\"changeClass($event, category['id'])\">\n                                        <mat-option *ngFor=\"let _class of classList\" [value]=\"_class.id\">\n                                            {{ _class.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <mat-form-field class=\"right-0 w-full form-builder\"\n                                                [matTooltip]=\"this.translate.instant(field['label']) + ' (' + this.translate.instant('TYPES.' + field['type']) + ')'\">\n                                    <i cdkDrag class=\"fas fa-trash\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <mat-label class=\"border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        <b>{{ field.label | translate }}</b> ({{ 'TYPES.' + field.type | translate }})\n                                    </mat-label>\n                                    <input class=\"cursor-pointer\" matInput readonly>\n                                    <mat-select [id]=\"field.id + '_size'\" class=\"relative float-right w-1/5\" [(ngModel)]=\"field.class\" (selectionChange)=\"changeClass($event, category['id'])\">\n                                        <mat-option *ngFor=\"let _class of classList\" [value]=\"_class.id\">\n                                            {{ _class.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"right-0 w-full form-builder\"\n                                                [matTooltip]=\"this.translate.instant(field['label']) + ' (' + this.translate.instant('TYPES.' + field['type']) + ')'\">\n                                    <i cdkDrag class=\"fas fa-trash\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                    <mat-label class=\"border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        <b>{{ field.label | translate }}</b> ({{ 'TYPES.' + field.type | translate }})\n                                    </mat-label>\n                                    <input class=\"cursor-pointer\" matInput readonly>\n                                    <mat-select [id]=\"field.id + '_size'\" class=\"relative float-right w-1/5\" [(ngModel)]=\"field.class\" (selectionChange)=\"changeClass($event, category['id'])\">\n                                        <mat-option *ngFor=\"let _class of classList\" [value]=\"_class.id\">\n                                            {{ _class.label }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <div class=\"flex justify-center items-center\">\n                <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                    <span class=\"block\" (click)=\"createForm()\" *ngIf=\"creationMode\">{{ \"FORMS.create\" | translate }}</span>\n                    <span class=\"block\" (click)=\"updateForm()\" *ngIf=\"!creationMode\">{{ \"FORMS.modify\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"FORMS.available_fields\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group style=\"height: calc(100% - 64px)\" *ngIf=\"!loading\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {API_URL} from \"../app/env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {AuthService} from \"./auth.service\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocaleService {\n    currentLang: string = 'fra'\n    matLang: string = 'fr-FR'\n    langs: [] = []\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService\n    ) {}\n\n    changeLocale(data: any) {\n        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getToken())\n        this.http.get(API_URL + '/ws/i18n/changeLanguage/' + data.value, {headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n        this.currentLang = data.value\n        this.translate.use(data.value)\n    }\n\n    getCurrentLocale() {\n        this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.currentLang = data.lang\n                if (this.currentLang != 'fra'){\n                    this.matLang = 'en-GB'\n                }\n                this.translate.use(this.currentLang)\n            }),\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    getLocales() {\n        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getToken())\n        this.http.get(API_URL + '/ws/i18n/getAllLang', {headers}).pipe(\n            tap((data: any) => {\n                this.langs = data.langs\n            }),\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n}\n","import {MatPaginatorIntl} from \"@angular/material/paginator\";\nimport {Injectable} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {API_URL} from \"./env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {NotificationService} from \"../services/notifications/notifications.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable()\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\n    constructor(\n        private http: HttpClient,\n        private notify: NotificationService,\n        private translate: TranslateService\n    ) {\n        super();\n        this.getAndInitTranslations();\n    }\n\n    getAndInitTranslations() {\n        this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.translate.use(data.lang)\n                this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                    this.itemsPerPageLabel = translated;\n                });\n                this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                    this.nextPageLabel = translated;\n                });\n                this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                    this.firstPageLabel = translated;\n                });\n                this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                    this.lastPageLabel = translated;\n                });\n                this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                    this.previousPageLabel = translated;\n                });\n                this.changes.next();\n            }),\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    getRangeLabel = (page: number, pageSize: number, length: number) =>  {\n        if (length == 0 || pageSize == 0) { return `0 de ${length}`; }\n\n        length = Math.max(length, 0);\n\n        const startIndex = page * pageSize;\n\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ?\n            Math.min(startIndex + pageSize, length):\n                startIndex + pageSize;\n\n        const nbPage = Math.ceil(length / pageSize);\n        //return `${startIndex + 1} - ${endIndex} / ${length} (${page})`;\n        return this.translate.instant('PAGINATOR.page') + ` ${page + 1} / ${nbPage}`;\n    }\n}","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LoginRequiredService } from \"../../services/login-required.service\";\nimport { HasPrivilegeService } from \"../../services/has-privilege.service\";\nimport { UsersListComponent } from \"./general/users/list/users-list.component\";\nimport { RolesListComponent } from \"./general/roles/list/roles-list.component\";\nimport { CreateUserComponent } from \"./general/users/create/create-user.component\";\nimport { AboutUsComponent } from './general/about-us/about-us.component';\nimport { UpdateUserComponent } from \"./general/users/update/update-user.component\";\nimport { CreateRoleComponent } from \"./general/roles/create/create-role.component\";\nimport { UpdateRoleComponent } from \"./general/roles/update/update-role.component\";\nimport { VersionUpdateComponent } from \"./general/version-update/version-update.component\";\nimport { CustomFieldsComponent } from \"./general/custom-fields/custom-fields.component\";\nimport { FormBuilderComponent } from \"./verifier/form/builder/form-builder.component\";\nimport { FormListComponent } from \"./verifier/form/list/form-list.component\";\n\nconst routes: Routes = [\n    {\n        path: 'settings', component: SettingsComponent,\n        data: {title: marker('GLOBAL.settings'), privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n// --- General\n    // Users\n    {\n        path: 'settings/general/users', component: UsersListComponent,\n        data: {title: marker('SETTINGS.users_list'), privileges: ['settings', 'users_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/new', component: CreateUserComponent,\n        data: {title: marker('SETTINGS.create_user'), privileges: ['settings', 'add_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/update/:id', component: UpdateUserComponent,\n        data: {title: marker('USER.update'), privileges: ['settings', 'update_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    // END Users\n\n    // Roles\n    {\n        path: 'settings/general/roles', component: RolesListComponent,\n        data: {title: marker('SETTINGS.roles_list'), privileges: ['settings', 'roles_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/new', component: CreateRoleComponent,\n        data: {title: marker('SETTINGS.create_role'), privileges: ['settings', 'add_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/update/:id', component: UpdateRoleComponent,\n        data: {title: marker('ROLE.update'), privileges: ['settings', 'update_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    // END Roles\n    {\n        path: 'settings/general/about-us', component: AboutUsComponent,\n        data: {title: marker('SETTINGS.abouts_us')},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/general/version-update', component: VersionUpdateComponent,\n        data: {title: marker('SETTINGS.version_and_update'), privileges: ['settings', 'version_update']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/general/custom-fields', component: CustomFieldsComponent,\n        data: {title: marker('SETTINGS.custom_fields'), privileges: ['settings', 'custom_fields']},\n        canActivate: [LoginRequiredService]\n    },\n// --- END General\n// --- Verifier\n    {\n        path: 'settings/verifier/forms', component: FormListComponent,\n        data: {title: marker('SETTINGS.list_forms'), privileges: ['settings', 'forms_list']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/new', component: FormBuilderComponent,\n        data: {title: marker('SETTINGS.form_builder'), privileges: ['settings', 'form_builder']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/edit/:id', component: FormBuilderComponent,\n        data: {title: marker('SETTINGS.form_update'), privileges: ['settings', 'form_builder']},\n        canActivate: [LoginRequiredService]\n    },\n// -- END Verifier\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class SettingsRoutingModule {}","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {API_URL} from \"../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    headers     : HttpHeaders = this.authService.headers;\n    userId      : any;\n    profile     : any;\n    roles       : any[] = [];\n    profileForm : any[] = [\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'old_password',\n            label: this.translate.instant('USER.old_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'new_password',\n            label: this.translate.instant('USER.new_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    public loading: boolean = true;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private privilegeService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(){\n        this.userId = this.route.snapshot.params['id'];\n\n        if (this.userId != this.userService.user.id){\n            if (!this.privilegeService.hasPrivilege('update_user')){\n                this.notify.error('ERROR.unauthorized')\n                this.router.navigateByUrl('/home')\n            }\n        }\n\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable){\n                        this.roles.push(element)\n                    }else{\n                        if((this.userService.getUser().privileges == '*')){\n                            this.roles.push(element)\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n\n        this.http.get(API_URL + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.profile = data;\n                for (let field in this.profile){\n                    if (this.profile.hasOwnProperty(field)){\n                        this.profileForm.forEach(element => {\n                            if (element.id == field){\n                                element.control.value = this.profile[field];\n                                if (element.id == 'role'){\n                                    element.values = this.roles\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false ),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.profileForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit(){\n        if(this.isValidForm()){\n            const user : any = {};\n            this.profileForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(\n                API_URL + '/ws/users/update/' + this.userId,{'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('USER.profile_updated'));\n                    if (this.userId == this.userService.user.id){\n                        this.userService.setUser(data.user);\n                        this.authService.setTokenAuth(btoa(JSON.stringify(this.userService.getUser())), data.days_before_exp);\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error = '';\n        this.profileForm.forEach(element => {\n            if(element.id == field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        })\n        return error\n    }\n}\n","<div *ngIf=\"!loading\" class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            <span *ngIf=\"this.userId == this.userService.user.id\">{{ 'USER.modify_my_profile' | translate }}</span>\n            <span *ngIf=\"this.userId != this.userService.user.id\">{{ 'USER.modify_profile_of' | translate }} {{this.profile['username']}}</span>\n        </mat-card-title>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of profileForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [disabled]=\"this.userService.getUserFromLocal()['privileges'] != '*'\" [(value)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.modify' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss']\n})\nexport class FormListComponent implements OnInit {\n    loading: boolean            = true\n    columnsToDisplay: string[]  = ['id', 'label', 'default', 'enabled', 'actions'];\n    pageSize : number           = 10;\n    pageIndex: number           = 0;\n    total: number               = 0;\n    offset: number              = 0;\n    forms : any                 = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init()\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('settings/verifier/forms') || lastUrl == '/'){\n            if (this.localeStorageService.get('formsPageIndex'))\n                this.pageIndex = parseInt(<string>this.localeStorageService.get('formsPageIndex'))\n            this.offset = this.pageSize * (this.pageIndex)\n        }else\n            this.localeStorageService.remove('formsPageIndex')\n\n        this.loadForms()\n    }\n\n    onPageChange(event: any){\n        this.pageSize = event.pageSize\n        this.offset = this.pageSize * (event.pageIndex)\n        this.localeStorageService.save('formsPageIndex', event.pageIndex)\n        this.loadForms()\n    }\n\n    loadForms(): void {\n        this.loading = true\n        this.http.get(API_URL + '/ws/forms/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.total = data.forms[0].total\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    deleteConfirmDialog(form_id: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.deleteForm(form_id)\n            }\n        });\n    }\n\n    disableConfirmDialog(form_id: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.disableForm(form_id)\n            }\n        });\n    }\n\n    enableConfirmDialog(form_id: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.enableForm(form_id)\n            }\n        });\n    }\n\n    deleteForm(form_id: number){\n        if (form_id !== undefined){\n            this.http.delete(API_URL + '/ws/forms/delete/' + form_id, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    disableForm(form_id: number){\n        if (form_id !== undefined){\n            this.http.put(API_URL + '/ws/forms/disable/' + form_id, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    enableForm(forms_id: number){\n        if (forms_id !== undefined){\n            this.http.put(API_URL + '/ws/forms/enable/' + forms_id, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    sortData(sort: Sort){\n        let data = this.forms.slice()\n        if(!sort.active || sort.direction === ''){\n            this.forms = data\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort matSortDisableClear [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"default\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.default \"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    <span *ngIf=\"!element.default\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled \"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-play fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/forms/builder/edit/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {MAT_DATE_FORMATS, MAT_DATE_LOCALE} from \"@angular/material/core\";\n\nexport const APP_DATE_FORMATS =\n{\n    parse: {\n        dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatTreeModule,\n        MatRippleModule,\n    ],\n    exports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatRippleModule,\n        MatTreeModule,\n    ],\n    providers: [\n        { provide: MAT_DATE_LOCALE, useValue: 'fr-FR' },\n        { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n    ]\n})\nexport class AppMaterialModule { }\n","import {Injectable} from '@angular/core';\nimport {API_URL} from \"../app/env\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {AuthService} from \"./auth.service\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService,\n    ) {\n    }\n\n    readConfig() {\n        return new Promise((resolve) => {\n            this.http.get(API_URL + '/ws/config/readConfig', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.setConfig(data.text)\n                    resolve(true);\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    resolve(false);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        });\n    }\n\n    setConfig(config: any){\n        this.authService.setTokenCustom('OpenCaptureForInvoicesConfig', btoa(JSON.stringify(config)));\n    }\n\n    getConfig(){\n        return JSON.parse(atob(<string>this.authService.getTokenCustom('OpenCaptureForInvoicesConfig')))\n    }\n}\n","import {Injectable, OnInit} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LocalStorageService} from \"./local-storage.service\";\nimport {LastUrlService} from \"./last-url.service\";\nimport {Title} from \"@angular/platform-browser\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SettingsService {\n    isMenuOpen: boolean = true;\n    selectedSetting: string = \"users\";\n    selectedParentSetting: string = \"general\";\n    settingListOpenState: boolean = true;\n    settingsParent: any[] = [\n        {\n            \"id\": \"general\",\n            \"label\": this.translate.instant(\"SETTINGS.general\"),\n        },\n        {\n            \"id\": \"verifier\",\n            \"label\": this.translate.instant(\"SETTINGS.verifier\"),\n        },\n        {\n            \"id\": \"splitter\",\n            \"label\": this.translate.instant(\"SETTINGS.splitter\"),\n        },\n    ];\n    settings: any = {\n        \"general\": [\n            {\n                \"id\"        : \"users\",\n                \"label\"     : this.translate.instant(\"SETTINGS.users_list\"),\n                \"icon\"      : \"fas fa-user\",\n                \"route\"     : '/settings/general/users',\n                \"privilege\" : \"users_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : 'add_user',\n                        \"label\"     : this.translate.instant(\"USER.add\"),\n                        \"route\"     : \"/settings/general/users/new\",\n                        \"privilege\" : \"add_user\",\n                        \"icon\"      : \"fas fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_user',\n                        \"label\"             : this.translate.instant(\"USER.update\"),\n                        \"route\"             : \"/settings/general/users/update/\",\n                        \"icon\"              : \"fas fa-edit\",\n                        \"privilege\"         : \"update_user\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"roles\",\n                \"label\"     : this.translate.instant(\"SETTINGS.roles_list\"),\n                \"icon\"      : \"fas fa-users\",\n                \"route\"     : \"/settings/general/roles\",\n                \"privilege\" : \"roles_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_role\",\n                        \"label\"     : this.translate.instant(\"ROLE.add\"),\n                        \"route\"     : \"/settings/general/roles/new\",\n                        \"privilege\" : \"add_role\",\n                        \"icon\"      : \"fas fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_role',\n                        \"label\"             : this.translate.instant(\"ROLE.update\"),\n                        \"route\"             : \"/settings/general/roles/update/\",\n                        \"icon\"              : \"fas fa-edit\",\n                        \"privilege\"         : \"update_role\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"custom-fields\",\n                \"label\"     : this.translate.instant(\"SETTINGS.custom_fields\"),\n                \"route\"     : \"/settings/general/custom-fields\",\n                \"icon\"      : \"fas fa-code\",\n                \"privilege\" : \"custom_fields\",\n            },\n            {\n                \"id\"        : \"version-update\",\n                \"label\"     : this.translate.instant(\"SETTINGS.version_and_update\"),\n                \"route\"     : \"/settings/general/version-update\",\n                \"icon\"      : \"fas fa-sync\",\n                \"privilege\" : \"update_app\",\n            },\n            {\n                \"id\"        : \"about-us\",\n                \"label\"     : this.translate.instant(\"SETTINGS.abouts_us\"),\n                \"icon\"      : \"fas fa-address-card\",\n                \"route\"     : \"/settings/general/about-us\",\n                \"privilege\" : \"*\"\n            }\n        ],\n        \"verifier\": [\n            {\n                \"id\"        : \"form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fab fa-wpforms\",\n                \"route\"     : \"/settings/verifier/forms\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/verifier/forms/builder/new\",\n                        \"privilege\" : \"add_form\",\n                        \"icon\"      : \"fas fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/verifier/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form\",\n                        \"icon\"              : \"fas fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n        ],\n        \"splitter\": [\n            {\n                \"id\": \"separator\",\n                \"label\": this.translate.instant(\"SETTINGS.document_separator\"),\n                \"icon\": \"fas fa-qrcode\",\n            },\n            {\n                \"id\": \"document-type\",\n                \"label\": this.translate.instant(\"SETTINGS.document_type\"),\n                \"icon\": \"fas fa-file\",\n            },\n            {\n                \"id\": \"connector\",\n                \"label\": this.translate.instant(\"SETTINGS.connector_EDM\"),\n                \"icon\": \"fas fa-link\",\n            }\n        ]\n    };\n    constructor(\n        private titleService: Title,\n        private translate: TranslateService,\n        private routerExtService: LastUrlService,\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    init(){\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('roles') || lastUrl == '/' || lastUrl.includes('users')){\n            let selectedSettings = this.localeStorageService.get('selectedSettings')\n            let selectedParentSettings = this.localeStorageService.get('selectedParentSettings')\n            if (selectedSettings)\n                this.setSelectedSettings(selectedSettings)\n\n            if (selectedParentSettings)\n                this.setSelectedParentSettings(selectedParentSettings)\n        }else{\n            this.localeStorageService.remove('selectedSettings')\n            this.localeStorageService.remove('selectedParentSettings')\n            this.setSelectedSettings(\"users\")\n            this.setSelectedParentSettings('general')\n        }\n    }\n\n    getTitle(){\n        let title = this.titleService.getTitle()\n        title = title.split(' - ')[0]\n        return title\n    }\n\n    changeSetting(settingId: string, settingParentId: string) {\n        this.setSelectedSettings(settingId)\n        this.setSelectedParentSettings(settingParentId)\n        this.localeStorageService.save('selectedSettings', settingId)\n        this.localeStorageService.save('selectedParentSettings',settingParentId)\n    }\n\n    getIsMenuOpen(){\n        return this.isMenuOpen;\n    }\n\n    getSelectedSetting(){\n        return this.selectedSetting;\n    }\n\n    getSelectedParentSetting(){\n        return this.selectedParentSetting;\n    }\n\n    getSettingListOpenState(){\n        return this.settingListOpenState;\n    }\n\n    getSettingsParent(){\n        return this.settingsParent;\n    }\n\n    getSettings(){\n        return this.settings;\n    }\n\n    getSettingsAction(parent_id: any, setting_id: any){\n        let actions = undefined\n        this.settings[parent_id].forEach((element: any) =>{\n            if (element['id'] == setting_id && element['actions']){\n                actions = element['actions']\n            }\n        })\n        return actions\n    }\n\n    setSelectedSettings(value: string){\n        this.selectedSetting = value;\n    }\n\n    setSelectedParentSettings(value: string){\n        this.selectedParentSetting = value;\n    }\n\n    setSettingListOpenState(value: boolean){\n        this.settingListOpenState = value;\n    }\n\n    toggleMenu() {\n        this.isMenuOpen = !this.isMenuOpen;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private authService: AuthService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.authService.logout()\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\nimport {API_URL} from \"../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {NotificationService} from \"../../../services/notifications/notifications.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss']\n})\nexport class VerifierListComponent implements OnInit {\n    loading: boolean = true\n    status: any[] = []\n    defaultStatus: string = 'NEW'\n    batchList: any[] = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today'),\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday'),\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older'),\n        }\n    ]\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        public translate: TranslateService,\n        private localeStorageService: LocalStorageService\n\n    ) {}\n\n    ngOnInit(): void {\n        this.localeStorageService.save('splitter_or_verifier', 'verifier')\n        this.http.get(API_URL + '/ws/status/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status\n                console.log(this.status)\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    changeTab(){\n        this.loading = true\n        setTimeout(() => {this.loading = false}, 1000)\n    }\n\n\n}\n","<div class=\"content\">\n    <mat-tab-group (selectedTabChange)=\"changeTab()\" class=\"batches\" animationDuration=\"0ms\" dynamicHeight>\n        <mat-tab *ngFor=\"let batch of batchList\" [label]=\"this.translate.instant(batch.label)\">\n            <div class=\"flex flex-col\">\n                <mat-form-field class=\"w-1/6 mt-4 m-auto relative z-30\">\n                    <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                    <mat-select [(value)]=\"defaultStatus\">\n                        <mat-option *ngFor=\"let option of status\" [value]=\"option['id']\">\n                            {{ option['label'] }}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n                <hr class=\"w-1/2 m-auto border-green-400 relative z-30\">\n                <div *ngIf=\"loading\">\n                    <app-loader></app-loader>\n                </div>\n                <div class=\"content mx-10 mt-10\" *ngIf=\"!loading\">\n                    <div class=\"list grid grid-cols-4 grid-flow-row gap-4\">\n                        <div *ngFor=\"let t of [1,2,3,4,5,6,7,8,9,10]\" class=\"bg-red-50\">\n                            {{ t }}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </mat-tab>\n    </mat-tab-group>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {FileValidators} from \"ngx-file-drag-drop\";\nimport {API_URL} from \"../env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {LocalStorageService} from \"../../services/local-storage.service\";\n\n\n@Component({\n    selector: 'app-upload',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class UploadComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public localeStorageService: LocalStorageService\n    ) {\n    }\n\n    fileControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    ngOnInit(): void {\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length != 0) {\n            for (let i = 0; i < data.length; i++) {\n                let file_name = data[i].name\n                let file_extension = file_name.split('.').pop();\n                console.log(file_extension)\n                if (file_extension.toLowerCase() != 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    uploadFile(): void {\n        const formData: FormData = new FormData();\n\n        if (this.fileControl.value.length == 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value.length; i++) {\n            if (this.fileControl.status == 'VALID') {\n                formData.append(this.fileControl.value[i].name, this.fileControl.value[i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n        console.log(formData)\n        let splitter_or_verifier = this.localeStorageService.get('splitter_or_verifier')\n        if(splitter_or_verifier !== undefined || splitter_or_verifier !== ''){\n            this.http.post(\n                API_URL + '/ws/' + splitter_or_verifier + '/upload',\n                formData,\n                {\n                    headers: this.authService.headers\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('UPLOAD.upload_success'));\n                }),\n                catchError((err: any) => {\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else{\n            this.notify.handleErrors(this.translate.instant('ERROR.unknow_error'));\n            return;\n        }\n    }\n}","<ngx-file-drag-drop\n        [formControl]=\"fileControl\"\n        [activeBorderColor]=\"'#97BF3D'\"\n        [multiple]=\"true\"\n        [accept]=\"'pdf'\"\n        [displayFileSize]=\"true\"\n        [emptyPlaceholder]=\"'UPLOAD.placeholder' | translate\"\n        [class]=\"'max-w-3xl h-56'\"\n        (valueChanged)=\"checkFile($event)\">\n</ngx-file-drag-drop>\n\n<div class=\"flex justify-center content-center\">\n    <button mat-flat-button\n            (click)=\"uploadFile()\"\n            class=\"mt-5 border-solid border-green-400 border hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n        {{ 'UPLOAD.send' | translate }}\n    </button>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { AppMaterialModule } from '../app/app-material.module';\nimport { CustomSnackbarComponent, NotificationService } from './notifications/notifications.service';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { LastUrlService } from './last-url.service';\n\n@NgModule({\n    imports: [\n        AppMaterialModule,\n        CommonModule\n    ],\n    declarations: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent,\n    ],\n    exports: [],\n    entryComponents: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent\n    ],\n    providers: [NotificationService, LastUrlService]\n})\nexport class ServicesModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Title } from '@angular/platform-browser';\nimport {ActivatedRoute, NavigationEnd, NavigationError, NavigationStart, Router} from '@angular/router';\nimport {catchError, filter, map, tap} from 'rxjs/operators';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport {LocaleService} from \"../services/locale.service\";\nimport {LocalStorageService} from \"../services/local-storage.service\";\nimport {API_URL} from \"./env\";\nimport {of} from \"rxjs\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent implements OnInit {\n    title   : string = 'Open-Capture For Invoices';\n    image   : string = '';\n    loading : boolean = true;\n\n    constructor(\n        private router: Router,\n        public location: Location,\n        private http: HttpClient,\n        private titleService: Title,\n        private notify:NotificationService,\n        private translate: TranslateService,\n        private activatedRoute: ActivatedRoute,\n        private localeService: LocaleService,\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        const appTitle = this.titleService.getTitle();\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(() => {\n                let child = this.activatedRoute.firstChild;\n                let child_image = 'assets/imgs/logo_opencapture.png'\n                if (child) {\n                    while (child.firstChild) {\n                        child = child.firstChild;\n                    }\n                    if (this.router.url != '/home' && !this.router.url.includes('settings')) {\n                        let splitter_or_verifier = this.localeStorageService.get('splitter_or_verifier')\n                        if (splitter_or_verifier != undefined){\n                            if (splitter_or_verifier == 'splitter'){\n                                child_image = 'assets/imgs/logo_splitter.png'\n                            }else{\n                                child_image = 'assets/imgs/logo_verifier.png'\n                            }\n                        }\n                    }\n\n                    if (child.snapshot.data['title']) {\n                        return [child.snapshot.data['title'], child_image];\n                    }\n                }\n                return [appTitle, child_image]\n            })\n        ).subscribe((data: any) => {\n            let ttl = data[0]\n            this.image = data[1]\n            if (this.translate.currentLang == undefined){\n                this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n                    tap((data: any) => {\n                        this.translate.use(data.lang)\n                        this.translate.get(ttl).subscribe((data:any)=> {\n                            this.titleService.setTitle(data + ' - ' + this.title);\n                        });\n                        this.loading = false\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err)\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe()\n            }else{\n                this.translate.get(ttl).subscribe((data:any)=> {\n                    this.titleService.setTitle(data + ' - ' + this.title);\n                });\n                this.loading = false\n            }\n        });\n    }\n}\n","<app-menu [image]=\"this.image\" *ngIf=\"this.location.path() !== '/login' && this.location.path() !== '/404' && loading == this.loading\"></app-menu>\n\n<router-outlet></router-outlet>","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-10\">        <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">            <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"                 height=\"300\" xml:space=\"preserve\">                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">                    <stop offset=\"0%\" stop-color=\"#76B442\">                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"                                 repeatCount=\"indefinite\"></animate>                    </stop>                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"                                 repeatCount=\"indefinite\"></animate>                    </stop>                </linearGradient>                <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>        </svg>    </div></div>","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {NavigationEnd, NavigationStart, Router} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LastUrlService} from \"../../services/last-url.service\";\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(\n        private notify: NotificationService,\n        private router: Router,\n        private translate: TranslateService,\n    ) { }\n\n    ngOnInit(): void {\n        this.translate.get('ERROR.404').subscribe((translated: string) => {\n            this.notify.error(translated)\n            this.router.navigate(['/login'])\n        });\n    }\n\n}\n","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-50\">\n    <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"\n             height=\"300\" xml:space=\"preserve\">\n                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">\n                    <stop offset=\"0%\" stop-color=\"#76B442\">\n                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n\n                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">\n                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n                </linearGradient>\n            <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7\n                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1\n                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4\n                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7\n                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>\n        </svg>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRequiredService implements CanActivate{\n\n    constructor(\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (!this.authService.getToken()) {\n            this.translate.get('AUTH.not_connected').subscribe((translated: string) => {\n                this.authService.setCachedUrl(state.url.replace(/^\\//g, ''));\n                this.notify.error(translated)\n                this.authService.logout()\n            });\n            return false\n        }\n        return true;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-user.component.html',\n    styleUrls: ['./update-user.component.scss']\n})\n\nexport class UpdateUserComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    userId: any;\n    user: any;\n    roles: any[] = [];\n    userForm: any[] = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init()\n        this.userId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element)\n                    } else {\n                        if ((this.userService.getUser().privileges == '*')) {\n                            this.roles.push(element)\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n\n        this.http.get(API_URL + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.user = data;\n                for (let field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.userForm.forEach(element => {\n                            if (element.id == field) {\n                                element.control.setValue(data[field]);\n                                if (element.id == 'role') {\n                                    element.values = this.roles\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.userForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user: any = {};\n            this.userForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(API_URL + '/ws/users/update/' + this.userId, {'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.updated'))\n                    this.router.navigate(['/settings/general/users/'])\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    this.notify.handleErrors(err, '/settings/general/users/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error = undefined;\n        this.userForm.forEach(element => {\n            if (element.id == field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        })\n        return error\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl\"></i>\n            </button>\n            <div class=\"settings_title text-center\" *ngIf=\"this.user\">\n                <h3>{{ this.serviceSettings.getTitle() }} : {{ this.user['firstname'] }} {{ this.user['lastname'] }} <b>({{ this.user['username'] }})</b></h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [readonly]=\"field.id == 'username'\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.update' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}