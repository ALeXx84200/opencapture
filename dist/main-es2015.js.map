{"version":3,"sources":["./src/frontend/services/local-storage.service.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.ts","./src/frontend/app/settings/general/roles/list/roles-list.component.html","./src/frontend/app/login/login.component.ts","./src/frontend/app/login/login.component.html","./src/frontend/services/login-redirect.service.ts","./src/frontend/app/menu/menu.component.ts","./src/frontend/app/menu/menu.component.html","./src/frontend/services/last-url.service.ts","./src/frontend/app/settings/general/users/list/users-list.component.ts","./src/frontend/app/settings/general/users/list/users-list.component.html","./src/frontend/app/settings/verifier/outputs/create/create-output.component.ts","./src/frontend/app/settings/verifier/outputs/create/create-output.component.html","./src/frontend/app/env.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.ts","./src/frontend/app/settings/general/custom-fields/custom-fields.component.html","./src/frontend/services/has-privilege.service.ts","./src/frontend/app/splitter/viewer/splitter-viewer.component.ts","./src/frontend/app/splitter/viewer/splitter-viewer.component.html","./src/frontend/app/app-routing.module.ts","./src/frontend/services/history.service.ts","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.ts","./src/frontend/app/settings/verifier/positions-mask/list/positions-mask-list.component.html","./src/frontend/app/app.module.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.html","./src/frontend/app/settings/verifier/inputs/list/inputs-list.component.ts","./src/frontend/app/settings/verifier/inputs/list/inputs-list.component.html","./src/frontend/services/notifications/notifications.service.ts","./src/frontend/services/notifications/notification.service.html","./src/frontend/services/privileges.service.ts","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/update/update-positions-mask.component.html","./src/frontend/app/settings/general/about-us/about-us.component.ts","./src/frontend/app/settings/general/about-us/about-us.component.html","./src/frontend/services/user.service.ts","./src/frontend/app/settings/general/roles/create/create-role.component.ts","./src/frontend/app/settings/general/roles/create/create-role.component.html","./src/frontend/app/accounts/customers/update/update-customer.component.ts","./src/frontend/app/accounts/customers/update/update-customer.component.html","./src/frontend/services/auth.service.ts","./src/frontend/app/accounts/suppliers/update/update-supplier.component.ts","./src/frontend/app/accounts/suppliers/update/update-supplier.component.html","./src/frontend/app/settings/settings.component.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/frontend/app/home/home.component.ts","./src/frontend/app/home/home.component.html","./src/frontend/app/settings/general/users/create/create-user.component.ts","./src/frontend/app/settings/general/users/create/create-user.component.html","./src/frontend/app/settings/general/roles/update/update-role.component.ts","./src/frontend/app/settings/general/roles/update/update-role.component.html","./src/frontend/app/history/history.component.ts","./src/frontend/app/history/history.component.html","./src/frontend/app/settings/verifier/form/builder/form-builder.component.ts","./src/frontend/app/settings/verifier/form/builder/form-builder.component.html","./src/frontend/services/locale.service.ts","./src/frontend/app/custom-mat-paginator.ts","./src/frontend/app/settings/settings-routing.module.ts","./src/frontend/app/profile/profile.component.ts","./src/frontend/app/profile/profile.component.html","./src/frontend/app/settings/verifier/form/list/form-list.component.ts","./src/frontend/app/settings/verifier/form/list/form-list.component.html","./src/frontend/app/app-material.module.ts","./src/frontend/services/config.service.ts","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.ts","./src/frontend/app/settings/verifier/positions-mask/create/create-positions-mask.component.html","./src/frontend/app/accounts/customers/create/create-customer.component.ts","./src/frontend/app/accounts/customers/create/create-customer.component.html","./src/frontend/services/settings.service.ts","./src/frontend/app/logout/logout.component.ts","./src/frontend/app/accounts/suppliers/create/create-supplier.component.ts","./src/frontend/app/accounts/suppliers/create/create-supplier.component.html","./src/frontend/app/upload/upload.component.ts","./src/frontend/app/upload/upload.component.html","./src/frontend/app/settings/verifier/outputs/update/update-output.component.ts","./src/frontend/app/settings/verifier/outputs/update/update-output.component.html","./src/frontend/app/settings/verifier/inputs/update/update-input.component.ts","./src/frontend/app/settings/verifier/inputs/update/update-input.component.html","./src/frontend/main.ts","./src/frontend/app/verifier/viewer/verifier-viewer.component.ts","./src/frontend/app/verifier/viewer/verifier-viewer.component.html","./src/frontend/app/splitter/list/splitter-list.component.ts","./src/frontend/app/splitter/list/splitter-list.component.html","./src/frontend/app/accounts/customers/list/customers-list.component.ts","./src/frontend/app/accounts/customers/list/customers-list.component.html","./src/frontend/services/services.module.ts","./src/frontend/app/app.component.ts","./src/frontend/app/app.component.html","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.ts","./src/frontend/app/settings/verifier/outputs/list/outputs-list.component.html","./src/frontend/app/settings/verifier/inputs/create/create-input.component.ts","./src/frontend/app/settings/verifier/inputs/create/create-input.component.html","./src/frontend/app/loader.component.ts","./src/frontend/app/not-found/not-found.component.ts","./src/frontend/app/not-found/not-found.component.html","./src/frontend/services/login-required.service.ts","./src/frontend/app/verifier/list/verifier-list.component.ts","./src/frontend/app/verifier/list/verifier-list.component.html","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.ts","./src/frontend/app/accounts/suppliers/list/suppliers-list.component.html","./src/frontend/app/settings/general/users/update/update-user.component.ts","./src/frontend/app/settings/general/users/update/update-user.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n    constructor() {}\n\n    save(id: string, content: any) {\n        localStorage.setItem(id, content);\n    }\n\n    get(id: string) {\n        return localStorage.getItem(id);\n    }\n\n    remove(id: string) {\n        localStorage.removeItem(id);\n    }\n\n    resetLocal() {\n        const arr: string | any[] = [];\n        // Iterate over arr and remove the items by key\n        for (let i = 0; i < arr.length; i++) {\n            localStorage.removeItem(arr[i]);\n        }\n    }\n\n    getCookie(cname: string) {\n        const name = cname + \"=\";\n        const decodedCookie = decodeURIComponent(document.cookie);\n        const ca = decodedCookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    setCookie(cname: string, cvalue: string, exdays: number) {\n        const d = new Date();\n        if (exdays !== 0) {\n            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n            const expires = \"expires=\" + d.toUTCString();\n            document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/;SameSite=Strict\";\n        } else {\n            document.cookie = cname + \"=\" + cvalue + \";path=/;SameSite=Strict\";\n        }\n    }\n\n    deleteCookie(cname: string) {\n        this.setCookie(cname, '', -1);\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from \"@angular/material/form-field\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-roles-list',\n    templateUrl: './roles-list.component.html',\n    styleUrls: ['./roles-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\n\nexport class RolesListComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    columnsToDisplay: string[] = ['id', 'label_short', 'label', 'status', 'actions'];\n    loading: boolean = true;\n    roles: any = [];\n    pageSize: number = 10;\n    pageIndex: number = 0;\n    total: number = 0;\n    offset: number = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('roles/') || lastUrl === '/') {\n            if (this.localeStorageService.get('rolesPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('rolesPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localeStorageService.remove('rolesPageIndex');\n        this.loadRoles();\n    }\n\n    loadRoles(): void {\n        this.http.get(API_URL + '/ws/roles/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.roles[0]) this.total = data.roles[0].total;\n                this.roles = data.roles;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('rolesPageIndex', event.pageIndex);\n        this.loadRoles();\n    }\n\n    deleteConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_delete', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteRole(roleId);\n                this.historyService.addHistory('verifier', 'delete_role', this.translate.instant('HISTORY-DESC.delete-role', {role: role}));\n            }\n        });\n    }\n\n\n    disableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_disable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.disableRole(roleId);\n            }\n        });\n    }\n\n    enableConfirmDialog(roleId: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('ROLE.confirm_enable', {\"role\": role}),\n                confirmButton: this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.enableRole(roleId);\n            }\n        });\n    }\n\n    deleteRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.delete(API_URL + '/ws/roles/delete/' + roleId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                    this.notify.success(this.translate.instant('ROLE.role_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(API_URL + '/ws/roles/disable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableRole(roleId: number) {\n        if (roleId !== undefined) {\n            this.http.put(API_URL + '/ws/roles/enable/' + roleId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadRoles();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.roles.slice();\n        if (!sort.active || sort.direction === '') {\n            this.roles = data;\n            return;\n        }\n\n        this.roles = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort [dataSource]=\"roles\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label_short\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label_short}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'ROLE.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-play fa-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/general/roles/update/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {Validators, FormBuilder} from '@angular/forms';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {API_URL} from \"../env\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {ConfigService} from \"../../services/config.service\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {HistoryService} from \"../../services/history.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n    ) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required]\n        });\n        if (this.localeService.currentLang === undefined) {\n            this.localeService.getCurrentLocale();\n        }\n    }\n\n    onSubmit() {\n        const password = this.loginForm.get('password').value;\n        const username = this.loginForm.get('username').value;\n        if (password && username) {\n            this.http.post(\n                API_URL + '/ws/auth/login',\n                {\n                    'username': username,\n                    'password': password,\n                    'lang': this.localeService.currentLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())), data.body.days_before_exp);\n                    this.authService.generateHeaders();\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        this.historyService.addHistory('general', 'login', this.translate.instant('HISTORY-DESC.login'));\n                        if (this.authService.getCachedUrl()) {\n                            this.router.navigate([this.authService.getCachedUrl()]).then();\n                            this.authService.cleanCachedUrl();\n                        } else {\n                            this.router.navigate(['/home']).then();\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if(this.loginForm.get(field).hasError('required'))\n            return this.translate.instant('AUTH.field_required');\n        return this.translate.instant('ERROR.unknow_error');\n    }\n}\n","<div class=\"mt-32 -mb-32 flex justify-center h-20\">\n    <img src=\"assets/imgs/logo_opencapture.png\" alt=\"Open-Capture For Invoices logo\"/>\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            {{ 'GLOBAL.login' | translate }}\n        </mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                    <input matInput formControlName=\"username\"  type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                    <mat-error *ngIf=\"loginForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                    <input matInput formControlName=\"password\" type=\"password\" placeholder=\"{{ 'USER.password' | translate }}\" required>\n                    <mat-error *ngIf=\"loginForm.controls.password.invalid\">{{ getErrorMessage('password') }}</mat-error>\n                </mat-form-field>\n                <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\">\n                    {{ 'AUTH.login' | translate }}\n                </button>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRedirectService {\n\n    constructor(\n        private authService: AuthService,\n        private router: Router\n    ) {}\n\n    canActivate(): boolean {\n        if (this.authService.getToken()) {\n            this.router.navigateByUrl('/home').then();\n            return false;\n        }\n        return true;\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { UserService } from \"../../services/user.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport { Router } from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\ndeclare var $: any;\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n    animations: [\n        trigger('toggle', [\n            state('hide', style({\n                display: 'none',\n\n            })),\n            state('show', style({\n                display: \"block\",\n            })),\n            transition('show => hide', animate('150ms ease-out')),\n            transition('hide => show', animate('100ms ease-in'))\n        ])\n    ]\n})\n\nexport class MenuComponent implements OnInit {\n    @Input() image: any;\n    profileDropdownCurrentState : string = 'hide';\n    profileSettingsCurrentState : string = 'hide';\n    mobileMenuState             : string = 'hide';\n\n    constructor(\n        public router: Router,\n        public location: Location,\n        public userService: UserService,\n        public translate: TranslateService,\n        public localeService: LocaleService,\n        public privilegesService: PrivilegesService,\n        public localeStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.userService.user = this.userService.getUserFromLocal();\n        if (this.userService.user) {\n            this.localeService.getLocales();\n            this.localeService.getCurrentLocale();\n        }\n        const k = [38, 38, 40, 40, 37, 39, 37, 39, 66, 65];\n        let n = 0;\n        $(document).keydown((e: any) => {\n            if (e.keyCode === k[n++]) {\n                if (n === k.length) {\n                    const audio = new Audio(\"assets/imgs/konami.mp3\");\n                    $('#konami').fadeIn(\"slow\").delay(3000).fadeOut();\n                    audio.play().then();\n                    n = 0;\n                }\n            }\n            else n = 0;\n        });\n    }\n\n    getSplitterOrVerifier() {\n        return this.localeStorageService.get('splitter_or_verifier');\n    }\n\n    toggleProfileDropdown() {\n        this.profileDropdownCurrentState = this.profileDropdownCurrentState === 'hide' ? 'show' : 'hide';\n        this.profileSettingsCurrentState = this.profileDropdownCurrentState === 'show' && this.profileSettingsCurrentState === 'show' ? 'hide' : this.profileSettingsCurrentState;\n    }\n\n    closeprofileDropDown() {\n        this.profileDropdownCurrentState = 'hide';\n    }\n\n    toggleMobileMenu() {\n        this.mobileMenuState = this.mobileMenuState === 'hide' ? 'show' : 'hide';\n    }\n}\n","<nav style=\"background: #f8f9fa\" class=\"shadow-md relative z-30\">\n    <div class=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n        <div class=\"relative flex items-center justify-between h-16 z-50\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                <!-- Mobile menu button-->\n                <button (click)=\"toggleMobileMenu()\"\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-white hover:bg-gray-900 focus:ring-2 focus:ring-inset focus:ring-gray-900\"\n                        aria-expanded=\"false\">\n                    <svg *ngIf=\"mobileMenuState == 'hide'\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"/>\n                    </svg>\n                    <svg *ngIf=\"mobileMenuState == 'show'\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 flex items-center\">\n                    <img class=\"hidden lg:block h-10 w-auto\" [src]=\"this.image\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"hidden sm:block sm:ml-6\">\n                    <div class=\"flex space-x-4\">\n                        <button mat-flat-button routerLink=\"/home\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                           class=\"text-gray-500 bg-transparent hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.home' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/verifier\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() == 'verifier'\"\n                           class=\"text-gray-500 bg-transparent hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/splitter\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() == 'splitter'\"\n                           class=\"text-gray-500 bg-transparent hover:bg-gray-500 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/upload\" [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() != undefined && this.getSplitterOrVerifier() != ''\"\n                                [disabled]=\"!this.privilegesService.hasPrivilege('upload')\"\n                                [class.cursor-not-allowed]=\"!this.privilegesService.hasPrivilege('upload')\"\n                                [class.hover:bg-gray-500]=\"this.privilegesService.hasPrivilege('upload')\"\n                                [class.hover:text-white]=\"this.privilegesService.hasPrivilege('upload')\"\n                                class=\"text-gray-500 bg-transparent px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.upload' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <!-- Profile dropdown -->\n                <div class=\"ml-3 relative mr-2\">\n                    <div *ngIf=\"userService.user\">\n                        <button [class.settings_active]=\"location.path().includes('profile/' + userService.user['id'])\"\n                                mat-mini-fab (click)=\"toggleProfileDropdown()\"\n                                [matTooltip]=\"this.translate.instant('USER.my_profile')\"\n                                class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\"\n                                id=\"user-menu\" aria-haspopup=\"true\">\n                            <i class=\"fas fa-users-cog\"></i>\n                        </button>\n                    </div>\n                    <div [@toggle]=\"profileDropdownCurrentState\" class=\"origin-top-right absolute md:right-0 mt-2 w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50\"\n                         role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\" *ngIf=\"userService.user\">\n                        <span class=\"block text-center mb-2 text-gray-900\" >\n                            <b>{{ userService.user['lastname'] }}</b> {{ userService.user['firstname'] }} ({{ userService.user['username'] }})\n                            <i>{{ userService.user['role']['label'] }}</i>\n                            <hr>\n                        </span>\n                        <a (click)=\"closeprofileDropDown()\" routerLink=\"/profile/{{ userService.user['id'] }}\"\n                           class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\"\n                           role=\"menuitem\">\n                            {{ 'USER.my_profile' | translate }}\n                        </a>\n                        <a (click)=\"closeprofileDropDown()\"\n                           routerLink=\"/logout\"\n                           class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\"\n                           role=\"menuitem\">\n                            {{ 'GLOBAL.log_out' | translate }}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('settings')\">\n                    <button id=\"settings-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/settings\"\n                            [class.settings_active]=\"location.path().includes('settings')\"\n                            [matTooltip]=\"this.translate.instant('GLOBAL.settings')\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fas fa-cog\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative\" *ngIf=\"this.privilegesService.hasPrivilege('history')\">\n                    <button id=\"history-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/history\"\n                            [class.settings_active]=\"location.path().includes('history')\"\n                            [matTooltip]=\"'GLOBAL.history' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fas fa-history\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 mr-2 relative border-l border-green-400 pl-5\" *ngIf=\"this.privilegesService.hasPrivilege('suppliers_list')\">\n                    <button id=\"supplier-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/suppliers\"\n                            [class.settings_active]=\"location.path().includes('accounts/suppliers')\"\n                            [matTooltip]=\"'ACCOUNTS.suppliers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fas fa-building\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative\" *ngIf=\"this.privilegesService.hasPrivilege('customers_list')\">\n                    <button id=\"customer-menu\" aria-haspopup=\"true\" mat-mini-fab routerLink=\"/accounts/customers\"\n                            [class.settings_active]=\"location.path().includes('accounts/customers')\"\n                            [matTooltip]=\"'ACCOUNTS.customers_list' | translate\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fas fa-user\"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative\" *ngIf=\"this.privilegesService.hasPrivilege('change_language')\">\n                    <mat-form-field class=\"origin-top-right right-0 mt-4 w-32\">\n                        <mat-label>{{ 'GLOBAL.language' | translate }}</mat-label>\n                        <mat-select (selectionChange)=\"localeService.changeLocale($event)\" [(value)]=\"localeService.currentLang\">\n                            <mat-option *ngFor=\"let lang of localeService.langs\" [value]=\"lang[0]\">{{ lang[1] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport {Router, NavigationEnd} from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class LastUrlService {\n\n    private previousUrl: string = '';\n    private currentUrl: string = '';\n\n    constructor(private router : Router) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            }\n        });\n    }\n\n    public getPreviousUrl() {\n        return this.previousUrl;\n    }\n}","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../../services/user.service\";\nimport { AuthService } from \"../../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { API_URL } from \"../../../../env\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LocalStorageService } from \"../../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../../services/last-url.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { SettingsService } from \"../../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../../services/privileges.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\n\nexport class UsersListComponent implements OnInit {\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    columnsToDisplay: string[]    = ['id', 'username', 'firstname', 'lastname', 'role','status', 'actions'];\n    users           : any         = [];\n    allUsers        : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    roles           : any         = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('users/') || lastUrl === '/') {\n            if (this.localeStorageService.get('usersPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('usersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        }else\n            this.localeStorageService.remove('usersPageIndex');\n\n        this.http.get(API_URL + '/ws/users/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.allUsers = data.users;\n                this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.roles = data.roles;\n                        this.loadUsers();\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('usersPageIndex', event.pageIndex);\n        this.loadUsers();\n    }\n\n    loadUsers(): void {\n        this.http.get(API_URL + '/ws/users/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.users[0]) this.total = data.users[0].total;\n                this.users = data.users;\n                if (this.roles) {\n                    this.users.forEach((user: any) => {\n                        this.roles.forEach((element: any) => {\n                            if (user.role === element.id) {\n                                user.role_label = element.label;\n                            }\n                        });\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_delete', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteUser(userId);\n                this.historyService.addHistory('general', 'delete_user', this.translate.instant('HISTORY-DESC.delete-user', {user: user}));\n            }\n        });\n    }\n\n    disableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_disable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.disableUser(userId);\n                this.historyService.addHistory('general', 'disable_user', this.translate.instant('HISTORY-DESC.disable-user', {user: user}));\n            }\n        });\n    }\n\n    enableConfirmDialog(userId: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_enable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.enableUser(userId);\n                this.historyService.addHistory('general', 'enable_user', this.translate.instant('HISTORY-DESC.enable-user', {user: user}));\n            }\n        });\n    }\n\n    deleteUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.delete(API_URL + '/ws/users/delete/' + userId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                    this.notify.success(this.translate.instant('USER.user_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    disableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(API_URL + '/ws/users/disable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableUser(userId: number) {\n        if (userId !== undefined) {\n            this.http.put(API_URL + '/ws/users/enable/' + userId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadUsers();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.allUsers.slice();\n        if(!sort.active || sort.direction === '') {\n            this.users = data.splice(this.pageSize + 1, this.users.length).reverse();\n            return;\n        }\n\n        this.users = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'username': return this.compare(a.username, b.username, isAsc);\n                case 'firstname': return this.compare(a.firstname, b.firstname, isAsc);\n                case 'lastname': return this.compare(a.lastname, b.lastname, isAsc);\n                case 'role': return this.compare(a.role_label, b.role_label, isAsc);\n                case 'status': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n        this.users = this.users.splice(this.pageSize + 1, this.users.length).reverse();\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button\n                    (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu()\" class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <h3 class=\"text-center\">{{ this.serviceSettings.getTitle() }}</h3>\n            <hr class=\"border-green-400\">\n        </div>\n        <mat-table matSort [dataSource]=\"users\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"username\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.username' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.username}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"firstname\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.firstname' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.firstname}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"lastname\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.lastname' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.lastname}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"role\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.role' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.role_label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled \"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'USER.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'USER.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-play fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.username)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 routerLink=\"/settings/general/users/update/{{row.id}}\"\n                 class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-output-create',\n    templateUrl: './create-output.component.html',\n    styleUrls: ['./create-output.component.scss']\n})\nexport class CreateOutputComponent implements OnInit {\n    loading             : boolean       = true;\n    outputsTypes        : any[]         = [];\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/outputs/getOutputsTypes', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputsTypes = data.outputs_types;\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    createOutput() {\n        if (this.isValidForm(this.outputForm)) {\n            const outputTypeId = this.getValueFromForm(this.outputForm, 'output_type_id');\n            const outputLabel = this.getValueFromForm(this.outputForm, 'output_label');\n            this.http.post(API_URL + '/ws/outputs/create',\n                {'args': {\n                    'output_type_id': outputTypeId,\n                    'output_label': outputLabel,\n                }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('OUTPUT.created'));\n                    this.historyService.addHistory('verifier', 'create_output', this.translate.instant('HISTORY-DESC.create-output', {output: outputLabel}));\n                    this.router.navigate(['/settings/verifier/outputs/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/outputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n            <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of outputForm\">\n                    <mat-form-field *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [id]=\"field.id\" [(ngModel)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                {{ option.output_type_label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                <span class=\"block\" (click)=\"createOutput()\">{{ \"OUTPUT.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\n// export const API_URL = 'http://192.168.1.10:5000';\nexport const API_URL = '../../backend_oc';","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { API_URL } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\n\n@Component({\n    selector: 'app-custom-fields',\n    templateUrl: './custom-fields.component.html',\n    styleUrls: ['./custom-fields.component.scss'],\n})\nexport class CustomFieldsComponent implements OnInit {\n    form!: FormGroup;\n    inactiveFields: any[] = [];\n    activeFields: any[] = [];\n    parent: any[] = [\n        {\n            'id': 'verifier',\n            'label': this.translate.instant('HOME.verifier')\n        },\n        {\n            'id': 'splitter',\n            'label': this.translate.instant('HOME.splitter')\n        }\n    ];\n    addFieldInputs: any[] = [\n        {\n            controlType: 'textbox',\n            label_short: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            required: true,\n        },\n        {\n            controlType: 'textbox',\n            label_short: 'label',\n            label: this.translate.instant('HEADER.label'),\n            required: true,\n        },\n        {\n            controlType: 'dropdown',\n            label_short: 'type',\n            label: this.translate.instant('CUSTOM-FIELDS.type'),\n            options: [\n                {key: 'textbox', value: this.translate.instant('CUSTOM-FIELDS.textbox')},\n                {key: 'textarea', value: this.translate.instant('CUSTOM-FIELDS.textarea')},\n                {key: 'select', value: this.translate.instant('CUSTOM-FIELDS.select')},\n                {key: 'checkBok', value: this.translate.instant('CUSTOM-FIELDS.checkbox')},\n            ],\n            required: true,\n        },\n        {\n            controlType: 'dropdown',\n            label_short: 'module',\n            label: this.translate.instant('CUSTOM-FIELDS.module'),\n            options: [\n                {key: 'verifier', value: this.translate.instant('HOME.verifier')},\n                {key: 'splitter', value: this.translate.instant('HOME.splitter')}\n            ],\n            required: true,\n        },\n    ];\n    loading = true;\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.retrieveCustomFields();\n        this.form = this.toFormGroup();\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            this.enableCustomField(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n        }\n    }\n\n    toFormGroup() {\n        const group: any = {};\n        this.addFieldInputs.forEach(input => {\n            group[input.label_short] = input.required ? new FormControl(input.value || '', Validators.required)\n                : new FormControl(input.value || '');\n        });\n        return new FormGroup(group);\n    }\n\n    moveToActive(index: number) {\n        this.enableCustomField(this.inactiveFields, this.activeFields, index, this.activeFields.length);\n    }\n\n    moveToInactive(index: number) {\n        this.enableCustomField(this.activeFields, this.inactiveFields, index, this.inactiveFields.length);\n    }\n\n    retrieveCustomFields() {\n        let newField;\n        this.http.get(API_URL + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.customFields.forEach((field: {\n                        id: any;\n                        label_short: string;\n                        module: string;\n                        label: string;\n                        type: string;\n                        enabled: boolean;\n                    }) => {\n                        newField = {\n                            'id': field.id,\n                            'label_short': field.label_short,\n                            'module': field.module,\n                            'label': field.label,\n                            'type': field.type,\n                            'enabled': field.enabled,\n                        };\n                        field.enabled ? this.activeFields.push(newField) : this.inactiveFields.push(newField);\n                    }\n                );\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    addCustomField() {\n        let newField = this.form.getRawValue();\n        newField = {\n            'label_short': newField.label_short,\n            'label': newField.label,\n            'type': newField.type,\n            'module': newField.module,\n            'enabled': newField.enabled,\n        };\n\n        this.http.post(API_URL + '/ws/customFields/add', newField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                newField['id'] = data.id;\n\n                this.activeFields.push(newField);\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_added'));\n                this.form.reset();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    enableCustomField(oldList: any[], newList: any[], oldIndex: number, newIndex: number) {\n        let updatedField = oldList[oldIndex];\n\n        updatedField = {\n            'id': updatedField['id'],\n            'label_short': updatedField['label_short'],\n            'module': updatedField['module'],\n            'label': updatedField['label'],\n            'type': updatedField['type'],\n            'enabled': !updatedField['enabled']\n        };\n\n        this.http.post(API_URL + '/ws/customFields/update', updatedField, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                transferArrayItem(\n                    oldList,\n                    newList,\n                    oldIndex,\n                    newIndex,\n                );\n                this.notify.success(this.translate.instant('CUSTOM-FIELDS.field_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\"\n                 style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\"\n            style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel\n                                    *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\"\n                   class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-accordion class=\"setting-custom-fields\">\n            <mat-expansion-panel [expanded]=\"true\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{ 'SETTINGS.add_custom_fields' | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <form (ngSubmit)=\"addCustomField()\" [formGroup]=\"form\">\n                    <div [formGroup]=\"form\" class=\"mx-8 grid grid-cols-6 gap-4\">\n                        <mat-form-field class=\"w-full\" *ngFor=\"let input of addFieldInputs\">\n                            <mat-label [attr.for]=\"input.label_short\">{{ input.label | translate }}</mat-label>\n                            <div [ngSwitch]=\"input.controlType\">\n                                <input matInput *ngSwitchCase=\"'textbox'\" [formControlName]=\"input.label_short\"\n                                       [id]=\"input.label_short\" [type]=\"input.type\"/>\n                                <mat-select [id]=\"input.label_short\" *ngSwitchCase=\"'dropdown'\"\n                                            [formControlName]=\"input.label_short\">\n                                    <mat-option *ngFor=\"let opt of input.options\" [value]=\"opt.key\">\n                                        {{ opt.value | translate }}\n                                    </mat-option>\n                                </mat-select>\n                            </div>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"flex justify-center m-5\">\n                        <button mat-button\n                                class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\"\n                                type=\"submit\">\n                            {{ 'CUSTOM-FIELDS.add' | translate }}\n                        </button>\n                    </div>\n                </form>\n            </mat-expansion-panel>\n        </mat-accordion>\n        <div class=\"custom-fields-control w-full\">\n            <mat-tab-group>\n                <mat-tab *ngFor=\"let parent of this.parent\" [label]=\"this.translate.instant(parent.label)\">\n                    <div cdkDropListGroup class=\"w-max mx-auto\">\n                        <div class=\"list-container\">\n                            <h2>{{ 'HEADER.inactive' | translate }}</h2>\n                            <div cdkDropList [cdkDropListData]=\"inactiveFields\" (cdkDropListDropped)=\"drop($event)\" class=\"custom-fields-list overflow-auto\">\n                                <span *ngFor=\"let item of inactiveFields; let i = index;\">\n                                    <div cdkDrag class=\"custom-field-box\" *ngIf=\"item.module == parent['id']\">\n                                        <div class=\"text-left\">\n                                            {{item.label}}\n                                            <span class=\"text-gray-400\">\n                                                ({{ 'CUSTOM-FIELDS.' + item.type | translate }})\n                                            </span>\n                                        </div>\n                                        <button mat-button (click)=\"moveToActive(i)\"><i class=\"fa fa-plus\"></i></button>\n                                    </div>\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"list-container\">\n                            <h2>{{ 'HEADER.active' | translate }}</h2>\n                            <div cdkDropList [cdkDropListData]=\"activeFields\" (cdkDropListDropped)=\"drop($event)\" class=\"custom-fields-list overflow-auto\">\n                                <span *ngFor=\"let item of activeFields; let i = index;\">\n                                    <div cdkDrag class=\"custom-field-box\" *ngIf=\"item.module == parent['id']\">\n                                        <div class=\"text-left\">\n                                            {{item.label}}\n                                            <span class=\"text-gray-400\">\n                                                ({{ 'CUSTOM-FIELDS.' + item.type | translate }})\n                                            </span>\n                                        </div>\n                                        <button mat-button (click)=\"moveToInactive(i)\"><i class=\"fa fa-minus\"></i></button>\n                                    </div>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {PrivilegesService} from \"./privileges.service\";\nimport {ActivatedRouteSnapshot, Router} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"./notifications/notifications.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HasPrivilegeService {\n\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private privilegesService: PrivilegesService,\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        if (route.data.privileges !== undefined) {\n            let returnValue = true;\n            route.data.privileges.forEach((privilege: any) => {\n                const hasPrivilege = this.privilegesService.hasPrivilege(privilege);\n                if (!hasPrivilege) {\n                    this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                        let label = '';\n                        if (route.routeConfig) {\n                            label = '<b>' + this.translate.instant(route.data['title']) + '</b>';\n                        }\n                        this.notify.error(translated + label);\n                        this.router.navigateByUrl('/home').then();\n                    });\n                    returnValue = false;\n                }\n            });\n            return returnValue;\n        } else {\n            return false;\n        }\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewer',\n  templateUrl: './splitter-viewer.component.html',\n  styleUrls: ['./splitter-viewer.component.scss']\n})\nexport class SplitterViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewer works!</p>\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { LoginRedirectService } from '../services/login-redirect.service';\nimport { LoginRequiredService } from '../services/login-required.service';\n\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { UserProfileComponent } from \"./profile/profile.component\";\nimport { SplitterViewerComponent } from \"./splitter/viewer/splitter-viewer.component\";\nimport { SplitterListComponent } from \"./splitter/list/splitter-list.component\";\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { UploadComponent } from \"./upload/upload.component\";\nimport { SuppliersListComponent } from \"./accounts/suppliers/list/suppliers-list.component\";\nimport { UpdateSupplierComponent } from \"./accounts/suppliers/update/update-supplier.component\";\nimport { CreateSupplierComponent } from \"./accounts/suppliers/create/create-supplier.component\";\nimport { CustomersListComponent } from \"./accounts/customers/list/customers-list.component\";\nimport { UpdateCustomerComponent } from \"./accounts/customers/update/update-customer.component\";\nimport { CreateCustomerComponent } from \"./accounts/customers/create/create-customer.component\";\nimport { HistoryComponent } from \"./history/history.component\";\nimport { HasPrivilegeService } from \"../services/has-privilege.service\";\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\n    {path: 'home', component: HomeComponent , data: {title: marker('GLOBAL.home')}, canActivate: [LoginRequiredService]},\n    {path: 'login', component: LoginComponent , data: {title: marker('GLOBAL.login')}, canActivate: [LoginRedirectService]},\n    {path: 'logout', component: LogoutComponent , canActivate: [LoginRequiredService]},\n    {path: 'profile/:id', component: UserProfileComponent, canActivate: [LoginRequiredService]},\n    {\n        path: 'splitter/viewer/:id', component: SplitterViewerComponent,\n        data: {title: marker('SPLITTER.viewer'), privileges: ['access_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'splitter/list', component: SplitterListComponent,\n        data: {title: marker('SPLITTER.list'), privileges: ['access_splitter']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {path: 'splitter', redirectTo: 'splitter/list', pathMatch: 'full'},\n    {\n        path: 'verifier/viewer/:id', component: VerifierViewerComponent,\n        data: {title: marker('VERIFIER.viewer'), privileges: ['access_verifier']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'verifier/list', component: VerifierListComponent,\n        data: {title: marker('VERIFIER.list'), privileges: ['access_verifier']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {path: 'verifier', redirectTo: 'verifier/list', pathMatch: 'full'},\n\n    {\n        path: 'upload', component: UploadComponent,\n        data: {title: marker('GLOBAL.upload'), privileges: ['upload']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n\n    {\n        path: 'history', component: HistoryComponent,\n        data: {title: marker('GLOBAL.history'), privileges: ['history']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n\n    {path: 'accounts/suppliers', redirectTo: 'accounts/suppliers/list', pathMatch: 'full'},\n    {\n        path: 'accounts/suppliers/list', component: SuppliersListComponent,\n        data: {title: marker('ACCOUNTS.suppliers_list'), privileges: ['suppliers_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {\n        path: 'accounts/suppliers/update/:id', component: UpdateSupplierComponent,\n        data: {title: marker('ACCOUNTS.update_supplier'), privileges: ['update_supplier']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {\n        path: 'accounts/suppliers/create', component: CreateSupplierComponent,\n        data: {title: marker('ACCOUNTS.create_supplier'), privileges: ['create_supplier']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n\n    {path: 'accounts/customers', redirectTo: 'accounts/customers/list', pathMatch: 'full'},\n    {\n        path: 'accounts/customers/list', component: CustomersListComponent,\n        data: {title: marker('ACCOUNTS.customers_list'), privileges: ['customers_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {\n        path: 'accounts/customers/update/:id', component: UpdateCustomerComponent,\n        data: {title: marker('ACCOUNTS.update_customer'), privileges: ['update_customer']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n    {\n        path: 'accounts/customers/create', component: CreateCustomerComponent,\n        data: {title: marker('ACCOUNTS.create_customer'), privileges: ['create_customer']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n\n    },\n\n    {path: '404', component: NotFoundComponent}, // This two routes (** and 404) need to be the last of const routes: Routes variable\n    {path: '**', redirectTo: '404'}, // if routes doesn't exists, redirect to 404, display a popup and then redirect to login\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport {splitAtColon} from \"@angular/compiler/src/util\";\nimport {API_URL} from \"../app/env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {AuthService} from \"./auth.service\";\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HistoryService {\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private userService: UserService,\n        private notify: NotificationService\n    ) { }\n\n    addHistory(module: string, submodule: string, desc: string) {\n        const user = this.userService.user.lastname + ' ' + this.userService.user.firstname + ' (' + this.userService.user.username + ')';\n        const data = {\n            'module': module,\n            'submodule': submodule,\n            'desc': desc,\n            'user_info': user,\n            'user_id': this.userService.user.id\n        };\n        this.http.post(API_URL + '/ws/history/add', data, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'positions-mask-list',\n    templateUrl: './positions-mask-list.component.html',\n    styleUrls: ['./positions-mask-list.component.scss']\n})\nexport class PositionsMaskListComponent implements OnInit {\n    loading         : boolean       = true;\n    columnsToDisplay: string[]      = ['id', 'label', 'supplier_name', 'enabled', 'actions'];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n    positionsMasks : any           = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/positions-mask') || lastUrl === '/') {\n            if (this.localeStorageService.get('positionMaskPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('positionMaskPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        }else\n            this.localeStorageService.remove('positionMaskPageIndex');\n        this.loadPositionMask().then();\n    }\n\n    async loadPositionMask() {\n        this.loading = true;\n        const suppliers = await this.retrieveSuppliers();\n        this.http.get(API_URL + '/ws/positions_masks/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.total) this.total = data.total;\n                this.positionsMasks = data.positions_masks;\n                suppliers.suppliers.forEach((element: any) => {\n                    this.positionsMasks.forEach((mask: any) => {\n                        if (element.id === mask.supplier_id) {\n                            mask.supplier_name = element.name;\n                        }\n                    });\n                });\n\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(API_URL + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('positionMaskPageIndex', event.pageIndex);\n        this.loadPositionMask().then();\n    }\n\n    deleteConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_delete', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deletePositionMask(positionMaskId);\n                this.historyService.addHistory('verifier', 'delete_positions_masks', this.translate.instant('HISTORY-DESC.delete-positions-masks', {positions_masks: positionsMask}));\n            }\n        });\n    }\n\n    duplicateConfirmDialog(positionMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_duplicate', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.duplicatePositionMask(positionMaskId);\n            }\n        });\n    }\n\n    disableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_disable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.disablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    enableConfirmDialog(positionsMaskId: number, positionsMask: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('POSITIONS-MASKS.confirm_enable', {\"positions_mask\": positionsMask}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.enablePositionMask(positionsMaskId);\n            }\n        });\n    }\n\n    deletePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.delete(API_URL + '/ws/positions_masks/delete/' + positionsMaskId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.positions_mask_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicatePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            // this.http.delete(API_URL + '/ws/positions_masks/duplicate/' + positionsMaskId, {headers: this.authService.headers}).pipe(\n            //     tap(() => {\n            //         this.loadPositionMask()\n            //     }),\n            //     catchError((err: any) => {\n            //         console.debug(err);\n            //         this.notify.handleErrors(err);\n            //         return of(false);\n            //     })\n            // ).subscribe();\n        }\n    }\n\n    disablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(API_URL + '/ws/positions_masks/disable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enablePositionMask(positionsMaskId: number) {\n        if (positionsMaskId !== undefined) {\n            this.http.put(API_URL + '/ws/positions_masks/enable/' + positionsMaskId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadPositionMask().then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.positionsMasks.slice();\n        if(!sort.active || sort.direction === '') {\n            this.positionsMasks = data;\n            return;\n        }\n\n        this.positionsMasks = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort matSortDisableClear [dataSource]=\"positionsMasks\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"supplier_name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.supplier_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.supplier_name}}</mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled \"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-play fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-clone fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'POSITIONS-MASKS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/positions-mask/update/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppMaterialModule } from './app-material.module';\nimport { ServicesModule } from '../services/services.module';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { DragDropModule } from \"@angular/cdk/drag-drop\";\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule, TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { SettingsRoutingModule } from './settings/settings-routing.module';\nimport { AppComponent } from './app.component';\nimport { VerifierViewerComponent } from './verifier/viewer/verifier-viewer.component';\nimport { VerifierListComponent } from './verifier/list/verifier-list.component';\nimport { SplitterViewerComponent } from './splitter/viewer/splitter-viewer.component';\nimport { SplitterListComponent } from './splitter/list/splitter-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from \"./logout/logout.component\";\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserProfileComponent } from './profile/profile.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { NgxFileDragDropModule } from \"ngx-file-drag-drop\";\nimport { UsersListComponent } from './settings/general/users/list/users-list.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { MatPaginatorIntl } from \"@angular/material/paginator\";\nimport { CustomMatPaginatorIntl } from \"./custom-mat-paginator\";\nimport { LastUrlService } from \"../services/last-url.service\";\nimport { AboutUsComponent } from './settings/general/about-us/about-us.component';\nimport { CreateUserComponent } from './settings/general/users/create/create-user.component';\nimport { UpdateUserComponent } from './settings/general/users/update/update-user.component';\nimport { RolesListComponent } from './settings/general/roles/list/roles-list.component';\nimport { UpdateRoleComponent } from './settings/general/roles/update/update-role.component';\nimport { CreateRoleComponent } from './settings/general/roles/create/create-role.component';\nimport { LoaderComponent } from './loader.component';\nimport { CustomFieldsComponent } from './settings/general/custom-fields/custom-fields.component';\nimport { FormListComponent } from './settings/verifier/form/list/form-list.component';\nimport { FormBuilderComponent } from './settings/verifier/form/builder/form-builder.component';\nimport { NgsgModule } from 'ng-sortgrid';\nimport { SuppliersListComponent } from './accounts/suppliers/list/suppliers-list.component';\nimport { UpdateSupplierComponent } from './accounts/suppliers/update/update-supplier.component';\nimport { CreateSupplierComponent } from './accounts/suppliers/create/create-supplier.component';\nimport { CustomersListComponent } from './accounts/customers/list/customers-list.component';\nimport { UpdateCustomerComponent } from './accounts/customers/update/update-customer.component';\nimport { CreateCustomerComponent } from './accounts/customers/create/create-customer.component';\nimport { CreateOutputComponent } from './settings/verifier/outputs/create/create-output.component';\nimport { OutputsListComponent } from './settings/verifier/outputs/list/outputs-list.component';\nimport { HighlightPipe, UpdateOutputComponent } from './settings/verifier/outputs/update/update-output.component';\nimport { CreateInputComponent } from './settings/verifier/inputs/create/create-input.component';\nimport { InputsListComponent } from './settings/verifier/inputs/list/inputs-list.component';\nimport { UpdateInputComponent } from './settings/verifier/inputs/update/update-input.component';\nimport { UpdatePositionsMaskComponent } from './settings/verifier/positions-mask/update/update-positions-mask.component';\nimport { PositionsMaskListComponent } from './settings/verifier/positions-mask/list/positions-mask-list.component';\nimport { CreatePositionsMaskComponent } from './settings/verifier/positions-mask/create/create-positions-mask.component';\nimport { HistoryComponent } from './history/history.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/i18n/frontend/', '.json');\n}\n\n@NgModule({\n    declarations: [\n        HighlightPipe,\n        AppComponent,\n        VerifierViewerComponent,\n        VerifierListComponent,\n        SplitterListComponent,\n        SplitterViewerComponent,\n        LoginComponent,\n        LogoutComponent,\n        HomeComponent,\n        MenuComponent,\n        NotFoundComponent,\n        UserProfileComponent,\n        UploadComponent,\n        UsersListComponent,\n        SettingsComponent,\n        AboutUsComponent,\n        RolesListComponent,\n        CreateUserComponent,\n        UpdateUserComponent,\n        UpdateRoleComponent,\n        CreateRoleComponent,\n        LoaderComponent,\n        CustomFieldsComponent,\n        FormBuilderComponent,\n        FormListComponent,\n        FormBuilderComponent,\n        SuppliersListComponent,\n        UpdateSupplierComponent,\n        CreateSupplierComponent,\n        CustomersListComponent,\n        CreateCustomerComponent,\n        UpdateCustomerComponent,\n        CreateOutputComponent,\n        OutputsListComponent,\n        UpdateOutputComponent,\n        CreateInputComponent,\n        InputsListComponent,\n        UpdateInputComponent,\n        UpdatePositionsMaskComponent,\n        PositionsMaskListComponent,\n        CreatePositionsMaskComponent,\n        HistoryComponent\n    ],\n    imports: [\n        BrowserModule,\n        SettingsRoutingModule,\n        AppRoutingModule,\n        AppMaterialModule,\n        BrowserAnimationsModule,\n        HttpClientModule,\n        ServicesModule,\n        NgsgModule,\n        TranslateModule.forRoot({\n            defaultLanguage: 'fra',\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        ReactiveFormsModule,\n        FormsModule,\n        NgxFileDragDropModule,\n        DragDropModule,\n    ],\n    providers: [\n        Title,\n        TranslateService,\n        LastUrlService,\n        {provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'outline'}},\n        {\n            provide: MatPaginatorIntl,\n            useClass: CustomMatPaginatorIntl\n        }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor() {}\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material/dialog\";\n\nexport interface ConfirmData {\n    confirmTitle : string;\n    confirmText : string;\n    confirmButton : string;\n    confirmButtonColor : string;\n    cancelButton : string;\n}\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss']\n})\n\nexport class ConfirmDialogComponent implements OnInit {\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmData,\n    ) { }\n\n    ngOnInit(): void {}\n}","<h2 mat-dialog-title>{{ data.confirmTitle }}</h2>\n<hr class=\"border-green-400 -mt-4 mb-4\">\n<mat-dialog-content class=\"mat-typography\" [innerHTML]=data.confirmText></mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{ data.cancelButton }}</button>\n    <button mat-button [mat-dialog-close]=\"true\" color=\"{{ data.confirmButtonColor }}\" cdkFocusInitial>{{ data.confirmButton }}</button>\n</mat-dialog-actions>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'inputs-list',\n    templateUrl: './inputs-list.component.html',\n    styleUrls: ['./inputs-list.component.scss']\n})\nexport class InputsListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'input_id', 'input_label', 'input_folder', 'actions'];\n    loading         : boolean       = true;\n    inputs          : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('inputs/') || lastUrl === '/') {\n            if (this.localeStorageService.get('inputsPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('inputsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localeStorageService.remove('inputsPageIndex');\n        this.loadInputs();\n    }\n\n    loadInputs() {\n        this.http.get(API_URL + '/ws/inputs/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.inputs[0]) this.total = data.inputs[0].total;\n                this.inputs = data.inputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('inputsPageIndex', event.pageIndex);\n        this.loadInputs();\n    }\n\n    deleteConfirmDialog(inputId: number, input: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('INPUT.confirm_delete', {\"input\": input}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteInput(inputId);\n                this.historyService.addHistory('verifier', 'delete_input', this.translate.instant('HISTORY-DESC.delete-input', {input: input}));\n            }\n        });\n    }\n\n    deleteInput(inputId: number) {\n        if (inputId !== undefined) {\n            this.http.delete(API_URL + '/ws/inputs/delete/' + inputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadInputs();\n                    this.notify.success(this.translate.instant('INPUT.input_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.inputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.inputs = data;\n            return;\n        }\n\n        this.inputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort [dataSource]=\"inputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label_short' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.input_id}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_label\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.input_label}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"input_folder\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'INPUT.input_folder_header' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.input_folder}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button\n                        (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.input_label)\"\n                        matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                        class=\"inline-block align-text-top\">\n                    <i class=\"fas fa-trash fa-lg\"></i>\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 routerLink=\"/settings/verifier/inputs/update/{{row.id}}\"\n                 class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n    </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { API_URL } from \"../../app/env\";\n\n@Component({\n    selector: 'custom-snackbar',\n    templateUrl: 'notification.service.html',\n    styleUrls: ['notification.service.scss'],\n})\nexport class CustomSnackbarComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n    dismiss() {\n        this.data.close();\n    }\n}\n\n@Injectable()\nexport class NotificationService {\n    constructor(\n        public translate: TranslateService,\n        private router: Router,\n        public snackBar: MatSnackBar)\n    { }\n\n    success(message: string) {\n        const duration = this.getMessageDuration(message, 2000);\n        const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n            duration: duration,\n            panelClass: ['success-snackbar', 'mt-20', 'mr-3'],\n            verticalPosition : 'top',\n            horizontalPosition: 'right',\n            data: { message: message, icon: 'info-circle', close: () => {snackBar.dismiss();} }\n        });\n    }\n\n    error(message: string, url: any = null) {\n        const duration = this.getMessageDuration(message, 8000);\n        const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n            duration: duration,\n            panelClass: ['error-snackbar', 'mt-20', 'mr-3'],\n            verticalPosition : 'top',\n            horizontalPosition: 'right',\n            data: { url: url, message: message, icon: 'exclamation-triangle', close: () => {snackBar.dismiss();} }\n        });\n    }\n\n    handleErrors(err: any, route='') {\n        if (err.status === 0 && err.statusText === 'Unknown Error'){\n            const message =this.translate.instant('ERROR.connection_failed') + ' : ' + this.translate.instant('ERROR.is_server_up', {server: API_URL});\n            this.error(message);\n            if (this.router.url !== '/login')\n                this.router.navigate(['/logout']).then();\n        } else if (err.error !== undefined) {\n            if (err.error.errors !== undefined) {\n                this.error(err.error.errors + ' : ' + err.error.message, err.url);\n                if (err.status === 403 || err.status === 404)\n                    this.router.navigate(['/login']).then();\n                else if (err.error.errors === this.translate.instant('ERROR.jwt_error'))\n                    this.router.navigate(['/logout']).then();\n            } else if (err.error.exception !== undefined)\n                this.error(err.error.exception[0].message, err.url);\n            else if (err.error.error !== undefined) {\n                if (err.error.error[0] !== undefined)\n                    this.error(err.error.error[0].message, err.url);\n                else\n                    this.error(err.error.error.message, err.url);\n            } else\n                this.error(`${err.status} : ${err.statusText}`, err.url);\n        } else\n            this.error(err);\n\n        if (route) {\n            this.router.navigate([route]).then();\n        }\n    }\n\n    getMessageDuration(message: string, minimumDuration: number) {\n        const duration = (message.length / 25) * 1000;\n        const maxDuration = 10000;\n        if (duration < minimumDuration) {\n            return minimumDuration;\n        } else if (duration > maxDuration) {\n            return maxDuration;\n        }\n        return duration;\n    }\n}\n","<div class=\"notif-container\" (click)=\"dismiss()\">\n    <div class=\"notif-container-icon\">\n        <i class=\"fa fa-{{data.icon}} fa-2x\"></i>\n    </div>\n    <div class=\"notif-container-content\">\n        <div class=\"notif-container-content-msg\">\n            <div [innerHTML]=\"data.url\"></div>\n            <div [innerHTML]=\"data.message\"></div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrivilegesService {\n\n    constructor(\n        private userService: UserService\n    ) { }\n\n    hasPrivilege(privilegeId: any) {\n        let found = false;\n        const user = this.userService.getUserFromLocal();\n        if (user) {\n            const userPrivileges = user['privileges'];\n            if (userPrivileges) {\n                if (userPrivileges === '*')\n                    return true;\n\n                userPrivileges.forEach((element: any) => {\n                    if (privilegeId === element) {\n                        found = true;\n                    }\n                });\n                return found;\n            }\n        }\n        return false;\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {FormControl} from \"@angular/forms\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, map, startWith, tap} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {FileValidators} from \"ngx-file-drag-drop\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {ConfigService} from \"../../../../../services/config.service\";\nimport * as moment from \"moment\";\nimport {HistoryService} from \"../../../../../services/history.service\";\ndeclare var $: any;\n\n@Component({\n    selector: 'update-positions-mask',\n    templateUrl: './update-positions-mask.component.html',\n    styleUrls: ['./update-positions-mask.component.scss']\n})\nexport class UpdatePositionsMaskComponent implements OnInit {\n    loading                 : boolean   = true;\n    ocrFromUser             : boolean   = false;\n    launchOnInit            : boolean   = false;\n    ratio                   : any;\n    positionMaskId          : any;\n    positionsMask           : any;\n    invoiceImageWidth       : any;\n    invoiceImageNbPages     : any;\n    currentPage             : number    = 1;\n    suppliers               : any       = [];\n    filteredOptions         : Observable<any> | undefined;\n    form                    : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'supplier_id': {\n            'control': new FormControl(),\n        }\n    };\n    toHighlight             : string    = '';\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'order_number',\n                    label: marker('FACTURATION.order_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'yellow',\n                    regex: ''\n                },\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'silver',\n                    regex: ''\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'red',\n                    regex: ''\n                },\n                {\n                    id: 'invoice_date',\n                    label: marker('FACTURATION.invoice_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'yellow',\n                    regex: '',\n                },\n                {\n                    id: 'invoice_due_date',\n                    label: marker('FACTURATION.invoice_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    color: 'blue',\n                    regex: '',\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'pink',\n                    regex: ''\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'fuschia',\n                    regex: ''\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'purple',\n                    regex: ''\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'white',\n                    regex: ''\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'green',\n                    regex: ''\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    color: 'lime',\n                    regex: ''\n                },\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        },\n    ];\n    imageInvoice            : any;\n    invoiceImageSrc         : any;\n    invoiceImageName        : any;\n    lastId                  : any;\n    lastColor               : string    = '';\n    lastLabel               : string    = '';\n    config                  : any;\n    fileControl             = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    async ngOnInit(): Promise<void>  {\n        this.serviceSettings.init();\n        this.launchOnInit = true;\n        this.positionMaskId = this.route.snapshot.params['id'];\n        this.config = this.configService.getConfig();\n        this.positionsMask = await this.getPositionMask();\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                for (const key in this.positionsMask.regex) {\n                   if (key === element.id) {\n                       element.regex = this.positionsMask.regex[key];\n                   }\n                }\n            });\n        }\n        if (this.positionsMask.filename) {\n            this.invoiceImageName = this.positionsMask.filename;\n            this.invoiceImageNbPages = this.positionsMask.nb_pages;\n            this.invoiceImageWidth = this.positionsMask.width;\n            this.imageInvoice = $('#invoice_image_src');\n            let thumbB64: any = {};\n            thumbB64 = await this.getThumb(this.positionsMask.filename);\n            this.invoiceImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + thumbB64.file);\n        }\n        this.suppliers = await this.retrieveSuppliers();\n        this.suppliers = this.suppliers.suppliers;\n        if (this.imageInvoice) {\n            this.ratio = this.invoiceImageWidth / this.imageInvoice.width();\n            this.ocr({\n                'target' : {\n                    'id': ''\n                }\n            }, true, '', false);\n        }\n        this.form['label'].control.setValue(this.positionsMask.label);\n        this.filteredOptions = this.form['supplier_id'].control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option) : this.suppliers.slice())\n            );\n        this.suppliers.forEach((element: any ) => {\n            if (element.id === this.positionsMask.supplier_id) {\n                this.form['supplier_id'].control.setValue(element.name);\n            }\n        });\n        this.http.get(API_URL + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if(data.customFields[field].module === 'verifier') {\n                                for (const parent in this.availableFieldsParent) {\n                                    if(this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id: 'custom_' + data.customFields[field].id,\n                                                label: data.customFields[field].label,\n                                                type: data.customFields[field].type,\n                                                color: data.customFields[field].color,\n                                                regex: ''\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        setTimeout(() => {\n            this.drawPositions();\n            this.loading = false;\n            this.launchOnInit = false;\n        }, 500);\n\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n    }\n\n    private _filter(value: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return this.suppliers.filter((option: any) => option.name.toLowerCase().indexOf(filterValue) !== -1);\n        }else {\n            return this.suppliers;\n        }\n    }\n\n    async getPositionMask(): Promise<any> {\n        return await this.http.get(API_URL + '/ws/positions_masks/getById/' + this.positionMaskId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(API_URL + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    drawPositions() {\n        if (this.positionsMask) {\n            for (const field in this.positionsMask.positions) {\n                const position = this.positionsMask.positions[field];\n                const page = this.getPage(field);\n                if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                    this.lastId = field;\n                    for (const cpt in this.availableFieldsParent) {\n                        this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                            if (field === element.id) {\n                                this.lastLabel = this.translate.instant(element.label);\n                                this.lastColor = element.color;\n                            }\n                        });\n                    }\n                    $('#' + field).focus();\n\n                    if (this.ratio === Infinity) {\n                        this.ratio = this.invoiceImageWidth / this.imageInvoice.width();\n                    }\n\n                    const newArea = {\n                        x: position.x / this.ratio,\n                        y: position.y / this.ratio,\n                        width: position.width / this.ratio,\n                        height: position.height / this.ratio\n                    };\n\n                    const triggerEvent = $('.trigger');\n                    triggerEvent.hide();\n                    triggerEvent.trigger('mousedown');\n                    triggerEvent.trigger('mouseup', [newArea]);\n                }\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any) {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        this.lastColor = field.color;\n        $('#' + field.id).focus();\n        const newArea = {\n            x: position.x / this.ratio,\n            y: position.y / this.ratio,\n            width: position.width / this.ratio,\n            height: position.height / this.ratio\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    updatePositionsMask() {\n        const _array = {\n            'label': this.form['label'].control.value,\n            'regex': {},\n        };\n        const supplierName = this.form['supplier_id'].control.value;\n        this.suppliers.forEach((element: any) => {\n            if (element.name === supplierName) {\n                Object.assign(_array, {'supplier_id': element.id});\n            }\n        });\n\n        for (const cpt in this.availableFieldsParent){\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                if (element.regex) {\n                    Object.assign(_array['regex'], {[element.id]: element.regex});\n                }\n            });\n        }\n\n        if (_array['regex']) {\n            _array['regex'] = JSON.stringify(_array['regex']);\n        }\n        this.http.put(API_URL + '/ws/positions_masks/update/' + this.positionMaskId, {'args': _array},{headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.historyService.addHistory('verifier', 'update_positions_masks', this.translate.instant('HISTORY-DESC.update-positions-masks', {positions_masks: _array['label']}));\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/positions-mask']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            this.loading = true;\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    this.loading = false;\n                    return;\n                }else {\n                    const formData: FormData = new FormData();\n                    if (data) formData.append(data[0].name, data[0]);\n\n                    this.http.post(API_URL + '/ws/positions_masks/getImageFromPdf/' + this.positionMaskId, formData, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            this.invoiceImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + data.file);\n                            this.invoiceImageName = data.filename;\n                            this.invoiceImageWidth = data.width;\n                            this.imageInvoice = $('#invoice_image_src');\n                            setTimeout(() => {\n                                this.ratio = this.invoiceImageWidth / this.imageInvoice.width();\n                            }, 500);\n                            this.invoiceImageNbPages = data.nb_pages;\n                            this.fileControl.setValue([]);\n                            this.ocr({\n                                'target' : {\n                                    'id': ''\n                                }\n                            }, true, '', false);\n                        }),\n                        finalize(() => this.loading = false),\n                        catchError((err: any) => {\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }\n        }\n    }\n\n    deleteImage() {\n        this.invoiceImageSrc = '';\n        this.imageInvoice = undefined;\n        this.positionsMask.positions = {};\n        this.positionsMask.pages = {};\n        for (const cpt in this.availableFieldsParent) {\n            this.availableFieldsParent[cpt]['values'].forEach((element: any) => {\n                element.value = '';\n                const input = $('.input_' + element.id);\n                const background = $('.background_' + element.id);\n                const outline = $('.outline_' + element.id);\n                input.remove();\n                background.remove();\n                outline.remove();\n            });\n        }\n        const imageContainer = $('.image-container');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        this.http.put(API_URL + '/ws/positions_masks/update/' + this.positionMaskId,\n            {'args': {'filename': '', 'positions': '{}', 'pages': '{}'}},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    ocr(event: any, enable: boolean, color = 'green', removeClass = true) {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        this.lastLabel = $('#label_' + this.lastId).length !== 0 ? $('#label_' + this.lastId)[0].innerText : '';\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        deleteArea.addClass('pointer-events-auto');\n        backgroundArea.addClass('pointer-events-auto');\n        resizeArea.addClass('pointer-events-auto');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable && this.imageInvoice) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            if (removeClass) {\n                imageContainer.removeClass('pointer-events-none');\n                imageContainer.removeClass('cursor-auto');\n            }\n            this.imageInvoice.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageInvoice.width(), this.imageInvoice.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        _this.ocr_process(img, cpt, selection);\n                    }\n                },\n                onDeleted(img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    _this.deletePosition(inputId);\n                    _this.deletePage(inputId);\n                }\n            });\n        }else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (page === this.currentPage || page === 0)) {\n            if ($('#select-area-label_' + cpt).length === 0) {\n                const outline = $('#select-areas-outline_' + cpt);\n                const backgroundArea = $('#select-areas-background-area_' + cpt);\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n                backgroundArea.css('background-color', this.lastColor);\n                outline.addClass('outline_' + this.lastId);\n                backgroundArea.addClass('background_' + this.lastId);\n                backgroundArea.data('page', page);\n                labelContainer.data('page', page);\n                outline.data('page', page);\n            }\n\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n\n            if (this.imageInvoice && !this.launchOnInit) {\n                const _selection = this.getSelectionByCpt(selection, cpt);\n                this.savePosition(_selection);\n                this.savePage(this.currentPage);\n            }\n        }else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt)\n                return selection[index];\n        }\n    }\n\n    getPage(fieldId: any) {\n        let page: number = this.currentPage;\n        if (this.positionsMask.pages) {\n            Object.keys(this.positionsMask.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.positionsMask.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    checkIfObjectIsEqual(object1: any, object2: any) {\n        if (!object1)\n            return false;\n        if (!object2)\n            return false;\n\n        const aProps = Object.getOwnPropertyNames(object1);\n        const bProps = Object.getOwnPropertyNames(object2);\n\n        if (aProps.length !== bProps.length) {\n            return false;\n        }\n\n        for (let i = 0; i < aProps.length; i++) {\n            const propName = aProps[i];\n            if (object1[propName] !== object2[propName]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    savePosition(position: any) {\n        position = {\n            height: position.height * this.ratio,\n            width: position.width * this.ratio,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio\n        };\n        if (!this.checkIfObjectIsEqual(position, this.positionsMask.positions[this.lastId])) {\n            this.http.put(API_URL + '/ws/positions_masks/updatePositions/' + this.positionMaskId,\n                {'args': {[this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.positions[this.lastId] = position;\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    savePage(page: any) {\n        if (page !== this.positionsMask.pages[this.lastId]) {\n            this.http.put(API_URL + '/ws/positions_masks/updatePages/' + this.positionMaskId,\n                {'args': {[this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.positionsMask.pages[this.lastId] = page;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deletePosition(fieldId: any) {\n        this.http.put(API_URL + '/ws/positions_masks/' + this.positionMaskId + '/deletePosition',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.positions[this.lastId] = '';\n                this.notify.success(this.translate.instant('POSITIONS-MASKS.position_and_page_updated', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePage(fieldId: any) {\n        this.http.put(API_URL + '/ws/positions_masks/' + this.positionMaskId + '/deletePage',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.positionsMask.pages[this.lastId] = '';\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    async nextPage() {\n        if (this.currentPage < this.invoiceImageNbPages) {\n            this.currentPage = this.currentPage + 1;\n            await this.changeImage(this.currentPage, this.currentPage - 1);\n        }else {\n            await this.changeImage(1, this.invoiceImageNbPages);\n        }\n    }\n\n    async previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            await this.changeImage(this.currentPage, this.currentPage + 1);\n        }else {\n            await this.changeImage(this.invoiceImageNbPages, this.currentPage);\n        }\n    }\n\n    async changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow) {\n            const extension = this.invoiceImageName.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n\n            const newFilename = this.invoiceImageName.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.invoiceImageName = newFilename;\n            let thumbB64: any;\n            thumbB64 = await this.getThumb(newFilename);\n            this.invoiceImageSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + thumbB64.file);\n            this.currentPage = pageToShow;\n            for (const parentCpt in this.availableFieldsParent) {\n                for (const cpt in this.availableFieldsParent[parentCpt]['values']) {\n                   const field = this.availableFieldsParent[parentCpt]['values'][cpt];\n                   const position = this.positionsMask.positions[field.id];\n                   const page = this.positionsMask.pages[field.id];\n                    if (position) {\n                        const input = $('.input_' + field.id);\n                        const background = $('.background_' + field.id);\n                        const outline = $('.outline_' + field.id);\n                        input.remove();\n                        background.remove();\n                        outline.remove();\n                        if (page === this.currentPage) this.drawPositionByField(field, position);\n                    }\n                }\n            }\n        }\n    }\n\n    async getThumb(filename:string) {\n        return await this.http.post(API_URL + '/ws/verifier/getThumb',{'args': {'path': this.config['GLOBAL']['positionsmaskspath'], 'filename': filename}}, {headers: this.authService.headers}).toPromise();\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n            <button mat-icon-button (click)=\"sidenav2.toggle();\"\n                    class=\"absolute right-2 top-2\">\n                <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fas fa-stream text-xl text-gray-900\"></i>\n            </button>\n        </div>\n        <div class=\"overflow-auto\" style=\"height: calc(100% - 64px)\">\n            <div class=\"flex justify-center items-center mt-5\">\n                <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                    <span class=\"block\" (click)=\"updatePositionsMask()\">{{ \"POSITIONS-MASKS.modify\" | translate }}</span>\n                </button>\n            </div>\n            <div class=\"grid grid-cols-2 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full form-viewer\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\"\n                           [formControl]=\"this.form['supplier_id'].control\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n                <span class=\"cursor-pointer text-sm col-span-2 flex justify-center -mt-8\"\n                      *ngIf=\"invoiceImageSrc\" (click)=\"deleteImage()\">\n                    {{ 'POSITIONS-MASKS.reset_image' | translate }}\n                </span>\n            </div>\n            <div id=\"invoice_image\">\n                <div class=\"absolute text-xl left-6\" style=\"top: 13.5rem\">\n                    <ng-container *ngIf=\"!this.loading && this.invoiceImageSrc && this.invoiceImageNbPages > 1\">\n                        <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n                        {{ 'VERIFIER.page' | translate }}\n                        {{ currentPage }}\n                        {{ 'VERIFIER.on' | translate }}\n                        {{ this.invoiceImageNbPages }}\n                        <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n                    </ng-container>\n                </div>\n                <div *ngIf=\"!invoiceImageSrc\">\n                    <ngx-file-drag-drop\n                            [formControl]=\"fileControl\"\n                            [activeBorderColor]=\"'#97BF3D'\"\n                            [multiple]=\"false\"\n                            [accept]=\"'pdf'\"\n                            [displayFileSize]=\"true\"\n                            [emptyPlaceholder]=\"'POSITIONS-MASKS.placeholder' | translate\"\n                            [class]=\"'max-w-3xl h-56 mt-10 mb-10'\"\n                            (valueChanged)=\"checkFile($event)\">\n                    </ngx-file-drag-drop>\n                </div>\n                <div class=\"image-container px-4\" [class.hidden]=\"!this.imageInvoice\">\n                    <img id=\"invoice_image_src\" [src]=\"invoiceImageSrc\">\n                </div>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"FORMS.available_fields\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group style=\"height: calc(100% - 64px)\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div class=\"flex flex-row items-center justify-between m-5\">\n                            <ng-container>\n                                <div class=\"relative -top-3\" [id]=\"'label_' + field.id\">\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-6/12\">\n                                    <mat-label>{{ 'POSITIONS-MASKS.regex_associated' | translate }}</mat-label>\n                                    <input [id]='field.id' (focusin)=\"ocr($event, true, field.color)\"\n                                           (click)=\"this.ocrFromUser = true;\" [(ngModel)]=\"field.regex\"\n                                           (focusout)=\"ocr($event, false)\" matInput type=\"text\">\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { Router } from \"@angular/router\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-about-us',\n    templateUrl: './about-us.component.html',\n    styleUrls: ['./about-us.component.scss']\n})\n\nexport class AboutUsComponent implements OnInit {\n    loading        : boolean   = true;\n    gitVersion     : any       = 'dev';\n    lastVersion    : any       = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify: NotificationService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/config/gitInfo', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.git_current && data.git_current !== 'None')\n                    this.gitVersion = data.git_current;\n                if (data.git_latest)\n                    this.lastVersion = data.git_latest;\n\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>\n                    Open-Capture for Invoices <span *ngIf=\"!loading\"><b>version {{ gitVersion }}</b></span>\n                    <span *ngIf=\"!loading && lastVersion !== gitVersion && gitVersion !== 'dev'\">\n                        | {{ 'ABOUT-US.new_version_available' | translate }} (<b>\n                                <a  [href]=\"'https://github.com/edissyum/opencaptureforinvoices/releases/tag/' + lastVersion\"\n                                    target=\"_blank\">{{lastVersion}}</a>\n                            </b>)\n                    </span>\n                </h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div id=\"license\" class=\"text-center mt-10\">\n            <h2>{{ 'ABOUT-US.license' | translate }}</h2>\n            {{ 'ABOUT-US.distributed_under' | translate }}&nbsp;\n            <a class=\"text-green-400\" href=\"https://www.gnu.org/licenses/gpl-3.0.html\">\n                {{ 'ABOUT-US.gnu_license' | translate }}\n            </a>\n        </div>\n        <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n        <div class=\"edissyum text-center mt-10 text-lg\" style=\"line-height: 35px !important;\">\n            <h2>{{ 'ABOUT-US.editor' | translate }}</h2>\n            <div class=\"grid grid-cols-2 gap-10 w-1/2 m-auto\">\n                <div class=\"text-right\">\n                    Edissyum Consulting <br>\n                    98 Avenue Pierre Semard <br>\n                    84200 Carpentras\n                </div>\n                <div class=\"text-left\" style=\"width: 200%\">\n                    {{ 'ABOUT-US.official_website' | translate }} : <a class=\"text-green-400\" href=\"https://open-capture.com/\">open-capture.com/</a><br>\n                    Documentation : <a class=\"text-green-400\" href=\"https://edissyum.gitbook.io/open-capture-for-invoices/\">edissyum.gitbook.io/open-capture-for-invoices-v2/</a> <br>\n                    Support : <a class=\"text-green-400\" href=\"https://github.com/edissyum/opencaptureforinvoices\">github.com/edissyum/opencaptureforinvoices</a>\n                </div>\n            </div>\n        </div>\n        <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n        <div class=\"logo flex justify-center items-center gap-48 mt-10\">\n            <div id=\"verifier\">\n                <img src=\"assets/imgs/logo_verifier.png\" alt=\"Open-Capture Verifier\">\n                <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                <h3 class=\"mt-6\">{{ 'ABOUT-US.lead_dev' | translate }} : CHEVAL Nathan</h3>\n            </div>\n            <div id=\"splitter\">\n                <img src=\"assets/imgs/logo_splitter.png\" alt=\"Open-Capture Splitter\">\n                <hr class=\"m-auto mt-10 w-1/2 border-green-400\">\n                <h3 class=\"mt-6\">{{ 'ABOUT-US.lead_dev' | translate }} : BRICH Oussama</h3>\n            </div>\n        </div>\n        <hr class=\"m-auto mt-10 w-1/2 border-green-400 border-opacity-60\">\n        <div id=\"dependency\" class=\"text-center mt-10 mb-10\">\n            <h2>{{ 'ABOUT-US.dependency' | translate }}</h2>\n            <h4><i>{{ 'ABOUT-US.thanks_to_developers' | translate }}</i></h4>\n            <div>\n                <ul>\n                    <li><a class=\"text-green-400\" href=\"https://angular.io/\">Angular</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://material.angular.io/\">Angular Material</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://jquery.com/download/\">jQuery</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://github.com/kreuzerk/ng-sortgrid\">NgsgModule</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://github.com/bleenco/ng2-datepicker\">DatePickerModule</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://github.com/telebroad/ngx-file-drag-drop\">NgxFileDragDropModule</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://github.com/ngx-translate/core\">NgxTranslateModule</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://tailwindcss.com/\">Tailwind CSS</a></li>\n                    <li><a class=\"text-green-400\" href=\"https://fontawesome.com/\">FontAwesome</a></li>\n                </ul>\n            </div>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user : any = {};\n\n    constructor(\n        private http: HttpClient,\n        private localStorage: LocalStorageService,\n    ) {\n    }\n\n    setUser(value: any) {\n        this.user = value;\n    }\n\n    getUser() {\n        return this.user;\n    }\n\n    getUserFromLocal() {\n        const token = this.getTokenAuth();\n        if (token) {\n            return JSON.parse(atob(token as string));\n        }\n    }\n\n    getTokenAuth() {\n        return this.localStorage.getCookie('OpenCaptureForInvoicesToken_2');\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-role.component.html',\n    styleUrls: ['./create-role.component.scss']\n})\nexport class CreateRoleComponent implements OnInit {\n    loading : boolean = true;\n    privileges: any;\n    rolePrivileges: any[] = [];\n    roleForm: any[] = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n\n        this.http.get(API_URL + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {};\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.post(API_URL + '/ws/roles/create', {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    const newRoleId = data.id;\n                    this.http.put(API_URL + '/ws/roles/updatePrivilege/' + newRoleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('general', 'create_role', this.translate.instant('HISTORY-DESC.create-role', {role: role['label']}));\n                            this.notify.success(this.translate.instant('ROLE.created'));\n                            this.router.navigate(['/settings/general/roles/']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/settings/general/roles/');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        if (this.rolePrivileges) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilegeId === element) {\n                    found = true;\n                }\n            });\n        }\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        }else {\n            this.rolePrivileges.push(privilege);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-2 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of roleForm\">\n                    <mat-form-field *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <mat-tab-group *ngIf=\"this.privileges\" dynamicHeight>\n                <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                    <div class=\"grid grid-cols-4 gap-x-60 gap-y-10 mt-10\">\n                        <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                          [name]=\"privilege\"\n                                          [checked]=\"this.hasPrivilege(privilege)\"\n                                          (change)=\"changePrivilege($event)\">\n                            {{ 'PRIVILEGES.' + privilege | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <div class=\"flex justify-center items-center mt-10\">\n            <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" (click)=\"onSubmit()\" mat-button>\n                {{ 'ROLE.create' | translate }}\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-customer.component.html',\n    styleUrls: ['./update-customer.component.scss']\n})\nexport class UpdateCustomerComponent implements OnInit {\n    headers     : HttpHeaders   = this.authService.headers;\n    loading     : boolean       = true;\n    customerId  : any;\n    addressId   : any;\n    customer    : any;\n    customerForm: any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n    ];\n    addressForm : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        this.customerId = this.route.snapshot.params['id'];\n        this.http.get(API_URL + '/ws/accounts/customers/getById/' + this.customerId, {headers: this.authService.headers}).pipe(\n            tap((customer: any) => {\n                this.customer = customer;\n                for (const field in this.customer) {\n                    if (customer.hasOwnProperty(field)) {\n                        this.customerForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(this.customer[field]);\n                            }else if (field === 'address_id') {\n                                this.addressId = this.customer[field];\n                                if (this.addressId) {\n                                    this.http.get(API_URL + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                        tap((address: any) => {\n                                            for (const field in address) {\n                                                if (address.hasOwnProperty(field)) {\n                                                    this.addressForm.forEach(element => {\n                                                        if (element.id === field) {\n                                                            element.control.setValue(address[field]);\n                                                        }\n                                                    });\n                                                }\n                                            }\n                                        }),\n                                        finalize(() => this.loading = false),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err);\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                }else{\n                                    this.http.post(API_URL + '/ws/accounts/addresses/create',\n                                        {'args': {\n                                                'address1': '',\n                                                'address2': '',\n                                                'postal_code': '',\n                                                'city': '',\n                                                'country': ''\n                                            }\n                                        }, {headers: this.authService.headers},\n                                    ).pipe(\n                                        tap((data: any) => {\n                                            this.addressId = data.id;\n                                            this.http.put(API_URL + '/ws/accounts/customers/update/' + this.customerId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                            ).pipe(\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err, '/accounts/customers/list');\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }),\n                                        catchError((err: any) => {\n                                            console.debug(err);\n                                            this.notify.handleErrors(err, '/accounts/customers/list');\n                                            return of(false);\n                                        })\n                                    ).subscribe();\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(API_URL + '/ws/accounts/customers/update/' + this.customerId, {'args': customer}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(API_URL + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.historyService.addHistory('accounts', 'update_customer', this.translate.instant('HISTORY-DESC.update-customer', {customer: customer['name']}));\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_updated'));\n                    this.router.navigate(['/accounts/customers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"settings_title text-center\" *ngIf=\"this.customer\">\n                <h3>{{ this.serviceSettings.getTitle() }} : {{ this.customer['name'] }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id == 'address1'\" class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {LocalStorageService} from \"./local-storage.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public headers : HttpHeaders;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private userService: UserService,\n        private localStorage: LocalStorageService,\n    ) {\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    generateHeaders() {\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    setCachedUrl(url: string) {\n        this.localStorage.save('OpenCaptureForInvoicesCachedUrl', url);\n    }\n\n    getCachedUrl() {\n        return this.localStorage.get('OpenCaptureForInvoicesCachedUrl');\n    }\n\n    cleanCachedUrl() {\n        return this.localStorage.remove('OpenCaptureForInvoicesCachedUrl');\n    }\n\n    setTokenCustom(name: string, token: string) {\n        this.localStorage.save(name, token);\n    }\n\n    getTokenCustom(name: string) {\n        return this.localStorage.get(name);\n    }\n\n    setTokens(token: string, token2: string, daysBeforeExp: number) {\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken', token, daysBeforeExp);\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken_2', token2, daysBeforeExp);\n    }\n\n    setTokenAuth(token: string, daysBeforeExp: number) {\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken_2', token, daysBeforeExp);\n    }\n\n    getToken() {\n        return this.localStorage.getCookie('OpenCaptureForInvoicesToken');\n    }\n\n    clearTokens() {\n        this.localStorage.deleteCookie('OpenCaptureForInvoicesToken');\n        this.localStorage.deleteCookie('OpenCaptureForInvoicesToken_2');\n        this.localStorage.remove('splitter_or_verifier');\n    }\n\n    logout() {\n        this.userService.setUser({});\n        this.clearTokens();\n        this.router.navigateByUrl(\"/login\").then();\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-supplier.component.html',\n    styleUrls: ['./update-supplier.component.scss']\n})\nexport class UpdateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplierId: any;\n    addressId: any;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values:[]\n        }\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        this.supplierId = this.route.snapshot.params['id'];\n        this.http.get(API_URL + '/ws/forms/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.http.get(API_URL + '/ws/accounts/suppliers/getById/' + this.supplierId, {headers: this.authService.headers}).pipe(\n                    tap((supplier: any) => {\n                        this.supplier = supplier;\n                        for (const field in this.supplier) {\n                            if (supplier.hasOwnProperty(field)) {\n                                this.supplierForm.forEach(element => {\n                                    if (element.id === field) {\n                                        if (element.id === 'get_only_raw_footer') {\n                                            element.control.setValue(!this.supplier[field]);\n                                        }else {\n                                            element.control.setValue(this.supplier[field]);\n                                        }\n                                        if (element.id === 'form_id') {\n                                            element.values = forms.forms;\n                                        }\n                                    }else if (field === 'address_id') {\n                                        this.addressId = this.supplier[field];\n                                        if (this.addressId) {\n                                            this.http.get(API_URL + '/ws/accounts/getAdressById/' + this.addressId, {headers: this.authService.headers}).pipe(\n                                                tap((address: any) => {\n                                                    for (const field in address) {\n                                                        if (address.hasOwnProperty(field)) {\n                                                            this.addressForm.forEach(element => {\n                                                                if (element.id === field) {\n                                                                    element.control.setValue(address[field]);\n                                                                }\n                                                            });\n                                                        }\n                                                    }\n                                                }),\n                                                finalize(() => this.loading = false),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err);\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }else{\n                                            this.http.post(API_URL + '/ws/accounts/addresses/create',\n                                                {'args': {\n                                                        'address1': '',\n                                                        'address2': '',\n                                                        'postal_code': '',\n                                                        'city': '',\n                                                        'country': ''\n                                                    }\n                                                }, {headers: this.authService.headers},\n                                            ).pipe(\n                                                tap((data: any) => {\n                                                    this.addressId = data.id;\n                                                    this.http.put(API_URL + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': {'address_id' : this.addressId}}, {headers: this.authService.headers},\n                                                    ).pipe(\n                                                        finalize(() => this.loading = false),\n                                                        catchError((err: any) => {\n                                                            console.debug(err);\n                                                            this.notify.handleErrors(err, '/accounts/suppliers/list');\n                                                            return of(false);\n                                                        })\n                                                    ).subscribe();\n                                                }),\n                                                catchError((err: any) => {\n                                                    console.debug(err);\n                                                    this.notify.handleErrors(err, '/accounts/customers/list');\n                                                    return of(false);\n                                                })\n                                            ).subscribe();\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.put(API_URL + '/ws/accounts/suppliers/update/' + this.supplierId, {'args': supplier}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(API_URL + '/ws/accounts/addresses/update/' + this.addressId, {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.historyService.addHistory('accounts', 'update_supplier', this.translate.instant('HISTORY-DESC.update-supplier', {supplier: supplier['name']}));\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_updated'));\n                    this.router.navigate(['/accounts/suppliers/list']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"settings_title text-center\" *ngIf=\"this.supplier\">\n                <h3>{{ this.serviceSettings.getTitle() }} : {{ this.supplier['name'] }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center m-10\">\n            <ng-container *ngFor=\"let field of supplierForm\">\n                <mat-slide-toggle *ngIf=\"field.type == 'mat-slide-toggle'\" [formControl]=\"field.control\">\n                    {{ field.label | translate }}\n                </mat-slide-toggle>\n            </ng-container>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-5 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id == 'address1'\" class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../services/user.service\";\nimport {SettingsService} from \"../../services/settings.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-panel',\n    templateUrl: \"settings.component.html\"\n})\n\nexport class SettingsComponent implements OnInit {\n    isMenuOpen              : boolean   = this.serviceSettings.getIsMenuOpen();\n    selectedSetting         : string    = this.serviceSettings.getSelectedSetting();\n    selectedParentSetting   : string    = this.serviceSettings.getSelectedParentSetting();\n    settingListOpenState    : boolean   = this.serviceSettings.getSettingListOpenState();\n    settings                : any       = this.serviceSettings.getSettings();\n\n    constructor(\n        public router: Router,\n        public userService: UserService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) { }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.selectedSetting = this.serviceSettings.getSelectedSetting();\n        this.selectedParentSetting = this.serviceSettings.getSelectedParentSetting();\n        this.settings = this.serviceSettings.getSettings();\n        this.settings[this.selectedParentSetting].forEach((element: any) => {\n            if (element['id'] === this.selectedSetting) {\n                const routeToGo = element.route;\n                if (routeToGo && this.privilegesService.hasPrivilege(element.privilege))\n                    this.router.navigateByUrl(routeToGo).then();\n            }\n        });\n    }\n\n    toggleMenu() {\n        this.isMenuOpen = !this.isMenuOpen;\n    }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {LocalStorageService} from \"../../services/local-storage.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    constructor(\n        private authService: AuthService,\n        private userService: UserService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit() {\n        this.setValue('');\n    }\n\n    setValue(value: string) {\n        this.localeStorageService.save('splitter_or_verifier', value);\n    }\n}\n","<div class=\"flex relative justify-center items-center gap-8\" style=\"height: 85vh\">\n    <mat-card [class.disabled]=\"!this.privilegesService.hasPrivilege('access_splitter')\" class=\"text-center w-full lg:w-1/6 shadow-lg transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/splitter/list\" class=\"block\" (click)=\"setValue('splitter')\">\n            <div class=\"bg-splitter bg-90 bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\"></div>\n        </a>\n        <mat-card-subtitle>\n            {{ 'HOME.splitter' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card [class.disabled]=\"!this.privilegesService.hasPrivilege('access_verifier')\" class=\"text-center w-full lg:w-1/6 shadow-lg transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/verifier/list\" class=\"block\" (click)=\"setValue('verifier')\">\n            <div class=\"bg-verifier bg-50 bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\"></div>\n        </a>\n        <mat-card-subtitle>\n            {{ 'HOME.verifier' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n</div>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create-user',\n    templateUrl: './create-user.component.html',\n    styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n    loading     : boolean   = true;\n    roles       : any[]     = [];\n    userForm    : any[]     = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }\n                });\n                this.userForm.forEach(element => {\n                    if (element.id === 'role') {\n                        element.values = this.roles;\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.userForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    // @ts-ignore\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user : any = {};\n            this.userForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            if (user['password'] !== user['password_check']) {\n                this.notify.handleErrors('USER.password_mismatch');\n                return of(false);\n            }\n\n            this.http.post(API_URL + '/ws/users/new', user, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    const _user = user['lastname'] + ' ' + user['firstname'];\n                    this.historyService.addHistory('general', 'create_user', this.translate.instant('HISTORY-DESC.create-user', {user: _user}));\n                    this.notify.success(this.translate.instant('USER.created'));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userForm.forEach(element => {\n            if(element.id === field)\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.create' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-role.component.html',\n    styleUrls: ['./update-role.component.scss']\n})\nexport class UpdateRoleComponent implements OnInit {\n    headers     : HttpHeaders = this.authService.headers;\n    loading     : boolean   = true;\n    roleId      : any;\n    role        : any;\n    roles       : any[]     = [];\n    privileges  : any;\n    rolePrivileges: any;\n    roleForm    : any[]     = [\n        {\n            id: 'label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'label_short',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'enabled',\n            label: this.translate.instant('ROLE.enable'),\n            type: 'checkbox',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n\n    // Only used to get translation available while running the extract-translations\n    parentLabel = [\n        marker('PRIVILEGES.general'),\n        marker('PRIVILEGES.administration'),\n        marker('PRIVILEGES.verifier'),\n        marker('PRIVILEGES.splitter'),\n        marker('PRIVILEGES.accounts')\n    ];\n    privilegesLabel = [\n        marker('PRIVILEGES.access_verifier'),\n        marker('PRIVILEGES.access_splitter'),\n        marker('PRIVILEGES.settings'),\n        marker('PRIVILEGES.upload'),\n        marker('PRIVILEGES.users_list'),\n        marker('PRIVILEGES.add_user'),\n        marker('PRIVILEGES.update_user'),\n        marker('PRIVILEGES.roles_list'),\n        marker('PRIVILEGES.add_role'),\n        marker('PRIVILEGES.update_role'),\n        marker('PRIVILEGES.version_update'),\n        marker('PRIVILEGES.custom_fields'),\n        marker('PRIVILEGES.forms_list'),\n        marker('PRIVILEGES.customers_list'),\n        marker('PRIVILEGES.suppliers_list'),\n        marker('PRIVILEGES.create_supplier'),\n        marker('PRIVILEGES.update_supplier'),\n        marker('PRIVILEGES.change_language'),\n        marker('PRIVILEGES.form_builder'),\n        marker('PRIVILEGES.export_suppliers'),\n        marker('PRIVILEGES.history'),\n        marker('PRIVILEGES.add_output'),\n        marker('PRIVILEGES.add_input'),\n        marker('PRIVILEGES.add_form'),\n        marker('PRIVILEGES.update_output'),\n        marker('PRIVILEGES.update_input'),\n        marker('PRIVILEGES.position_mask_list'),\n        marker('PRIVILEGES.update_form'),\n        marker('PRIVILEGES.inputs_list'),\n        marker('PRIVILEGES.outputs_list'),\n        marker('PRIVILEGES.add_position_mask'),\n        marker('PRIVILEGES.update_position_mask'),\n        marker('PRIVILEGES.create_customer'),\n        marker('PRIVILEGES.update_customer'),\n    ];\n    // End translation\n    constructor(\n        private http: HttpClient,\n        public router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.serviceSettings.init();\n        this.roleId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/roles/getById/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.role = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.roleForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                            }\n                        });\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/general/roles']).then();\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/privileges/getbyRoleId/' + this.roleId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.rolePrivileges = data;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/privileges/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.privileges = data;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/roles');\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.roleForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const role: any = {};\n            this.roleForm.forEach(element => {\n                role[element.id] = element.control.value;\n            });\n\n            const rolePrivileges: any[] = [];\n            this.privileges['privileges'].forEach((element: any) => {\n                this.rolePrivileges.forEach((element2: any) => {\n                    if (element['label'] === element2) {\n                        rolePrivileges.push(element['id']);\n                    }\n                });\n            });\n\n            this.http.put(API_URL + '/ws/roles/update/' + this.roleId, {'args': role}, {headers: this.authService.headers},\n            ).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n\n            this.http.put(API_URL + '/ws/roles/updatePrivilege/' + this.roleId, {'privileges': rolePrivileges}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.historyService.addHistory('general', 'update_role', this.translate.instant('HISTORY-DESC.update-role', {role: role['label']}));\n                    this.notify.success(this.translate.instant('ROLE.updated'));\n                    this.router.navigate(['/settings/general/roles/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/roles/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.roleForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasPrivilege(privilegeId: number) {\n        let found = false;\n        this.rolePrivileges.forEach((element: any) => {\n            if (privilegeId === element) {\n                found = true;\n            }\n        });\n        return found;\n    }\n\n    getChildsByParent(parent: any) {\n        const data: any[] = [];\n        this.privileges['privileges'].forEach((element: any) => {\n            if (parent === element['parent']) {\n                data.push(element['label']);\n            }\n        });\n        return data;\n    }\n\n    changePrivilege(event: any) {\n        const privilege = event.source.name;\n        const checked = event.checked;\n        if (!checked) {\n            this.rolePrivileges.forEach((element: any) => {\n                if (privilege === element) {\n                    const index = this.rolePrivileges.indexOf(privilege, 0);\n                    this.rolePrivileges.splice(index, 1);\n                }\n            });\n        }else{\n            this.rolePrivileges.push(privilege);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\" *ngIf=\"this.role\">\n                <h3>{{ this.serviceSettings.getTitle() }} : {{ this.role['label'] }} <b>({{ this.role['label_short'] }})</b></h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of roleForm\">\n                    <mat-form-field *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-checkbox class=\"mt-4 -ml-72\"\n                            *ngIf=\"field.type == 'checkbox'\"\n                            [formControl]=\"field.control\">\n                        {{ field.label | translate }}\n                    </mat-checkbox>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-10\">{{ 'PRIVILEGES.list' | translate }}</h4>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <mat-tab-group *ngIf=\"this.privileges && this.rolePrivileges\" dynamicHeight>\n                <mat-tab *ngFor=\"let parent of this.privileges['parent']\" [label]=\"this.translate.instant('PRIVILEGES.' + parent)\">\n                    <div class=\"grid grid-cols-4 gap-x-40 gap-y-10 mt-10\">\n                        <mat-slide-toggle *ngFor=\"let privilege of this.getChildsByParent(parent)\"\n                                          [name]=\"privilege\"\n                                          [checked]=\"this.hasPrivilege(privilege)\"\n                                          (change)=\"changePrivilege($event)\">\n                            {{ 'PRIVILEGES.' + privilege | translate }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n        <div class=\"flex justify-center items-center mt-10\">\n            <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" (click)=\"onSubmit()\" mat-button>\n                {{ 'ROLE.update' | translate }}\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\nimport {SettingsService} from \"../../services/settings.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {FormControl} from \"@angular/forms\";\nimport {API_URL} from \"../env\";\nimport {catchError, finalize, map, startWith, tap} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {Sort} from \"@angular/material/sort\";\nimport { DatePipe } from '@angular/common';\nimport * as moment from \"moment\";\n\n@Component({\n    selector: 'app-history',\n    templateUrl: './history.component.html',\n    styleUrls: ['./history.component.scss'],\n    providers: [DatePipe]\n})\nexport class HistoryComponent implements OnInit {\n    filteredUsers       : Observable<any> | undefined;\n    columnsToDisplay    : string[] = ['id', 'history_module', 'history_submodule', 'history_date', 'user_info', 'history_desc', 'user_ip'];\n    loading             : boolean  = true;\n    toHighlight         : string   = '';\n    pageSize            : number   = 10;\n    pageIndex           : number   = 0;\n    total               : number   = 0;\n    offset              : number   = 0;\n    history             : any;\n    users               : any;\n    userSelected        : string = '';\n    moduleSelected      : string = '';\n    subModuleSelected   : string = '';\n    form                : any[]    = [\n        {\n            'id': 'user_id',\n            'type': 'autocomplete',\n            'label': this.translate.instant('HISTORY.user'),\n            'control': new FormControl(),\n            'values': []\n        },\n        {\n            'id': 'module',\n            'label': this.translate.instant('HISTORY.module'),\n            'type': 'select',\n            'control': new FormControl(),\n            'values': [\n                {\n                    'id': 'general',\n                    'label': this.translate.instant('HISTORY.general')\n                },\n                {\n                    'id': 'accounts',\n                    'label': this.translate.instant('HISTORY.accounts')\n                },\n                {\n                    'id': 'verifier',\n                    'label': this.translate.instant('HOME.verifier')\n                },\n                {\n                    'id': 'splitter',\n                    'label': this.translate.instant('HOME.splitter')\n                }\n            ]\n        },\n        {\n            'id': 'submodule',\n            'type': 'select',\n            'label': this.translate.instant('HISTORY.submodule'),\n            'control': new FormControl(),\n            'values': []\n        },\n    ];\n\n    constructor(\n        private http: HttpClient,\n        private datePipe: DatePipe,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        public serviceSettings: SettingsService,\n    ) {}\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        }else {\n            return array;\n        }\n    }\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/users/list_full', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.users = [];\n                this.form.forEach((element: any) => {\n                    if (element.id === 'user_id') {\n                        this.http.get(API_URL + '/ws/history/users', {headers: this.authService.headers}).pipe(\n                            tap((userHistory: any) => {\n                                userHistory.history.forEach((_user: any) => {\n                                    data.users.forEach((user: any) => {\n                                        if (_user.user_id === user.id) {\n                                            this.users.push(user);\n                                        }\n                                    });\n                                });\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                        this.filteredUsers = element.control.valueChanges\n                            .pipe(\n                                startWith(''),\n                                map(option => option ? this._filter(option, this.users) : this.users)\n                            );\n                    } else if (element.id === 'submodule') {\n                        this.http.get(API_URL + '/ws/history/submodules', {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadHistory();\n    }\n\n    loadHistory() {\n        this.http.get(\n            API_URL + '/ws/history/list?limit=' + this.pageSize + '&offset=' + this.offset + '&user=' + this.userSelected + '&submodule=' + this.subModuleSelected + '&module=' + this.moduleSelected,\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.history[0]) this.total = data.history[0].total;\n                this.history = data.history;\n                this.form.forEach((element: any) => {\n                    if (element.id === 'module') {\n                        element.values.forEach((module: any) => {\n                            this.history.forEach((history: any) => {\n                                if (history.history_module === module.id) {\n                                    history.history_module = this.translate.instant(module.label);\n                                }\n                            });\n                        });\n                    }\n                    if (element.id === 'submodule') {\n                        this.http.get(API_URL + '/ws/history/submodules?module=' + this.moduleSelected, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                element.values = data['history'];\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    }\n                });\n\n                this.history.forEach((element: any) => {\n                    const format = moment().localeData().longDateFormat('L');\n                    element.history_date = this.datePipe.transform(element.history_date, format + ' HH:mm:ss');\n                });\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    resetPaginator() {\n        this.loading = true;\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n    }\n\n    setSelectedUser(userId: any) {\n        this.userSelected = userId;\n        this.pageIndex = 0;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedModule(module: any) {\n        this.moduleSelected = module;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    setSelectedSubModule(subModule: any) {\n        this.subModuleSelected = subModule;\n        this.resetPaginator();\n        this.loadHistory();\n    }\n\n    resetFilter() {\n        this.subModuleSelected = '';\n        this.moduleSelected = '';\n        this.userSelected = '';\n        this.form.forEach((element: any) => {\n            element.control.setValue('');\n        });\n        this.loadHistory();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.loadHistory();\n    }\n\n    displayFn(option: any) {\n        return option ? option.lastname + ' ' + option.firstname + ' (' + option.username + ')' : '';\n    }\n\n    sortData(sort: Sort) {\n        const data = this.history.slice();\n        if(!sort.active || sort.direction === '') {\n            this.history = data;\n            return;\n        }\n\n        this.history = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'history_module': return this.compare(a.history_module, b.history_module, isAsc);\n                case 'history_submodule': return this.compare(a.history_submodule, b.history_submodule, isAsc);\n                case 'history_date': return this.compare(a.history_date, b.history_date, isAsc);\n                case 'user_info': return this.compare(a.user_info, b.user_info, isAsc);\n                case 'history_desc': return this.compare(a.history_desc, b.history_desc, isAsc);\n                case 'user_ip': return this.compare(a.user_ip, b.user_ip, isAsc);\n                default: return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center\">\n            <div class=\"m-auto w-1/12 text-center\">{{ 'HISTORY.filter' | translate }} : </div>\n            <form class=\"grid grid-cols-3 gap-6 w-full mt-5 mb-0 text-center\">\n                <ng-container *ngFor=\"let field of form\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.id == 'submodule'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\"\n                                    [required]=\"field.required\" (selectionChange)=\"setSelectedSubModule($event.value)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['history_submodule']\">{{ option['history_submodule'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.id == 'module'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\"\n                                    [required]=\"field.required\" (selectionChange)=\"setSelectedModule($event.value)\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] | translate }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type == 'autocomplete'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" [matAutocomplete]=\"autocomplete\">\n                        <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                        <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\"\n                                          (optionSelected)=\"setSelectedUser($event.option.id)\">\n                            <mat-option *ngFor=\"let option of filteredUsers | async\" [value]=\"option\" [id]=\"option.id\">\n                                <span [innerHTML]=\"option.lastname + ' ' + option.firstname + ' (' + option.username + ')' | highlight: toHighlight\"></span>\n                            </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n            <div class=\"m-auto w-1/12 text-center text-xl cursor-pointer\" (click)=\"resetFilter()\"\n                 [matTooltip]=\"'HISTORY.refresh_filter' | translate\">\n                <i class=\"fas fa-sync-alt\"></i>\n            </div>\n        </div>\n        <hr class=\"border-green-400 w-1/3 mx-auto my-4\">\n        <div class=\"flex justify-center\">\n            <mat-table matSort [dataSource]=\"history\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n                <ng-container matColumnDef=\"id\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 180px!important;\"> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 180px!important;\"> {{ element.id }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_module\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\"> {{ 'HISTORY.module' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\"> {{ element.history_module }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_submodule\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 190px!important;\"> {{ 'HISTORY.submodule' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 190px!important;\"> {{ element.history_submodule }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_date\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\"> {{ 'HISTORY.history_date' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\"> {{ element.date }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"user_info\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 220px!important;\"> {{ 'HISTORY.user_info' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 220px!important;\"> {{ element.user_info }} </mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"history_desc\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HISTORY.history_desc' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" [innerHTML]=\"'<span>' + element.history_desc + '</span>'\"></mat-cell>\n                </ng-container>\n                <ng-container matColumnDef=\"user_ip\">\n                    <mat-header-cell mat-sort-header *matHeaderCellDef style=\"flex: 0 0 350px !important\"> {{ 'HISTORY.user_ip' | translate }} </mat-header-cell>\n                    <mat-cell *matCellDef=\"let element\" style=\"flex: 0 0 350px !important\"> {{ element.user_ip }} </mat-cell>\n                </ng-container>\n                <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                         class=\"hover:text-green-400 select-none hover:shadow-md transition-colors duration-300\"></mat-row>\n            </mat-table>\n        </div>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {moveItemInArray, transferArrayItem} from \"@angular/cdk/drag-drop\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'form-builder',\n    templateUrl: './form-builder.component.html',\n    styleUrls: ['./form-builder.component.scss'],\n})\nexport class FormBuilderComponent implements OnInit {\n    loading                 : boolean   = true;\n    outputs                 : any[]     = [];\n    form                    : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'default_form': {\n            'control': new FormControl(),\n        },\n        'supplier_verif': {\n            'control': new FormControl(),\n        }\n    };\n    outputForm              : any       = [\n        {\n            control: new FormControl(),\n            cpt: 0\n        }\n    ];\n    formId                  : any;\n    creationMode            : boolean   = true;\n    labelType               : any []    = [\n        marker('TYPES.text'),\n        marker('TYPES.textarea'),\n        marker('TYPES.date'),\n        marker('TYPES.select'),\n        marker('VERIFIER.field_settings'),\n        marker('FORMS.delete_field'),\n    ];\n    fieldCategories         : any []    = [\n        {\n            'id': 'supplier',\n            'label': marker('FORMS.supplier')\n        },\n        {\n            'id': 'facturation',\n            'label': marker('FACTURATION.facturation')\n        },\n        {\n            'id': 'other',\n            'label': marker('FORMS.other')\n        }\n    ];\n    availableFieldsParent   : any []    = [\n        {\n            'id': 'accounts_fields',\n            'label': marker('ACCOUNTS.supplier'),\n            'values': [\n                {\n                    id: 'name',\n                    label: marker('ACCOUNTS.supplier_name'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'white',\n                    format: 'alphanum',\n                    format_icon:'fas fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'siret',\n                    label: marker('ACCOUNTS.siret'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'green',\n                    format: 'number_int',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'siren',\n                    label: marker('ACCOUNTS.siren'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'lime',\n                    format: 'number_int',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'vat_number',\n                    label: marker('ACCOUNTS.vat_number'),\n                    unit: 'supplier',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'olive',\n                    format: 'alphanum',\n                    format_icon:'fas fas fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'address1',\n                    label: marker('ADDRESSES.address_1'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum',\n                    format_icon:'fas fas fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'address2',\n                    label: marker('ADDRESSES.address_2'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'alphanum',\n                    format_icon:'fas fas fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'postal_code',\n                    label: marker('ADDRESSES.postal_code'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_int',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'city',\n                    label: marker('ADDRESSES.city'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fas fa-font',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'country',\n                    label: marker('ADDRESSES.country'),\n                    unit: 'addresses',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'char',\n                    format_icon:'fas fa-font',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n            ]\n        },\n        {\n            'id': 'facturation_fields',\n            'label': this.translate.instant('FACTURATION.facturation'),\n            'values': [\n                {\n                    id: 'order_number',\n                    label: marker('FACTURATION.order_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'yellow',\n                    format: 'alphanum_extended',\n                    format_icon: 'fas fa-hashtag',\n                    display: 'multi',\n                    display_icon:'fas fa-layer-group'\n\n                },\n                {\n                    id: 'delivery_number',\n                    label: marker('FACTURATION.delivery_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'silver',\n                    format: 'alphanum_extended',\n                    format_icon: 'fas fa-hashtag',\n                    display: 'multi',\n                    display_icon:'fas fa-layer-group'\n                },\n                {\n                    id: 'invoice_number',\n                    label: marker('FACTURATION.invoice_number'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'red',\n                    format: 'alphanum_extended',\n                    format_icon: 'fas fa-hashtag',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'invoice_date',\n                    label: marker('FACTURATION.invoice_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'yellow',\n                    format: 'date',\n                    format_icon: 'fas fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'invoice_due_date',\n                    label: marker('FACTURATION.invoice_due_date'),\n                    unit: 'facturation',\n                    type: 'date',\n                    required: false,\n                    required_icon: 'far fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'blue',\n                    format: 'date',\n                    format_icon: 'fas fa-calendar-day',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'vat_rate',\n                    label: marker('FACTURATION.vat_rate'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'pink',\n                    format: 'number_float',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'multi',\n                    display_icon:'fas fa-layer-group'\n                },\n                {\n                    id: 'no_rate_amount',\n                    label: marker('FACTURATION.no_rate_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'fuschia',\n                    format: 'number_float',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'multi',\n                    display_icon:'fas fa-layer-group'\n                },\n                {\n                    id: 'vat_amount',\n                    label: marker('FACTURATION.vat_amount'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: 'purple',\n                    format: 'number_float',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'multi',\n                    display_icon:'fas fa-layer-group'\n                },\n                {\n                    id: 'accounting_plan',\n                    label: marker('FACTURATION.accounting_plan'),\n                    unit: 'facturation',\n                    type: 'select',\n                    required: false,\n                    format: 'select',\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    display: 'multi',\n                    display_icon:'fas fa-layer-group'\n                },\n                {\n                    id: 'total_ttc',\n                    label: marker('FACTURATION.total_ttc'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'total_ht',\n                    label: this.translate.instant('FACTURATION.total_ht'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    format: 'number_float',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n                {\n                    id: 'total_vat',\n                    label: this.translate.instant('FACTURATION.total_vat'),\n                    unit: 'facturation',\n                    type: 'text',\n                    required: true,\n                    required_icon: 'fas fa-star',\n                    class: \"w-1/3\",\n                    class_label: \"1/33\",\n                    color: '',\n                    format: 'number_float',\n                    format_icon:'text-lg icomoon-numbers',\n                    display: 'simple',\n                    display_icon:'fas file-alt'\n                },\n            ]\n        },\n        {\n            'id': 'custom_fields',\n            'label': marker('FORMS.custom_fields'),\n            'values': []\n        },\n    ];\n    fields                  : any       = {\n        'supplier': [],\n        'facturation': [],\n        'other': []\n    };\n    classList               : any []    = [\n        {\n            'id': 'w-full',\n            'label': '1'\n        },\n        {\n            'id': 'w-1/2',\n            'label': '1/2'\n        },\n        {\n            'id': 'w-30',\n            'label': '1/3'\n        },\n        {\n            'id': 'w-1/3',\n            'label': '1/33'\n        },\n        {\n            'id': 'w-1/4',\n            'label': '1/4'\n        },\n        {\n            'id': 'w-1/5',\n            'label': '1/5'\n        }\n    ];\n    colorsList              : any []    = [\n        {\n            'id': 'yellow',\n            'label': marker('COLORS.yellow')\n        },\n        {\n            'id': 'pink',\n            'label': marker('COLORS.pink')\n        },\n        {\n            'id': 'red',\n            'label': marker('COLORS.red')\n        },\n        {\n            'id': 'blue',\n            'label': marker('COLORS.blue')\n        },\n        {\n            'id': 'orange',\n            'label': marker('COLORS.orange')\n        },\n        {\n            'id': 'purple',\n            'label': marker('COLORS.purple')\n        },\n        {\n            'id': 'black',\n            'label': marker('COLORS.black')\n        },\n        {\n            'id': 'white',\n            'label': marker('COLORS.white')\n        },\n        {\n            'id': 'aqua',\n            'label': marker('COLORS.aqua')\n        },\n        {\n            'id': 'maroon',\n            'label': marker('COLORS.maroon')\n        },\n        {\n            'id': 'teal',\n            'label': marker('COLORS.teal')\n        },\n        {\n            'id': 'navy',\n            'label': marker('COLORS.navy')\n        },\n        {\n            'id': 'fuchsia',\n            'label': marker('COLORS.fuchsia')\n        },\n        {\n            'id': 'silver',\n            'label': marker('COLORS.silver')\n        },\n        {\n            'id': 'gray',\n            'label': marker('COLORS.gray')\n        },\n        {\n            'id': 'lime',\n            'label': marker('COLORS.lime')\n        },\n        {\n            'id': 'green',\n            'label': marker('COLORS.green')\n        },\n    ];\n    formatList              : any []    = [\n        {\n            'id': 'date',\n            'label': marker('FORMATS.date'),\n            'icon': 'fas fa-calendar-day'\n        },\n        {\n            'id': 'number_float',\n            'label': marker('FORMATS.number_float'),\n            'icon': 'text-lg icomoon-numbers'\n        },\n        {\n            'id': 'number_int',\n            'label': marker('FORMATS.number_int'),\n            'icon': 'text-lg icomoon-numbers'\n        },\n        {\n            'id': 'char',\n            'label': marker('FORMATS.char'),\n            'icon': 'fas fa-font'\n        },\n        {\n            'id': 'alphanum',\n            'label': marker('FORMATS.alphanum'),\n            'icon': 'fas fa-hashtag'\n        },\n        {\n            'id': 'alphanum_extended',\n            'label': marker('FORMATS.alphanum_extended'),\n            'icon': 'fas fa-level-up-alt'\n        }\n    ];\n    displayList             : any []    = [\n        {\n            'id': 'simple',\n            'label': marker('DISPLAY.simple'),\n            'icon': 'fas fa-file-alt'\n        },\n        {\n            'id': 'multi',\n            'label': marker('DISPLAY.multi'),\n            'icon': 'fas fa-layer-group'\n        },\n    ];\n    mandatoryList           : any []    = [\n        {\n            'id': true,\n            'label': marker('MANDATORY.required'),\n            'icon': 'fas fa-star'\n        },\n        {\n            'id': false,\n            'label': marker('MANDATORY.not_required'),\n            'icon': 'far fa-star'\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.formId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/outputs/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.outputs = data.outputs;\n                if (this.formId) {\n                    this.creationMode = false;\n                    this.http.get(API_URL + '/ws/forms/getById/' + this.formId, {headers: this.authService.headers}).pipe(\n                        tap((data: any) => {\n                            for (const field in this.form) {\n                                for (const info in data) {\n                                    if (info === field) this.form[field].control.setValue(data[field]);\n                                }\n                            }\n\n                            if (data.outputs) {\n                                const length = data.outputs.length;\n                                if (length === 1) this.outputForm[0].control.setValue(data.outputs[0]);\n                                if (length > 1) {\n                                    for (const cpt in data.outputs) {\n                                        if (parseInt(cpt) !== 0) this.addOutput();\n                                        this.outputForm[cpt].control.setValue(data.outputs[cpt]);\n                                    }\n                                }\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n            }),catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/customFields/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.customFields) {\n                    for (const field in data.customFields) {\n                        if (data.customFields.hasOwnProperty(field)) {\n                            if(data.customFields[field].module === 'verifier') {\n                                for (const parent in this.availableFieldsParent) {\n                                    if(this.availableFieldsParent[parent].id === 'custom_fields') {\n                                        this.availableFieldsParent[parent].values.push(\n                                            {\n                                                id: 'custom_' + data.customFields[field].id,\n                                                label: data.customFields[field].label,\n                                                unit: 'custom',\n                                                type: data.customFields[field].type,\n                                                format: data.customFields[field].type,\n                                                required: data.customFields[field].required,\n                                                class: \"w-1/3\",\n                                                class_label: \"1/33\",\n                                            }\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        if (this.formId) {\n            this.http.get(API_URL + '/ws/forms/getFields/' + this.formId, {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    if (data.form_fields.fields) {\n                        if(data.form_fields.fields.facturation !== undefined)\n                            this.fields.facturation = data.form_fields.fields.facturation;\n                        if(data.form_fields.fields.supplier)\n                            this.fields.supplier = data.form_fields.fields.supplier;\n                        if(data.form_fields.fields.other)\n                            this.fields.other = data.form_fields.fields.other;\n\n                        for (const category in this.fields) {\n                            if (this.fields.hasOwnProperty(category)) {\n                                this.fields[category].forEach((currentField: any) => {\n                                    this.availableFieldsParent.forEach((parent: any) => {\n                                        let cpt = 0;\n                                        parent['values'].forEach((childFields: any) => {\n                                            if (currentField.id === childFields.id) {\n                                                parent['values'].splice(cpt, 1);\n                                            }\n                                            cpt = cpt + 1;\n                                        });\n                                    });\n                                });\n                            }\n                        }\n                    }\n                }),\n                finalize(() => setTimeout(() => {\n                    this.loading = false;\n                }, 500)),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else {\n            this.loading = false;\n        }\n    }\n\n    dropFromAvailableFields(event: any) {\n        const unit = event.previousContainer.id;\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[unit],\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    changeClass(fieldId: any, newClass: any, classLabel: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.class = newClass;\n                element.class_label = classLabel;\n            }\n        });\n    }\n\n    changeFormat(fieldId: any, newFormat: any, formatIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.format = newFormat;\n                element.format_icon = formatIcon;\n            }\n        });\n    }\n\n    changeDisplay(fieldId: any, newDisplay: any, displayIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.display = newDisplay;\n                element.display_icon = displayIcon;\n            }\n        });\n    }\n\n    changeRequired(fieldId: any, newRequired: any, requiredIcon: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.required = newRequired;\n                element.required_icon = requiredIcon;\n            }\n        });\n    }\n\n    changeColor(fieldId: any, newColor: any, category: any) {\n        const id = fieldId;\n        this.fields[category].forEach((element: any) => {\n            if (element.id === id) {\n                element.color = newColor;\n            }\n        });\n    }\n\n    dropFromForm(event: any) {\n        const unit = event.container.id;\n        const previousUnit = event.previousContainer.id;\n\n        if (event.previousContainer === event.container) {\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            transferArrayItem(event.previousContainer.data ? event.previousContainer.data : this.fields[previousUnit],\n                event.container.data ? event.container.data : this.fields[unit],\n                event.previousIndex,\n                event.currentIndex);\n        }\n    }\n\n    deleteField(event: any, previousIndex: any, category:any, unit: any) {\n        if (unit === 'addresses')\n            unit = 'supplier';\n        for (const parentField in this.availableFieldsParent) {\n            const id = this.availableFieldsParent[parentField].id.split('_fields')[0];\n            if (id === unit) {\n                const currentIndex = this.availableFieldsParent[parentField]['values'].length;\n                transferArrayItem(this.fields[category],\n                    this.availableFieldsParent[parentField]['values'],\n                    previousIndex,\n                    currentIndex);\n            }\n        }\n    }\n\n    storeNewOrder(event: any, categoryId: any) {\n        const tmpCurrentOrder: any[] = [];\n        event.currentOrder.forEach((element: any) => {\n            this.fields[categoryId].forEach((field: any) => {\n                if (element.id === field.id) {\n                    tmpCurrentOrder.push(element);\n                }\n            });\n        });\n        this.fields[categoryId] = tmpCurrentOrder;\n    }\n\n    addOutput() {\n        this.outputForm[0].cpt = this.outputForm[0].cpt + 1;\n        const cpt = this.outputForm[0].cpt;\n        this.outputForm.push({\n            'control': new FormControl(),\n            'canRemove': true\n        });\n    }\n\n    removeOutput(cpt: any) {\n        this.outputForm.splice(cpt, 1);\n    }\n\n    updateForm() {\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        const supplierVerif = this.form.supplier_verif.control.value;\n        const outputs: any[] = [];\n        this.outputForm.forEach((element: any) => {\n            if (element.control.value) outputs.push(element.control.value);\n        });\n\n        if (label !== '' && outputs.length >= 1) {\n            this.http.put(API_URL + '/ws/forms/update/' + this.formId, {\n                'args': {'label' : label, 'default_form' : isDefault, 'supplier_verif': supplierVerif, 'outputs': outputs}\n                }, {headers: this.authService.headers},\n            ).pipe(\n                tap(()=> {\n                    this.http.post(API_URL + '/ws/forms/updateFields/' + this.formId, this.fields, {headers: this.authService.headers}).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('verifier', 'update_form', this.translate.instant('HISTORY-DESC.update-form', {form: label}));\n                            this.notify.success(this.translate.instant('FORMS.updated'));\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else {\n            if (!label && outputs.length === 0) this.notify.error(this.translate.instant('FORMS.label_and_output_mandatory'));\n            else if (!label) this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n            else if (outputs.length === 0) this.notify.error(this.translate.instant('FORMS.output_type_mandatory'));\n        }\n    }\n\n    createForm() {\n        const label = this.form.label.control.value;\n        const isDefault = this.form.default_form.control.value;\n        const supplierVerif = this.form.supplier_verif.control.value;\n        if (label) {\n            this.http.post(API_URL + '/ws/forms/add', {'args': {'label' : label, 'default_form' : isDefault, 'supplier_verif': supplierVerif}}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.http.post(API_URL + '/ws/forms/updateFields/' + data.id, this.fields, {headers: this.authService.headers}).pipe(\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n                    this.historyService.addHistory('verifier', 'create_form', this.translate.instant('HISTORY-DESC.create-form', {form: label}));\n                    this.notify.success(this.translate.instant('FORMS.created'));\n                    this.router.navigateByUrl('settings/verifier/forms').then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else{\n            this.notify.error(this.translate.instant('FORMS.label_mandatory'));\n        }\n    }\n}\n","<mat-sidenav-container cdkDropListGroup class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n            <button mat-icon-button (click)=\"sidenav2.toggle();\"\n                    class=\"absolute right-2 top-2\">\n                <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fas fa-stream text-xl text-gray-900\"></i>\n            </button>\n        </div>\n        <div *ngIf=\"!loading\" class=\"overflow-auto\" style=\"height: calc(100% - 64px)\">\n            <div class=\"grid grid-cols-3 gap-4 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"FORMS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['default_form'].control\">\n                        {{ \"FORMS.is_default\" | translate }}\n                    </mat-slide-toggle>\n                </div>\n                <div class=\"flex justify-center mt-4\">\n                    <mat-slide-toggle [formControl]=\"this.form['supplier_verif'].control\">\n                        {{ \"FORMS.supplier_verif\" | translate }}\n                    </mat-slide-toggle>\n                    <mat-hint class=\"absolute mt-8\">{{ \"FORMS.supplier_verif_hint\" | translate }}</mat-hint>\n                </div>\n                <mat-form-field *ngFor=\"let field of this.outputForm; let cpt = index\">\n                    <mat-label>{{ \"HEADER.choose_output\" | translate }}</mat-label>\n                    <mat-select [(ngModel)]=\"field.control.value\">\n                        <mat-option *ngFor=\"let option of this.outputs\" value=\"{{option.id}}\">\n                            {{ option.output_label }}\n                        </mat-option>\n                    </mat-select>\n                    <span *ngIf=\"!field.canRemove\" (click)=\"$event.stopPropagation(); addOutput()\"\n                          matTooltip=\"{{ 'OUTPUT.add' | translate }}\"\n                          class=\"absolute top-1 right-4 cursor-pointer text-gray-900 z-50\" style=\"right: -2.2rem\">\n                        <mat-icon class=\"text-lg\">add_circle</mat-icon>\n                    </span>\n                    <span *ngIf=\"field.canRemove\" (click)=\"$event.stopPropagation(); removeOutput(cpt)\"\n                          matTooltip=\"{{ 'OUTPUT.remove' | translate }}\"\n                          class=\"absolute top-1 right-4 cursor-pointer text-red-500\" style=\"right: -2.2rem\">\n                        <mat-icon class=\"text-xl\">delete_forever</mat-icon>\n                    </span>\n                </mat-form-field>\n            </div>\n            <ng-container *ngFor=\"let category of fieldCategories; let i = index\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white\" style=\"top: 2.5rem; left:2.5rem;\" [style]=\"'width:calc(3% + ' + this.translate.instant(category['label']).length + '%)'\">\n                    {{ category['label'] | translate }}\n                </div>\n                <div class=\"border-green-400 border rounded-lg mx-6 m-7\">\n                    <div cdkDropList (cdkDropListDropped)=\"dropFromForm($event)\" id=\"{{ category['id'] }}\"\n                         class=\"flex flex-wrap cursor-pointer w-full my-3\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.fields[category['id']]; let index = index\" class=\"flex items-center px-3 overflow-hidden\" [class]=\"field.class\"\n                             ngSortGridGroup=\"{{ category['id'] }}\" ngSortgridItem [ngSortGridItems]=\"fields[category['id']]\" (sorted)=\"storeNewOrder($event, category['id'])\">\n                            <mat-form-field class=\"right-0 w-full form-builder\"\n                                            [matTooltipClass]=\"'-mt-3'\"\n                                            [matTooltipDisabled]=\"field.type == 'select'\"\n                                            [matTooltip]=\"this.translate.instant(field['label']) + ' (' + this.translate.instant('FORMATS.' + field.format) + ')'\">\n                                <i cdkDrag class=\"fas fa-trash\" (click)=\"deleteField($event, index, category['id'], field.unit)\" [matTooltip]=\"this.translate.instant('FORMS.delete_field')\"></i>\n                                <mat-label class=\"border-r-2 border-green-400 inline-block overflow-ellipsis overflow-hidden whitespace-nowrap w-10/12\">\n                                    <span *ngIf=\"field.required\" class=\"text-red-500 mr-2\">*</span>\n                                    <b>{{ field.label | translate }}</b>\n                                    <span *ngIf=\"field.type != 'select' && field.type != 'textarea'\"> ({{ 'FORMATS.' + field.format | translate }})</span>\n                                    <span *ngIf=\"field.type == 'select'\"> ({{ 'FORMATS.select' | translate }})</span>\n                                    <span *ngIf=\"field.type == 'textarea'\"> ({{ 'FORMATS.textarea' | translate }})</span>\n                                </mat-label>\n                                <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                <div class=\"absolute top-0 -right-4\">\n                                    <button mat-button [matMenuTriggerFor]=\"menu\"\n                                            [matTooltip]=\"this.translate.instant('VERIFIER.field_settings')\"\n                                            matTooltipPosition=\"above\">\n                                        <mat-icon class=\"field_settings text-md\">more_vert</mat-icon>\n                                    </button>\n                                    <mat-menu #menu=\"matMenu\">\n                                        <button mat-menu-item [matMenuTriggerFor]=\"colors\"\n                                                *ngIf=\"field.type != 'select'\"\n                                                [style]=\"'background-color:' + field.color\"\n                                                [class.text-white]=\"field.color == 'black' || field.color == 'navy'\">\n                                            {{ \"VERIFIER.colors\" | translate }}\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"size\">\n                                            {{ \"VERIFIER.size\" | translate }} <small class=\"ml-2\">{{ field.class_label }}</small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"format\" *ngIf=\"field.type != 'select'\">\n                                            {{ \"VERIFIER.format\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.format_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"display\" *ngIf=\"field.type != 'select'\">\n                                            {{ \"VERIFIER.display\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.display_icon }}\"></i></small>\n                                        </button>\n                                        <button mat-menu-item [matMenuTriggerFor]=\"required\">\n                                            {{ \"VERIFIER.required\" | translate }} <small class=\"ml-2\"><i class=\"text-base {{ field.required_icon }}\"></i></small>\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #size=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _class of classList\"\n                                                (click)=\"changeClass(field.id, _class.id, _class.label, category['id'])\"\n                                                [class.bg-green-400]=\"_class.id == field.class\">\n                                            {{ _class.label | translate  }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #colors=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _color of colorsList\"\n                                                (click)=\"changeColor(field.id, _color.id, category['id'])\"\n                                                [style]=\"'background-color:' + _color.id\"\n                                                [class.text-white]=\"_color.id == 'black' || _color.id == 'navy'\">\n                                            {{ _color.label | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #format=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _format of formatList\"\n                                                (click)=\"changeFormat(field.id, _format.id, _format.icon, category['id'])\"\n                                                [class.bg-green-400]=\"_format.id == field.format\">\n                                            {{ _format.label | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #display=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let _display of displayList\"\n                                                (click)=\"changeDisplay(field.id, _display.id, _display.icon, category['id'])\"\n                                                [class.bg-green-400]=\"_display.id == field.display\">\n                                            {{ _display.label | translate }}\n                                        </button>\n                                    </mat-menu>\n                                    <mat-menu #required=\"matMenu\">\n                                        <button mat-menu-item [id]=\"field.id\"\n                                                *ngFor=\"let required of mandatoryList\"\n                                                (click)=\"changeRequired(field.id, required.id, required.icon, category['id'])\"\n                                                [class.bg-green-400]=\"required.id == field.required\">\n                                            {{ required.label | translate }}\n                                        </button>\n                                    </mat-menu>\n                                </div>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n            <div class=\"flex justify-center items-center\">\n                <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                    <span class=\"block\" (click)=\"createForm()\" *ngIf=\"creationMode\">{{ \"FORMS.create\" | translate }}</span>\n                    <span class=\"block\" (click)=\"updateForm()\" *ngIf=\"!creationMode\">{{ \"FORMS.modify\" | translate }}</span>\n                </button>\n            </div>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"FORMS.available_fields\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-tab-group style=\"height: calc(100% - 64px)\" *ngIf=\"!loading\">\n            <mat-tab *ngFor=\"let availableFields of this.availableFieldsParent\" label=\"{{ availableFields['label'] | translate }}\">\n                <div id=\"{{ availableFields['id'] }}\" cdkDropList [cdkDropListData]=\"availableFields['values']\"\n                     (cdkDropListDropped)=\"dropFromAvailableFields($event)\" class=\"min-w-full\" style=\"min-height: 500px\">\n                    <div *ngFor=\"let field of availableFields['values']\">\n                        <div cdkDrag class=\"flex flex-row items-center justify-between m-5 cursor-pointer\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input class=\"cursor-pointer\" matInput type=\"text\" readonly>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <input matInput disabled>\n                                    <mat-datepicker-toggle matSuffix></mat-datepicker-toggle>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <div class=\"relative -top-3\">\n                                    <i class=\"relative fas fa-arrows-alt text-xl top-0.5 mr-2 text-green-400\"></i>\n                                    {{ field.label | translate }}\n                                </div>\n                                <mat-form-field class=\"right-0 w-5/12\">\n                                    <mat-label>{{ 'TYPES.' + field.type | translate }}</mat-label>\n                                    <mat-select></mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {API_URL} from \"../app/env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {AuthService} from \"./auth.service\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {DateAdapter} from \"@angular/material/core\";\nimport 'moment/locale/en-gb';\nimport 'moment/locale/fr';\nimport * as moment from 'moment';\nimport {HistoryService} from \"./history.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocaleService {\n    currentLang         : string = 'fra';\n    dateAdaptaterLocale : string = 'fr-FR';\n    langs               : [] = [];\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private _adapter: DateAdapter<any>,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService\n    ) {\n        this._adapter.setLocale('fr-FR');\n        moment.updateLocale('fr-FR', {\n            monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n            weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),\n            longDateFormat : {\n                LT : 'HH:mm',\n                LTS : 'HH:mm:ss',\n                L : 'dd/MM/YYYY',\n                l : 'dd/MM/YYYY',\n                LL : 'D MMMM YYYY',\n                LLL : 'D MMMM YYYY HH:mm',\n                LLLL : 'dddd D MMMM YYYY HH:mm'\n            },\n            week : {\n                dow : 1, // Monday is the first day of the week.\n            }\n        });\n        moment.updateLocale('en-GB', {\n            longDateFormat : {\n                LT: \"h:mm A\",\n                LTS: \"h:mm:ss A\",\n                L: \"MM/dd/YYYY\",\n                l: \"MM/dd/YYYY\",\n                LL: \"MMMM Do YYYY\",\n                LLL: \"MMMM Do YYYY LT\",\n                LLLL: \"dddd, MMMM Do YYYY LT\",\n                llll: \"ddd, MMM D YYYY LT\"\n            },\n            week : {\n                dow : 0, // Sunday is the first day of the week.\n            }\n        });\n        moment.locale(this.dateAdaptaterLocale);\n    }\n\n    changeLocale(data: any) {\n        this.http.get(API_URL + '/ws/i18n/changeLanguage/' + data.value, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                const label = data.source._elementRef.nativeElement.textContent;\n                this.historyService.addHistory('general', 'language_changed', this.translate.instant('HISTORY-DESC.language_changed', {lang: label}));\n                this.getCurrentLocale();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getCurrentLocale() {\n        this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.currentLang = data.lang;\n                if (data.moment_lang)\n                    this.dateAdaptaterLocale = data.moment_lang;\n                this._adapter.setLocale(this.dateAdaptaterLocale);\n                this.translate.use(this.currentLang);\n                moment.locale(this.dateAdaptaterLocale);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getLocales() {\n        this.http.get(API_URL + '/ws/i18n/getAllLang', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.langs = data.langs;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {MatPaginatorIntl} from \"@angular/material/paginator\";\nimport {Injectable} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {API_URL} from \"./env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {NotificationService} from \"../services/notifications/notifications.service\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {LocaleService} from \"../services/locale.service\";\n\n@Injectable()\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\n    constructor(\n        private http: HttpClient,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService,\n    ) {\n        super();\n        this.getAndInitTranslations();\n    }\n\n    getAndInitTranslations() {\n        if (this.localeService.currentLang === undefined) {\n            this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n                tap((data: any) => {\n                    this.translate.use(data.lang);\n                    this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                        this.itemsPerPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                        this.nextPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                        this.firstPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                        this.lastPageLabel = translated;\n                    });\n                    this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                        this.previousPageLabel = translated;\n                    });\n                    this.changes.next();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else {\n            this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n                this.itemsPerPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n                this.nextPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n                this.firstPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n                this.lastPageLabel = translated;\n            });\n            this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n                this.previousPageLabel = translated;\n            });\n            this.changes.next();\n        }\n    }\n\n    getRangeLabel = (page: number, pageSize: number, length: number) =>  {\n        if (length === 0 || pageSize === 0) { return '0 ' + this.translate.instant('PAGINATOR.of') + ` ${length}`; }\n\n        length = Math.max(length, 0);\n\n        const startIndex = page * pageSize;\n\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ?\n            Math.min(startIndex + pageSize, length):\n                startIndex + pageSize;\n\n        const nbPage = Math.ceil(length / pageSize);\n        return ` ${startIndex + 1} - ${endIndex} ` + this.translate.instant('PAGINATOR.on') + ` ${length} ` + ' | ' +\n            this.translate.instant('PAGINATOR.page') + ` ${page + 1} / ${nbPage}`;\n    }\n}","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LoginRequiredService } from \"../../services/login-required.service\";\nimport { HasPrivilegeService } from \"../../services/has-privilege.service\";\nimport { UsersListComponent } from \"./general/users/list/users-list.component\";\nimport { RolesListComponent } from \"./general/roles/list/roles-list.component\";\nimport { CreateUserComponent } from \"./general/users/create/create-user.component\";\nimport { AboutUsComponent } from './general/about-us/about-us.component';\nimport { UpdateUserComponent } from \"./general/users/update/update-user.component\";\nimport { CreateRoleComponent } from \"./general/roles/create/create-role.component\";\nimport { UpdateRoleComponent } from \"./general/roles/update/update-role.component\";\nimport { CustomFieldsComponent } from \"./general/custom-fields/custom-fields.component\";\nimport { FormBuilderComponent } from \"./verifier/form/builder/form-builder.component\";\nimport { FormListComponent } from \"./verifier/form/list/form-list.component\";\nimport { OutputsListComponent } from \"./verifier/outputs/list/outputs-list.component\";\nimport { UpdateOutputComponent } from \"./verifier/outputs/update/update-output.component\";\nimport { CreateOutputComponent } from \"./verifier/outputs/create/create-output.component\";\nimport { InputsListComponent } from \"./verifier/inputs/list/inputs-list.component\";\nimport { UpdateInputComponent } from \"./verifier/inputs/update/update-input.component\";\nimport { CreateInputComponent } from \"./verifier/inputs/create/create-input.component\";\nimport { CreatePositionsMaskComponent } from \"./verifier/positions-mask/create/create-positions-mask.component\";\nimport { UpdatePositionsMaskComponent } from \"./verifier/positions-mask/update/update-positions-mask.component\";\nimport { PositionsMaskListComponent } from \"./verifier/positions-mask/list/positions-mask-list.component\";\n\nconst routes: Routes = [\n    {\n        path: 'settings', component: SettingsComponent,\n        data: {title: marker('GLOBAL.settings'), privileges: ['settings']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n\n// --- General\n    // Users\n    {\n        path: 'settings/general/users', component: UsersListComponent,\n        data: {title: marker('SETTINGS.users_list'), privileges: ['settings', 'users_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/new', component: CreateUserComponent,\n        data: {title: marker('SETTINGS.create_user'), privileges: ['settings', 'add_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/users/update/:id', component: UpdateUserComponent,\n        data: {title: marker('USER.update'), privileges: ['settings', 'update_user']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    // END Users\n\n    // Roles\n    {\n        path: 'settings/general/roles', component: RolesListComponent,\n        data: {title: marker('SETTINGS.roles_list'), privileges: ['settings', 'roles_list']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/new', component: CreateRoleComponent,\n        data: {title: marker('SETTINGS.create_role'), privileges: ['settings', 'add_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    {\n        path: 'settings/general/roles/update/:id', component: UpdateRoleComponent,\n        data: {title: marker('ROLE.update'), privileges: ['settings', 'update_role']},\n        canActivate: [LoginRequiredService, HasPrivilegeService]\n    },\n    // END Roles\n    {\n        path: 'settings/general/about-us', component: AboutUsComponent,\n        data: {title: marker('SETTINGS.abouts_us')},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/general/custom-fields', component: CustomFieldsComponent,\n        data: {title: marker('SETTINGS.custom_fields'), privileges: ['settings', 'custom_fields']},\n        canActivate: [LoginRequiredService]\n    },\n// --- END General\n// --- Verifier\n    {\n        path: 'settings/verifier/forms', component: FormListComponent,\n        data: {title: marker('SETTINGS.list_forms'), privileges: ['settings', 'forms_list']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/new', component: FormBuilderComponent,\n        data: {title: marker('SETTINGS.form_builder'), privileges: ['settings', 'add_form']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/forms/builder/edit/:id', component: FormBuilderComponent,\n        data: {title: marker('SETTINGS.form_update'), privileges: ['settings', 'update_form']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/outputs', component: OutputsListComponent,\n        data: {title: marker('FORMS.output_settings'), privileges: ['settings', 'outputs_list']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/outputs/new', component: CreateOutputComponent,\n        data: {title: marker('SETTINGS.add_output'), privileges: ['settings', 'add_output']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/outputs/update/:id', component: UpdateOutputComponent,\n        data: {title: marker('SETTINGS.update_output'), privileges: ['settings', 'update_output']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/inputs', component: InputsListComponent,\n        data: {title: marker('FORMS.input_settings'), privileges: ['settings', 'inputs_list']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/inputs/new', component: CreateInputComponent,\n        data: {title: marker('SETTINGS.add_input'), privileges: ['settings', 'add_input']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/inputs/update/:id', component: UpdateInputComponent,\n        data: {title: marker('SETTINGS.update_input'), privileges: ['settings', 'update_input']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/positions-mask', component: PositionsMaskListComponent,\n        data: {title: marker('SETTINGS.list_positions_mask'), privileges: ['settings', 'positions_mask_list']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/create', component: CreatePositionsMaskComponent,\n        data: {title: marker('SETTINGS.positions_mask_builder'), privileges: ['settings', 'add_positions_mask']},\n        canActivate: [LoginRequiredService]\n    },\n    {\n        path: 'settings/verifier/positions-mask/update/:id', component: UpdatePositionsMaskComponent,\n        data: {title: marker('SETTINGS.positions_mask_update'), privileges: ['settings', 'update_positions_mask']},\n        canActivate: [LoginRequiredService]\n    },\n// -- END Verifier\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class SettingsRoutingModule {}","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {API_URL} from \"../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\nimport {HistoryService} from \"../../services/history.service\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    headers     : HttpHeaders = this.authService.headers;\n    userId      : any;\n    profile     : any;\n    roles       : any[] = [];\n    profileForm : any[] = [\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'old_password',\n            label: this.translate.instant('USER.old_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'new_password',\n            label: this.translate.instant('USER.new_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    public loading: boolean = true;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private historyService: HistoryService,\n        private privilegeService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit() {\n        this.userId = this.route.snapshot.params['id'];\n\n        if (this.userId !== this.userService.user.id) {\n            if (!this.privilegeService.hasPrivilege('update_user')) {\n                this.notify.error('ERROR.unauthorized');\n                this.router.navigateByUrl('/home').then();\n            }\n        }\n\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    }else{\n                        if((this.userService.getUser().privileges === '*')) {\n                            this.roles.push(element);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.profile = data;\n                for (const field in this.profile) {\n                    if (this.profile.hasOwnProperty(field)) {\n                        this.profileForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.value = this.profile[field];\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false ),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.profileForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if(this.isValidForm()) {\n            const user : any = {};\n            this.profileForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(\n                API_URL + '/ws/users/update/' + this.userId,{'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.historyService.addHistory('general', 'profile_updated', this.translate.instant('HISTORY-DESC.profile-updated', {user: user['lastname'] + ' ' + user['firstname']}));\n                    this.notify.success(this.translate.instant('USER.profile_updated'));\n                    if (this.userId === this.userService.user.id) {\n                        this.userService.setUser(data.user);\n                        this.authService.setTokenAuth(btoa(JSON.stringify(this.userService.getUser())), data.days_before_exp);\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.profileForm.forEach(element => {\n            if(element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<div *ngIf=\"!loading\" class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            <span *ngIf=\"this.userId == this.userService.user.id\">{{ 'USER.modify_my_profile' | translate }}</span>\n            <span *ngIf=\"this.userId != this.userService.user.id\">{{ 'USER.modify_profile_of' | translate }} {{this.profile['username']}}</span>\n        </mat-card-title>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\">\n                <ng-container *ngFor=\"let field of profileForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [disabled]=\"this.userService.getUserFromLocal()['privileges'] != '*'\" [(value)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.modify' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {MAT_FORM_FIELD_DEFAULT_OPTIONS} from \"@angular/material/form-field\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './form-list.component.html',\n    styleUrls: ['./form-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\nexport class FormListComponent implements OnInit {\n    loading: boolean            = true;\n    columnsToDisplay: string[]  = ['id', 'label', 'default_form', 'enabled', 'actions'];\n    pageSize : number           = 10;\n    pageIndex: number           = 0;\n    total: number               = 0;\n    offset: number              = 0;\n    forms : any                 = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('settings/verifier/forms') || lastUrl === '/') {\n            if (this.localeStorageService.get('formsPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('formsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        }else\n            this.localeStorageService.remove('formsPageIndex');\n        this.loadForms();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('formsPageIndex', event.pageIndex);\n        this.loadForms();\n    }\n\n    loadForms(): void {\n        this.loading = true;\n        this.http.get(API_URL + '/ws/forms/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.forms[0]) this.total = data.forms[0].total;\n                this.forms = data.forms;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deleteConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_delete', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteForm(formId);\n                this.historyService.addHistory('verifier', 'delete_form', this.translate.instant('HISTORY-DESC.delete-form', {form: form}));\n            }\n        });\n    }\n\n    duplicateConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_duplicate', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.duplicate'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.duplicateForm(formId);\n            }\n        });\n    }\n\n    disableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_disable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.disableForm(formId);\n            }\n        });\n    }\n\n    enableConfirmDialog(formId: number, form: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('FORMS.confirm_enable', {\"form\": form}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.enableForm(formId);\n            }\n        });\n    }\n\n    deleteForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.delete(API_URL + '/ws/forms/delete/' + formId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                    this.notify.success(this.translate.instant('FORMS.form_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    duplicateForm(formId: number) {\n        if (formId !== undefined) {\n            // this.http.delete(API_URL + '/ws/forms/duplicate/' + formId, {headers: this.authService.headers}).pipe(\n            //     tap(() => {\n            //         this.loadForms()\n            //     }),\n            //     catchError((err: any) => {\n            //         console.debug(err);\n            //         this.notify.handleErrors(err);\n            //         return of(false);\n            //     })\n            // ).subscribe();\n        }\n    }\n\n    disableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(API_URL + '/ws/forms/disable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    enableForm(formId: number) {\n        if (formId !== undefined) {\n            this.http.put(API_URL + '/ws/forms/enable/' + formId, null, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadForms();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.forms.slice();\n        if(!sort.active || sort.direction === '') {\n            this.forms = data;\n            return;\n        }\n\n        this.forms = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'default': return this.compare(a.default, b.default, isAsc);\n                case 'enabled': return this.compare(a.enabled, b.enabled, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort matSortDisableClear [dataSource]=\"forms\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"default_form\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'FORMS.default' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.default_form \"> <span class=\"text-green-400 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                    <span *ngIf=\"!element.default_form\"> <span class=\"text-red-600 text-6xl relative top-2 left-10 leading-4\">&bull;</span></span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"enabled\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.status' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <span *ngIf=\"element.enabled \"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.active' | translate }}</span>\n                    <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'HEADER.inactive' | translate }}</span>\n                </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef></mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button *ngIf=\"element.enabled\"\n                            (click)=\"$event.stopPropagation(); disableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.disable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-pause fa-lg\"></i>\n                    </button>\n                    <button *ngIf=\"!element.enabled\"\n                            (click)=\"$event.stopPropagation(); enableConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.enable' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-play fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); duplicateConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.duplicate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-clone fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation(); deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'FORMS.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/forms/builder/edit/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {MomentDateAdapter,MAT_MOMENT_DATE_ADAPTER_OPTIONS,MAT_MOMENT_DATE_FORMATS} from '@angular/material-moment-adapter';\nimport { DateAdapter } from '@angular/material/core';\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport {MAT_DATE_FORMATS, MAT_DATE_LOCALE, MatNativeDateModule} from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatTreeModule,\n        MatRippleModule,\n    ],\n    exports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatRippleModule,\n        MatTreeModule,\n    ],\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]},\n        {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n    ],\n})\nexport class AppMaterialModule {}\n","import {Injectable} from '@angular/core';\nimport {API_URL} from \"../app/env\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {AuthService} from \"./auth.service\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService,\n    ) {}\n\n    readConfig() {\n        return new Promise((resolve) => {\n            this.http.get(API_URL + '/ws/config/readConfig', {headers: this.authService.headers}).pipe(\n                tap((data: any) => {\n                    this.setConfig(data.config);\n                    resolve(true);\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    resolve(false);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        });\n    }\n\n    setConfig(config: any) {\n        this.authService.setTokenCustom('OpenCaptureForInvoicesConfig', btoa(JSON.stringify(config)));\n    }\n\n    getConfig() {\n        return JSON.parse(atob(this.authService.getTokenCustom('OpenCaptureForInvoicesConfig') as string));\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {FormControl} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, map, startWith, tap} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'create-positions-mask',\n    templateUrl: './create-positions-mask.component.html',\n    styleUrls: ['./create-positions-mask.component.scss']\n})\nexport class CreatePositionsMaskComponent implements OnInit {\n    loading             : boolean   = true;\n    suppliers           : any       = [];\n    filteredOptions     : Observable<any> | undefined;\n    form                : any       = {\n        'label': {\n            'control': new FormControl(),\n        },\n        'supplier_id': {\n            'control': new FormControl(),\n        }\n    };\n    toHighlight         : string = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/accounts/suppliers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = this.sortArrayAlphab(data.suppliers);\n                this.filteredOptions = this.form['supplier_id'].control.valueChanges\n                    .pipe(\n                        startWith(''),\n                        map(option => option ? this._filter(option) : this.suppliers.slice())\n                    );\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        for (const key in form) {\n            if ((form[key].control.status !== 'DISABLED' && form[key].control.status !== 'VALID') || form[key].control.value == null) {\n                state = false;\n            }\n            form[key].control.markAsTouched();\n        }\n        return state;\n    }\n\n    createPositionsMask() {\n        if (this.isValidForm(this.form)) {\n            const label = this.form['label'].control.value;\n            const supplierName = this.form['supplier_id'].control.value;\n            let supplierId = '';\n            this.suppliers.forEach((element: any) => {\n                if (element.name === supplierName) {\n                    supplierId = element.id;\n                }\n            });\n            this.http.post(API_URL + '/ws/positions_masks/add',\n                {'args': {\n                        'label': label,\n                        'supplier_id': supplierId,\n                    }}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('POSITIONS-MASKS.created'));\n                    this.historyService.addHistory('verifier', 'create_positions_masks', this.translate.instant('HISTORY-DESC.create-positions-masks', {positions_masks: label}));\n                    this.router.navigate(['/settings/verifier/positions-mask/update/' + data.id]).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/verifier/positions-mask');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error : any;\n        form.forEach((element: any) => {\n            if (element.id === field) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.name.toUpperCase(),\n                y = b.name.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    private _filter(value: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return this.suppliers.filter((option: any) => option.name.toLowerCase().indexOf(filterValue) !== -1);\n        }else {\n            return this.suppliers;\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div *ngIf=\"!loading\" class=\"overflow-auto\">\n            <div class=\"grid grid-cols-2 gap-8 mt-6 ml-6 mr-6\">\n                <mat-form-field>\n                    <mat-label>{{ \"POSITIONS-MASKS.label\" | translate }}</mat-label>\n                    <input matInput [formControl]=\"this.form['label'].control\" required>\n                </mat-form-field>\n                <mat-form-field class=\"right-0 w-full form-viewer\">\n                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                        {{ \"POSITIONS-MASKS.supplier_name_associated\" | translate }}\n                    </mat-label>\n                    <input matInput type=\"text\" [required]=\"true\"\n                           [formControl]=\"this.form['supplier_id'].control\" [matAutocomplete]=\"auto\">\n                    <mat-autocomplete #auto=\"matAutocomplete\">\n                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                <span class=\"block\" (click)=\"createPositionsMask()\">{{ \"POSITIONS-MASKS.create\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-customer.component.html',\n    styleUrls: ['./create-customer.component.scss']\n})\nexport class CreateCustomerComponent implements OnInit {\n    headers     : HttpHeaders   = this.authService.headers;\n    loading     : boolean       = true;\n    customer    : any;\n    customerForm: any[]         = [\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.customer_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'company_number',\n            label: marker('ACCOUNTS.company_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n    ];\n    addressForm : any []        = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) { }\n\n    ngOnInit(): void {\n        this.loading = false;\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.customerForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const customer: any = {};\n            const address: any = {};\n            this.customerForm.forEach(element => {\n                customer[element.id] = element.control.value;\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.post(API_URL + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    customer['address_id'] = data.id;\n                    this.http.post(API_URL + '/ws/accounts/customers/create', {'args': customer}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('accounts', 'create_customer', this.translate.instant('HISTORY-DESC.create-customer', {customer: customer['name']}));\n                            this.notify.success(this.translate.instant('ACCOUNTS.customer_created'));\n                            this.router.navigate(['/accounts/customers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/accounts/customers/list');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/customers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageCustomer(field: any) {\n        let error: any;\n        this.customerForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of customerForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageCustomer(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id == 'address1'\" class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.update_customer' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import {Injectable} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LocalStorageService} from \"./local-storage.service\";\nimport {LastUrlService} from \"./last-url.service\";\nimport {Title} from \"@angular/platform-browser\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SettingsService {\n    isMenuOpen: boolean = true;\n    selectedSetting: string = \"users\";\n    selectedParentSetting: string = \"general\";\n    settingListOpenState: boolean = true;\n    settingsParent: any[] = [\n        {\n            \"id\": \"general\",\n            \"label\": this.translate.instant(\"SETTINGS.general\"),\n        },\n        {\n            \"id\": \"verifier\",\n            \"label\": this.translate.instant(\"SETTINGS.verifier\"),\n        },\n        {\n            \"id\": \"splitter\",\n            \"label\": this.translate.instant(\"SETTINGS.splitter\"),\n        },\n    ];\n    settings: any = {\n        \"general\": [\n            {\n                \"id\"        : \"users\",\n                \"label\"     : this.translate.instant(\"SETTINGS.users_list\"),\n                \"icon\"      : \"fas fa-user\",\n                \"route\"     : '/settings/general/users',\n                \"privilege\" : \"users_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : 'add_user',\n                        \"label\"     : this.translate.instant(\"USER.add\"),\n                        \"route\"     : \"/settings/general/users/new\",\n                        \"privilege\" : \"add_user\",\n                        \"icon\"      : \"fas fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_user',\n                        \"label\"             : this.translate.instant(\"USER.update\"),\n                        \"route\"             : \"/settings/general/users/update/\",\n                        \"icon\"              : \"fas fa-edit\",\n                        \"privilege\"         : \"update_user\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"roles\",\n                \"label\"     : this.translate.instant(\"SETTINGS.roles_list\"),\n                \"icon\"      : \"fas fa-users\",\n                \"route\"     : \"/settings/general/roles\",\n                \"privilege\" : \"roles_list\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_role\",\n                        \"label\"     : this.translate.instant(\"ROLE.add\"),\n                        \"route\"     : \"/settings/general/roles/new\",\n                        \"privilege\" : \"add_role\",\n                        \"icon\"      : \"fas fa-plus\"\n                    },\n                    {\n                        \"id\"                : 'update_role',\n                        \"label\"             : this.translate.instant(\"ROLE.update\"),\n                        \"route\"             : \"/settings/general/roles/update/\",\n                        \"icon\"              : \"fas fa-edit\",\n                        \"privilege\"         : \"update_role\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"custom-fields\",\n                \"label\"     : this.translate.instant(\"SETTINGS.custom_fields\"),\n                \"route\"     : \"/settings/general/custom-fields\",\n                \"icon\"      : \"fas fa-code\",\n                \"privilege\" : \"custom_fields\",\n            },\n            {\n                \"id\"        : \"about-us\",\n                \"label\"     : this.translate.instant(\"SETTINGS.abouts_us\"),\n                \"icon\"      : \"fas fa-address-card\",\n                \"route\"     : \"/settings/general/about-us\",\n                \"privilege\" : \"*\"\n            }\n        ],\n        \"verifier\": [\n            {\n                \"id\"        : \"form_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_forms\"),\n                \"icon\"      : \"fab fa-wpforms\",\n                \"route\"     : \"/settings/verifier/forms\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.form_builder\"),\n                        \"route\"     : \"/settings/verifier/forms/builder/new\",\n                        \"privilege\" : \"add_form\",\n                        \"icon\"      : \"fas fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.form_update\"),\n                        \"route\"             : \"/settings/verifier/forms/builder/edit/\",\n                        \"privilege\"         : \"update_form\",\n                        \"icon\"              : \"fas fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"input_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.input_settings\"),\n                \"icon\"      : \"fas fa-sign-in-alt\",\n                \"route\"     : \"/settings/verifier/inputs\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_input\"),\n                        \"route\"     : \"/settings/verifier/inputs/new\",\n                        \"privilege\" : \"add_input\",\n                        \"icon\"      : \"fas fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_input\"),\n                        \"route\"             : \"/settings/verifier/inputs/update/\",\n                        \"privilege\"         : \"update_input\",\n                        \"icon\"              : \"fas fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"output_settings\",\n                \"label\"     : this.translate.instant(\"FORMS.output_settings\"),\n                \"icon\"      : \"fas fa-sign-out-alt\",\n                \"route\"     : \"/settings/verifier/outputs\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_form\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.add_output\"),\n                        \"route\"     : \"/settings/verifier/outputs/new\",\n                        \"privilege\" : \"add_output\",\n                        \"icon\"      : \"fas fa-plus\"\n                    },\n                    {\n                        \"id\"                : \"update_form\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.update_output\"),\n                        \"route\"             : \"/settings/verifier/outputs/update/\",\n                        \"privilege\"         : \"update_output\",\n                        \"icon\"              : \"fas fa-edit\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            },\n            {\n                \"id\"        : \"position_mask_builder\",\n                \"label\"     : this.translate.instant(\"SETTINGS.list_positions_mask\"),\n                \"icon\"      : \"fas fa-map-marker-alt\",\n                \"route\"     : \"/settings/verifier/positions-mask\",\n                \"actions\"   : [\n                    {\n                        \"id\"        : \"add_position_mask\",\n                        \"label\"     : this.translate.instant(\"SETTINGS.positions_mask_builder\"),\n                        \"route\"     : \"/settings/verifier/positions-mask/create\",\n                        \"privilege\" : \"add_position_mask\",\n                        \"icon\"      : \"fas fa-tools\"\n                    },\n                    {\n                        \"id\"                : \"update_position_mask\",\n                        \"label\"             : this.translate.instant(\"SETTINGS.positions_mask_update\"),\n                        \"route\"             : \"/settings/verifier/positions-mask/update/\",\n                        \"privilege\"         : \"update_position_mask\",\n                        \"icon\"              : \"fas fa-hammer\",\n                        \"showOnlyIfActive\"  : true\n                    }\n                ]\n            }\n        ],\n        \"splitter\": [\n            {\n                \"id\": \"separator\",\n                \"label\": this.translate.instant(\"SETTINGS.document_separator\"),\n                \"icon\": \"fas fa-qrcode\",\n            },\n            {\n                \"id\": \"document-type\",\n                \"label\": this.translate.instant(\"SETTINGS.document_type\"),\n                \"icon\": \"fas fa-file\",\n            },\n            {\n                \"id\": \"connector\",\n                \"label\": this.translate.instant(\"SETTINGS.connector_EDM\"),\n                \"icon\": \"fas fa-link\",\n            }\n        ]\n    };\n    constructor(\n        private titleService: Title,\n        private translate: TranslateService,\n        private routerExtService: LastUrlService,\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    init() {\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('roles') || lastUrl === '/' || lastUrl.includes('users')) {\n            const selectedSettings = this.localeStorageService.get('selectedSettings');\n            const selectedParentSettings = this.localeStorageService.get('selectedParentSettings');\n            if (selectedSettings)\n                this.setSelectedSettings(selectedSettings);\n\n            if (selectedParentSettings)\n                this.setSelectedParentSettings(selectedParentSettings);\n        }else{\n            this.localeStorageService.remove('selectedSettings');\n            this.localeStorageService.remove('selectedParentSettings');\n            this.setSelectedSettings(\"users\");\n            this.setSelectedParentSettings('general');\n        }\n    }\n\n    getTitle() {\n        let title = this.titleService.getTitle();\n        title = title.split(' - ')[0];\n        return title;\n    }\n\n    changeSetting(settingId: string, settingParentId: string) {\n        this.setSelectedSettings(settingId);\n        this.setSelectedParentSettings(settingParentId);\n        this.localeStorageService.save('selectedSettings', settingId);\n        this.localeStorageService.save('selectedParentSettings',settingParentId);\n    }\n\n    getIsMenuOpen() {\n        return this.isMenuOpen;\n    }\n\n    getSelectedSetting() {\n        return this.selectedSetting;\n    }\n\n    getSelectedParentSetting() {\n        return this.selectedParentSetting;\n    }\n\n    getSettingListOpenState() {\n        return this.settingListOpenState;\n    }\n\n    getSettingsParent() {\n        return this.settingsParent;\n    }\n\n    getSettings() {\n        return this.settings;\n    }\n\n    getSettingsAction(parentId: any, settingId: any) {\n        let actions: any;\n        this.settings[parentId].forEach((element: any) => {\n            if (element['id'] === settingId && element['actions']) {\n                actions = element['actions'];\n            }\n        });\n        return actions;\n    }\n\n    setSelectedSettings(value: string) {\n        this.selectedSetting = value;\n    }\n\n    setSelectedParentSettings(value: string) {\n        this.selectedParentSetting = value;\n    }\n\n    setSettingListOpenState(value: boolean) {\n        this.settingListOpenState = value;\n    }\n\n    toggleMenu() {\n        this.isMenuOpen = !this.isMenuOpen;\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {HistoryService} from \"../../services/history.service\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.historyService.addHistory('general', 'logout', this.translate.instant('HISTORY-DESC.logout'));\n        this.authService.logout();\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create',\n    templateUrl: './create-supplier.component.html',\n    styleUrls: ['./create-supplier.component.scss']\n})\nexport class CreateSupplierComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    supplier: any;\n    supplierForm: any[] = [\n        {\n            id: 'get_only_raw_footer',\n            label: marker('ACCOUNTS.get_only_raw_footer'),\n            type: 'mat-slide-toggle',\n            control: new FormControl(true),\n            required: true,\n        },\n        {\n            id: 'name',\n            label: marker('ACCOUNTS.supplier_name'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'vat_number',\n            label: marker('ACCOUNTS.vat_number'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'siret',\n            label: marker('ACCOUNTS.siret'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'siren',\n            label: marker('ACCOUNTS.siren'),\n            type: 'text',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'form_id',\n            label: marker('ACCOUNTS.form'),\n            type: 'select',\n            control: new FormControl(),\n            required: false,\n            values: []\n        }\n    ];\n    addressForm: any [] = [\n        {\n            id: 'address1',\n            label: marker('ADDRESSES.address_1'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'address2',\n            label: marker('ADDRESSES.address_2'),\n            type: 'text',\n            control: new FormControl(),\n            required: false,\n        },\n        {\n            id: 'postal_code',\n            label: marker('ADDRESSES.postal_code'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'city',\n            label: marker('ADDRESSES.city'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'country',\n            label: marker('ADDRESSES.country'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/forms/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const forms = data.forms;\n                for (const cpt in forms) {\n                    if (forms.hasOwnProperty(cpt)) {\n                        this.supplierForm.forEach(element => {\n                            if (element.id === 'form_id') {\n                                element.values = forms;\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.supplierForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        this.addressForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const supplier: any = {};\n            const address: any = {};\n            this.supplierForm.forEach(element => {\n                supplier[element.id] = element.control.value;\n                if (element.id === 'get_only_raw_footer') {\n                    supplier[element.id] = !element.control.value;\n                }\n            });\n            this.addressForm.forEach(element => {\n                address[element.id] = element.control.value;\n            });\n\n            this.http.post(API_URL + '/ws/accounts/addresses/create', {'args': address}, {headers: this.authService.headers},\n            ).pipe(\n                tap((data: any) => {\n                    supplier['address_id'] = data.id;\n                    this.http.post(API_URL + '/ws/accounts/suppliers/create', {'args': supplier}, {headers: this.authService.headers},\n                    ).pipe(\n                        tap(() => {\n                            this.historyService.addHistory('accounts', 'create_supplier', this.translate.instant('HISTORY-DESC.create-supplier', {supplier: supplier['name']}));\n                            this.notify.success(this.translate.instant('ACCOUNTS.supplier_created'));\n                            this.router.navigate(['/accounts/suppliers/list']).then();\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err, '/accounts/suppliers/list');\n                            return of(false);\n                        })\n                    ).subscribe();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/accounts/suppliers/list');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessageSupplier(field: any) {\n        let error: any;\n        this.supplierForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    getErrorMessageAddress(field: any) {\n        let error: any;\n        this.addressForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <div class=\"flex justify-center m-10\">\n            <ng-container *ngFor=\"let field of supplierForm\">\n                <mat-slide-toggle *ngIf=\"field.type == 'mat-slide-toggle'\" [formControl]=\"field.control\">\n                    {{ field.label | translate }}\n                </mat-slide-toggle>\n            </ng-container>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-6 gap-2 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of supplierForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageSupplier(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <ng-container *ngFor=\"let field of addressForm\">\n                    <mat-form-field [class.col-span-2]=\"field.id == 'address1'\" class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessageAddress(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-6\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'ACCOUNTS.create_supplier' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {FileValidators} from \"ngx-file-drag-drop\";\nimport {API_URL} from \"../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {LocalStorageService} from \"../../services/local-storage.service\";\n\n\n@Component({\n    selector: 'app-upload',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class UploadComponent implements OnInit {\n    headers             : HttpHeaders   = this.authService.headers;\n    selectedInput       : any           = '';\n    inputs              : any[]         = [];\n    loading             : boolean       = true;\n    sending             : boolean       = false;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        public localeStorageService: LocalStorageService\n    ) {\n    }\n\n    fileControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    ngOnInit(): void {\n        this.http.get(API_URL + '/ws/inputs/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.inputs = data.inputs;\n                if (this.inputs.length === 1) {\n                    this.selectedInput = data.inputs[0].input_id;\n                }\n             }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length !== 0) {\n            for (let i = 0; i < data.length; i++) {\n                const fileName = data[i].name;\n                const fileExtension = fileName.split('.').pop();\n                if (fileExtension.toLowerCase() !== 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    setInput(inputId: any) {\n        this.selectedInput = inputId;\n    }\n\n    uploadInvoice(): void {\n        this.sending = true;\n        const formData: FormData = new FormData();\n\n        if (this.fileControl.value.length === 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value.length; i++) {\n            if (this.fileControl.status === 'VALID') {\n                formData.append(this.fileControl.value[i].name, this.fileControl.value[i]);\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n        const splitterOrVerifier = this.localeStorageService.get('splitter_or_verifier');\n        if (splitterOrVerifier !== undefined || splitterOrVerifier !== '') {\n            this.http.post(\n                API_URL + '/ws/' + splitterOrVerifier + '/upload?inputId=' + this.selectedInput,\n                formData,\n                {\n                    headers: this.authService.headers\n                },\n            ).pipe(\n                tap(() => {\n                    this.fileControl.setValue('');\n                    this.notify.success(this.translate.instant('UPLOAD.upload_success'));\n                    this.sending = false;\n                }),\n                catchError((err: any) => {\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else{\n            this.notify.handleErrors(this.translate.instant('ERROR.unknow_error'));\n            return;\n        }\n    }\n}","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\">{{ \"ACCOUNTS.choose_input_upload\" | translate }}</h3>\n        <mat-divider></mat-divider>\n        <mat-list>\n            <mat-list-item *ngFor=\"let input of inputs\" class=\"hover:bg-green-400 cursor-pointer m-2 w-auto\"\n                           [class.bg-green-400]=\"this.selectedInput == input.input_id\" (click)=\"setInput(input.input_id)\">\n                {{ input.input_label }}\n            </mat-list-item>\n        </mat-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\"\n                class=\"absolute left-2 top-2\" style=\"z-index: 999\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fas fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <ngx-file-drag-drop\n                [formControl]=\"fileControl\"\n                [activeBorderColor]=\"'#97BF3D'\"\n                [multiple]=\"true\"\n                [accept]=\"'pdf'\"\n                [displayFileSize]=\"true\"\n                [emptyPlaceholder]=\"'UPLOAD.placeholder' | translate\"\n                [class]=\"'max-w-3xl h-56 mt-24'\"\n                (valueChanged)=\"checkFile($event)\">\n        </ngx-file-drag-drop>\n        <div class=\"flex justify-center content-center\">\n            <button mat-flat-button\n                    [disabled]=\"this.sending == true || this.selectedInput == '' || this.fileControl.value.length == 0\" (click)=\"uploadInvoice()\"\n                    [class.hover:bg-green-400]=\"this.sending == false && this.selectedInput && this.fileControl.value.length != 0\"\n                    [class.hover:text-white]=\"this.sending == false && this.selectedInput && this.fileControl.value.length != 0\"\n                    class=\"mt-5 border-solid border-green-400 border px-3 py-2 text-sm font-medium transition duration-300\">\n                {{ 'UPLOAD.upload_invoice' | translate }}\n            </button>\n        </div>\n        <span *ngIf=\"this.selectedInput == ''\" class=\"flex justify-center mt-4 text-red-500\">\n            {{ 'UPLOAD.please_select_input' | translate }}\n        </span>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, map, startWith, tap} from \"rxjs/operators\";\nimport { PipeTransform, Pipe } from '@angular/core';\nimport {of} from \"rxjs\";\nimport {marker} from \"@biesbjerg/ngx-translate-extract-marker\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Pipe({ name: 'highlight' })\nexport class HighlightPipe implements PipeTransform {\n    transform(text: string, search:any): string {\n        const pattern = search\n            .replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n            .split(' ')\n            .filter((t:any) => t.length > 0)\n            .join('|');\n        const regex = new RegExp(pattern, 'gi');\n        return search ? text.replace(regex, match => `<b>${match}</b>`) : text;\n    }\n}\n\n@Component({\n    selector: 'update-output',\n    templateUrl: './update-output.component.html',\n    styleUrls: ['./update-output.component.scss']\n})\nexport class UpdateOutputComponent implements OnInit {\n    headers             : HttpHeaders   = this.authService.headers;\n    loading             : boolean       = true;\n    connection          : boolean       = false;\n    outputId            : any;\n    output              : any;\n    outputsTypes        : any[]         = [];\n    outputsTypesForm    : any[]         = [];\n    selectedOutputType  : any;\n    originalOutputType  : any;\n    toHighlight         : string        = '';\n    outputForm          : any[]         = [\n        {\n            id: 'output_type_id',\n            label: this.translate.instant('HEADER.output_type'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n            values: this.outputsTypes\n        },\n        {\n            id: 'output_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        }\n    ];\n    availableFields     : any           = [\n        {\n            \"id\": 'HEADER.id',\n            'label': 'HEADER.label'\n        },\n        {\n            \"id\": 'name',\n            'label': 'ACCOUNTS.supplier_name'\n        },\n        {\n            \"id\": 'vat_number',\n            'label': 'ACCOUNTS.vat_number'\n        },\n        {\n            \"id\": 'siret',\n            'label': 'ACCOUNTS.siret'\n        },\n        {\n            \"id\": 'siren',\n            'label': 'ACCOUNTS.siren'\n        },\n        {\n            \"id\": 'invoice_number',\n            'label': 'FACTURATION.invoice_number'\n        },\n        {\n            \"id\": 'invoice_date_year',\n            'label': marker('FACTURATION.invoice_date_year')\n        },\n        {\n            \"id\": 'invoice_date_month',\n            'label': marker('FACTURATION.invoice_date_month')\n        },\n        {\n            \"id\": 'invoice_date_day',\n            'label': marker('FACTURATION.invoice_date_day')\n        },\n        {\n            \"id\": 'register_date_year',\n            'label': marker('FACTURATION.register_date_year')\n        },\n        {\n            \"id\": 'register_date_month',\n            'label': marker('FACTURATION.register_date_month')\n        },\n        {\n            \"id\": 'register_date_day',\n            'label': marker('FACTURATION.register_date_day')\n        },\n        {\n            \"id\": 'order_number',\n            'label': 'FACTURATION.order_number'\n        },\n        {\n            \"id\": 'delivery_number',\n            'label': 'FACTURATION.delivery_number'\n        },\n    ];\n    testConnectionMapping : any         = {\n        'export_maarch' : \"testMaarchConnection()\"\n    };\n\n    /**\n     * Pour ajouter une nouvelle chaine sortante (e.g : Alfresco)\n     * Rajouter une nouvelle ligne dans le tableau testConnectionMapping() contenant l'id de la nouvelle chaine et le nom de la fonction permettant de verifier la connection\n     * Dans le JSON présent dans la table output_types, en se basant sur celui existant (export_maarch), créer vos champs par défaut\n     * Attention à bien garder les clé \"auth\" et \"parameters\" présentes\n     * Si un champs \"parameters\" à besoin de récupérer des données depuis un WS de la solution cible (e.g récupération des utilisateurs Maarch)\n     * Rajouter une ligne dans le JSON 'webservice' avec un nom de fonction (sans mettre les parenthèses)\n     * Créer cette fonction et faites le process permettant de récupérer les données\n     * Les données doivent être formatés comme suit : {'id': XX, 'value': XX} et être mise dans la clé \"values\" du champ\n     * Regarder la fonction getUsersMaarch() pour voir le fonctionnement\n     * Du côté des webservices permettant l'execution des chaînes sortantes, il faut créer un WS dans le fichier rest/verifier.py\n     * La route doit être : verifier/invoices/<int:invoice_id>/output_type_id (e.g : verifier/invoices/<int:invoice_id>/export_maarch)\n    **/\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.outputId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/outputs/getById/' + this.outputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                /**\n                 * Set the output type and output label\n                 **/\n                this.output = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.outputForm.forEach(element => {\n                            if (element.id === field) {\n                                if (element.id === 'output_type_id') this.selectedOutputType = this.originalOutputType = data[field];\n                                element.control.setValue(data[field]);\n                            }\n                        });\n                    }\n                }\n                this.http.get(API_URL + '/ws/outputs/getOutputsTypes', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        this.outputsTypes = data.outputs_types;\n                        /**\n                         * Create the form with auth and parameters data\n                         **/\n                        for (const _output of this.outputsTypes) {\n                            this.outputsTypesForm[_output.output_type_id] = {\n                                'auth' : [],\n                                'parameters' : [],\n                            };\n                            for (const category in this.outputsTypesForm[_output.output_type_id]) {\n                                if (_output.data.options[category]) {\n                                    for (const option of _output.data.options[category]) {\n                                        this.outputsTypesForm[_output.output_type_id][category].push({\n                                            id: option.id,\n                                            label: option.label,\n                                            type: option.type,\n                                            placeholder: option.placeholder,\n                                            control: new FormControl(),\n                                            required: option.required,\n                                            isJson: option.isJson,\n                                            hint: option.hint,\n                                            webservice: option.webservice,\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                        /**\n                         * Fill the form (created with data in output_types) table with the value stored (in outputs table)\n                         **/\n                        for (const category in this.outputsTypesForm[this.originalOutputType]) {\n                            this.outputsTypesForm[this.originalOutputType][category].forEach((element: any) => {\n                                this.output.data.options[category].forEach((outputElement: any) => {\n                                    if (element.id === outputElement.id) {\n                                        if (outputElement.value) {\n                                            if (outputElement.webservice) element.values = [outputElement.value];\n                                            element.control.setValue(outputElement.value);\n                                        }\n                                    }\n                                });\n                            });\n                            this.testConnection();\n                        }\n                    }),\n                    finalize(() => {this.loading = false;}),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        this.router.navigate(['/settings/verifier/outputs']).then();\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    displayFn(option: any) {\n        return option ? option.value : undefined;\n    }\n\n    getErrorMessage(field: any, form: any) {\n        let error: any;\n        form.forEach((element: any) => {\n            if (element.id === field && element.control.invalid) {\n                if (element.required) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n\n                if (element.control.errors.json_error) {\n                    error = this.translate.instant('ERROR.json_pattern');\n                }\n            }\n        });\n        return error;\n    }\n\n    changeOutputType(event: any) {\n        this.selectedOutputType = event.value;\n    }\n\n    isValidForm(form: any) {\n        let state = true;\n        form.forEach((element: any) => {\n            if ((element.control.status !== 'DISABLED' && element.control.status !== 'VALID') || element.control.value == null) {\n                state = false;\n            }\n        });\n        return state;\n    }\n\n    getValueFromForm(form: any, fieldId: any) {\n        let value = '';\n        form.forEach((element: any) => {\n            if (fieldId === element.id) {\n                value = element.control.value;\n            }\n        });\n        return value;\n    }\n\n    retrieveDataFromWS(fieldId: any) {\n        for (const cpt in this.outputsTypesForm[this.selectedOutputType]['parameters']) {\n            const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n            if (element.id === fieldId) {\n                if (!element.values || element.values.length === 1) {\n                    eval(\"this.\" + element.webservice + '(' + cpt + ')');\n                }\n            }\n        }\n    }\n\n    private _filter(value: any, array: any) {\n        if (typeof value === 'string') {\n            this.toHighlight = value;\n            const filterValue = value.toLowerCase();\n            return array.filter((option: any) => option.value.toLowerCase().indexOf(filterValue) !== -1);\n        }else {\n            return array;\n        }\n    }\n\n    /**** Maarch Webservices call ****/\n    testMaarchConnection() {\n        const args = this.getMaarchConnectionInfo();\n        this.http.post(API_URL + '/ws/maarch/testConnection', {'args': args}, {headers: this.authService.headers},\n        ).pipe(\n            tap((data: any) => {\n                const status = data.status;\n                if (status === true) {\n                    this.notify.success(this.translate.instant('OUTPUT.maarch_connection_ok'));\n                    this.connection = true;\n                }\n                else{\n                    this.notify.error(this.translate.instant('OUTPUT.maarch_connection_ko') + ' : ' + status[1]);\n                    this.connection = false;\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getMaarchConnectionInfo() {\n        return {\n            'host': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'host'),\n            'login': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'login'),\n            'password': this.getValueFromForm(this.outputsTypesForm[this.selectedOutputType].auth, 'password'),\n        };\n    }\n\n    getUsersFromMaarch(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMaarchConnectionInfo();\n            this.http.post(API_URL + '/ws/maarch/getUsers', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.users) {\n                    const data = _return.users;\n                    const users = [];\n                    for (const cpt in data) {\n                        users.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].firstname + ' ' +  data[cpt].lastname,\n                            'extra': data[cpt].user_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, users);\n                }\n            });\n        }\n    }\n\n    getEntitiesFromMaarch(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMaarchConnectionInfo();\n            this.http.post(API_URL + '/ws/maarch/getEntities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.entities) {\n                    const data = _return.entities;\n                    const entities = [];\n                    for (const cpt in data) {\n                        entities.push({\n                            'id': data[cpt].serialId,\n                            'value': data[cpt].entity_label,\n                            'extra': data[cpt].entity_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, entities);\n                }\n            });\n        }\n    }\n\n    getDoctypesFromMaarch(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMaarchConnectionInfo();\n            this.http.post(API_URL + '/ws/maarch/getDoctypes', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.doctypes) {\n                    const data = _return.doctypes;\n                    const doctypes = [];\n                    for (const cpt in data) {\n                        doctypes.push({\n                            'id': data[cpt].type_id,\n                            'value': data[cpt].description,\n                            'extra': data[cpt].type_id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, doctypes);\n                }\n            });\n        }\n    }\n\n    getPrioritiesFromMaarch(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMaarchConnectionInfo();\n            this.http.post(API_URL + '/ws/maarch/getPriorities', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.priorities) {\n                    const data = _return.priorities;\n                    const priorities = [];\n                    for (const cpt in data) {\n                        priorities.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, priorities);\n                }\n            });\n        }\n    }\n\n    getStatusesFromMaarch(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMaarchConnectionInfo();\n            this.http.post(API_URL + '/ws/maarch/getStatuses', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.statuses) {\n                    const data = _return.statuses;\n                    const statuses = [];\n                    for (const cpt in data) {\n                        statuses.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label_status,\n                            'extra': data[cpt].id\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, statuses);\n                }\n            });\n        }\n    }\n\n    getIndexingModelsFromMaarch(cpt: any) {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth) && this.connection) {\n            const args = this.getMaarchConnectionInfo();\n            this.http.post(API_URL + '/ws/maarch/getIndexingModels', {'args': args}, {headers: this.authService.headers}).toPromise().then((_return: any) => {\n                if (_return && _return.indexingModels) {\n                    const data = _return.indexingModels;\n                    const indexingModels = [];\n                    for (const cpt in data) {\n                        indexingModels.push({\n                            'id': data[cpt].id,\n                            'value': data[cpt].label,\n                            'extra': data[cpt].category\n                        });\n                    }\n                    this.setAutocompleteValues(cpt, indexingModels);\n                }\n            });\n        }\n    }\n\n    /**** END Maarch Webservices call  ****/\n\n    updateOutput() {\n        const _array: any = {\n            \"output_type_id\": \"\",\n            \"output_label\": \"\",\n            \"data\": {\n                \"options\": {\n                    \"auth\": [],\n                    \"parameters\": []\n                }\n            }\n        };\n\n        for (const category in this.outputsTypesForm[this.selectedOutputType]) {\n            for (const cpt in this.outputsTypesForm[this.selectedOutputType][category]) {\n                const field = this.outputsTypesForm[this.selectedOutputType][category][cpt];\n                if (field.isJson) {\n                    try {\n                        JSON.parse(field.control.value);\n                    } catch (error) {\n                        field.control.setErrors({'json_error': true});\n                        this.notify.error(this.translate.instant('OUTPUT.json_input_erorr', {\"field\": field.label}));\n                        return;\n                    }\n                }\n\n                _array['data']['options'][category].push({\n                    id: field.id,\n                    type: field.type,\n                    webservice: field.webservice,\n                    value: field.value === undefined ? field.control.value : field.value,\n                });\n            }\n        }\n\n        this.outputForm.forEach(element => {\n            _array[element.id] = element.control.value;\n        });\n\n        this.http.put(API_URL + '/ws/outputs/update/' + this.outputId, {'args': _array},{headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('OUTPUT.form_updated'));\n                this.historyService.addHistory('verifier', 'update_output', this.translate.instant('HISTORY-DESC.update-output', {output: _array['output_label']}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    setAutocompleteValues(cpt: number, array: any) {\n        this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt].values = this.sortArrayAlphab(array);\n        /**\n         * Ces 6 lignes sont obligatoires afin de filter les résultats des champs au fur et à mesure que l'on écrit\n         */\n        const element = this.outputsTypesForm[this.selectedOutputType]['parameters'][cpt];\n        element.filteredOptions = element.control.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option, element.values) : element.values)\n            );\n    }\n\n    sortArrayAlphab(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.value.toUpperCase(),\n                y = b.value.toUpperCase();\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    testConnection() {\n        if (this.isValidForm(this.outputsTypesForm[this.selectedOutputType].auth)) {\n            const functionName = this.testConnectionMapping[this.selectedOutputType];\n            eval(\"this.\" + functionName);\n        }\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n            <button mat-icon-button (click)=\"sidenav2.toggle();\"\n                    class=\"absolute right-2 top-2\">\n                <i [class.transform]=\"sidenav2.opened\" [class.rotate-180]=\"sidenav2.opened\" class=\"fas fa-stream text-xl text-gray-900\"></i>\n            </button>\n        </div>\n        <div *ngIf=\"!loading\" class=\"flex justify-center items-center\">\n            <form class=\"grid grid-cols-2 gap-12 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of outputForm\">\n                    <mat-form-field *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [id]=\"field.id\" [(ngModel)]=\"field.control.value\" (selectionChange)=\"changeOutputType($event)\">\n                            <mat-option *ngFor=\"let option of outputsTypes\" [value]=\"option.output_type_id\">\n                                {{ option.output_type_label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputForm) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n            </form>\n        </div>\n        <mat-divider class=\"w-1/2 m-auto border-green-400\"></mat-divider>\n        <h4 class=\"text-center mt-10 mb-5\">{{ 'OUTPUT.output_settings_list' | translate }}</h4>\n        <div class=\"flex justify-center items-center mb-2\">\n            <button mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                <span class=\"block\" (click)=\"updateOutput()\">{{ \"OUTPUT.update\" | translate }}</span>\n            </button>\n        </div>\n        <div class=\"flex justify-center items-center ml-10 mr-5\">\n            <form class=\"w-full text-center\" *ngIf=\"selectedOutputType && outputsTypesForm[selectedOutputType]\">\n                <mat-tab-group class=\"output-tab\">\n                    <mat-tab [label]=\"'OUTPUT.auth' | translate\">\n                        <span *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length == 0\" class=\"relative top-10 text-xl\">\n                            {{ 'OUTPUT.no_auth_necessary' | translate }}\n                        </span>\n                        <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                            <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['auth']\">\n                                <mat-form-field *ngIf=\"field.type == 'text' || field.type == 'number' || field.type == 'password'\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                           [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['auth']) }}</mat-error>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                        <button *ngIf=\"outputsTypesForm[selectedOutputType]['auth'].length != 0\"\n                                mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                            <span (click)=\"testConnection()\">{{ \"OUTPUT.test_connection\" | translate }}</span>\n                        </button>\n                    </mat-tab>\n                    <mat-tab [label]=\"'OUTPUT.parameters' | translate\">\n                        <div class=\"grid grid-cols-4 gap-x-4 gap-y-10 m-5\">\n                            <ng-container *ngFor=\"let field of outputsTypesForm[selectedOutputType]['parameters']\">\n                                <mat-form-field *ngIf=\"(field.type == 'text' || field.type == 'number') && !field.webservice\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [value]=\"field.control.value\" [formControl]=\"field.control\"\n                                           [type]=\"field.type\" [placeholder]=\"field.placeholder\" [required]=\"field.required\">\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                    <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                                </mat-form-field>\n                                <mat-form-field *ngIf=\"(field.type == 'textarea') && !field.webservice\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <textarea cdkTextareaAutosize cdkAutosizeMinRows=\"1\"  matInput [value]=\"field.control.value\"\n                                              [formControl]=\"field.control\" [type]=\"field.type\" [placeholder]=\"field.placeholder\"\n                                              [required]=\"field.required\" ></textarea>\n                                    <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id, outputsTypesForm[selectedOutputType]['parameters']) }}</mat-error>\n                                    <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                                </mat-form-field>\n                                <mat-form-field (focusin)=\"retrieveDataFromWS(field.id)\" *ngIf=\"(field.type == 'text' || field.type == 'number') && field.webservice\">\n                                    <mat-label>{{ field.label | translate }}</mat-label>\n                                    <input matInput [formControl]=\"field.control\" [type]=\"field.type\"\n                                           [readonly]=\"field.webservice && !this.connection\"\n                                           [placeholder]=\"field.placeholder\" [required]=\"field.required\" [matAutocomplete]=\"autocomplete\">\n                                    <mat-error *ngIf=\"field.webservice && !this.connection\">{{ 'OUTPUT.check_connection_before' | translate }}</mat-error>\n                                    <mat-hint *ngIf=\"field.hint\">{{ field.hint }}</mat-hint>\n                                    <mat-autocomplete #autocomplete=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                        <mat-option *ngFor=\"let option of field.filteredOptions | async\" [value]=\"option\">\n                                            <span [innerHTML]=\"option.value | highlight: toHighlight\"></span>\n                                            <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ option.extra }}</span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </mat-tab>\n                </mat-tab-group>\n            </form>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"available-fields w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"FORMS.available_fields\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <div *ngFor=\"let field of availableFields; let cpt = index\" class=\"my-8 ml-2 text-base\">\n            <span>\n                {{ field.label | translate }}\n                <span style=\"font-size: 12px;\" class=\"text-green-400 ml-3\">{{ field.id | translate }}</span>\n                <mat-divider class=\"border-green-400 mt-4\" *ngIf=\"cpt == 0\"></mat-divider>\n            </span>\n        </div>\n    </mat-sidenav>\n\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {FormControl} from \"@angular/forms\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-input.component.html',\n    styleUrls: ['./update-input.component.scss']\n})\nexport class UpdateInputComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    inputId         : any;\n    input           : any;\n    inputForm       : any[]         = [\n        {\n            id: 'input_id',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            disabled: true,\n            required: true,\n        },\n        {\n            id: 'input_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'input_folder',\n            label: this.translate.instant('INPUT.input_folder'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"/var/share/sortant\",\n            required: true,\n        },\n        {\n            id: 'default_form_id',\n            label: this.translate.instant('INPUT.default_form_id'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'customer_id',\n            label: this.translate.instant('INPUT.associated_customer'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'purchase_or_sale',\n            label: this.translate.instant('INPUT.purchase_or_sale'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': 'purchase',\n                    'label': 'UPLOAD.purchase_invoice'\n                },\n                {\n                    'id': 'sale',\n                    'label': 'UPLOAD.sale_invoice'\n                }\n            ],\n            required: true,\n        },\n        {\n            id: 'override_supplier_form',\n            label: this.translate.instant('INPUT.override_supplier_form'),\n            type: 'boolean',\n            control: new FormControl()\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.inputId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/inputs/getById/' + this.inputId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.input = data;\n                for (const field in this.input) {\n                    this.inputForm.forEach(element => {\n                        if (element.id === field) {\n                            element.control.setValue(data[field]);\n                            if (element.id === 'default_form_id') {\n                                this.http.get(API_URL + '/ws/forms/list', {headers: this.authService.headers}).pipe(\n                                    tap((forms: any) => {\n                                        element.values = forms.forms;\n                                    }),\n                                    catchError((err: any) => {\n                                        console.debug(err);\n                                        this.notify.handleErrors(err);\n                                        return of(false);\n                                    })\n                                ).subscribe();\n                            } else if (element.id === 'customer_id') {\n                                this.http.get(API_URL + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n                                    tap((customers: any) => {\n                                        element.values = customers.customers;\n                                    }),\n                                    finalize(() => this.loading = false),\n                                    catchError((err: any) => {\n                                        console.debug(err);\n                                        this.notify.handleErrors(err);\n                                        return of(false);\n                                    })\n                                ).subscribe();\n                            }\n                        }\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                this.router.navigate(['/settings/verifier/outputs']).then();\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.inputForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const input : any = {};\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.put(API_URL + '/ws/inputs/update/' + this.inputId, {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.historyService.addHistory('verifier', 'update_input', this.translate.instant('HISTORY-DESC.update-input', {input: input['input_label']}));\n                    this.notify.success(this.translate.instant('INPUT.updated'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/verifier/inputs');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    createScriptAndIncron() {\n        if (this.isValidForm()) {\n            const input: any = {};\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n            this.http.post(API_URL + '/ws/inputs/createScriptAndIncron', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('INPUT.incron_and_script_updated'));\n                    this.onSubmit();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.inputForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <form>\n            <div class=\"grid grid-cols-2 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of inputForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [readonly]=\"field.disabled\"\n                               [type]=\"field.type\" placeholder=\"{{ field.placeholder | translate }}\"\n                               [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                <span *ngIf=\"option['label']\">\n                                    {{ option['label'] | translate}}\n                                </span>\n                                <span *ngIf=\"option['name']\">\n                                    {{ option['name'] | translate}}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-slide-toggle *ngIf=\"field.type == 'boolean'\" [formControl]=\"field.control\" class=\"relative top-4 mb-10 col-span-2\">\n                        <span class=\"justify-center\">{{ field.label | translate }}</span>\n                    </mat-slide-toggle>\n                </ng-container>\n            </div>\n        </form>\n        <div class=\"flex justify-center items-center\">\n            <button (click)=\"onSubmit()\"  mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                <span>{{ \"INPUT.update\" | translate }}</span>\n            </button>\n            <button (click)=\"createScriptAndIncron()\" mat-button class=\"ml-4 border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                <span>{{ \"INPUT.update_script_and_incron\" | translate }}</span>\n            </button>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\n Open-Capture for Invoices is free software: you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n Open-Capture is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License\n along with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n @dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule).then();\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { API_URL } from \"../../env\";\nimport { catchError, map, startWith, tap } from \"rxjs/operators\";\nimport { Observable, of } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { FormControl } from \"@angular/forms\";\nimport { DatePipe } from '@angular/common';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { ConfigService } from \"../../../services/config.service\";\nimport 'moment/locale/en-gb';\nimport 'moment/locale/fr';\nimport * as moment from 'moment';\nimport {UserService} from \"../../../services/user.service\";\nimport {HistoryService} from \"../../../services/history.service\";\ndeclare var $: any;\n\n\n@Component({\n    selector: 'verifier-viewer',\n    templateUrl: './verifier-viewer.component.html',\n    styleUrls: ['./verifier-viewer.component.scss'],\n    providers: [DatePipe]\n})\n\nexport class VerifierViewerComponent implements OnInit {\n    loading                 : boolean   = true;\n    isOCRRunning            : boolean   = false;\n    settingsOpen            : boolean   = false;\n    saveInfo                : boolean   = true;\n    ocrFromUser             : boolean   = false;\n    accountingPlanEmpty     : boolean   = false;\n    deleteDataOnChangeForm  : boolean   = true;\n    currentFilename         : string    = '';\n    currentPage             : number    = 1;\n    lastLabel               : string    = '';\n    lastId                  : string    = '';\n    lastColor               : string    = '';\n    ratio                   : number    = 0;\n    token                   : any;\n    imageInvoice            : any;\n    imgSrc                  : any;\n    invoiceId               : any;\n    invoice                 : any;\n    fields                  : any;\n    config                  : any;\n    fieldCategories         : any[]     = [\n        {\n            'id': 'supplier',\n            'label': marker('FORMS.supplier')\n        },\n        {\n            'id': 'facturation',\n            'label': marker('FACTURATION.facturation')\n        },\n        {\n            'id': 'other',\n            'label': marker('FORMS.other')\n        }\n    ];\n    disableOCR              : boolean   = false;\n    form                    : any       = {\n        'supplier': [],\n        'facturation': [],\n        'other': []\n    };\n    formSettings            : any       = {};\n    formList                : any       = {};\n    currentFormFields       : any       = {};\n    pattern                 : any       = {\n        'alphanum': '^[0-9a-zA-Z\\\\s]*$',\n        'alphanum_extended': '^[0-9a-zA-Z-/#\\\\s]*$',\n        'number_int': '^[0-9]*$',\n        'number_float': '^[0-9]*([.][0-9]*)*$',\n        'char': '^[A-Za-z\\\\s]*$',\n    };\n    suppliers               : any       = [];\n    filteredOptions         : Observable<any> | undefined;\n    getOnlyRawFooter        : boolean   = false;\n    toHighlight             : string    = '';\n    supplierNamecontrol     = new FormControl();\n    toHighlightAccounting   : string    = '';\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private historyService: HistoryService,\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    async ngOnInit(): Promise<void> {\n        this.localeStorageService.save('splitter_or_verifier', 'verifier');\n        this.ocrFromUser = false;\n        this.saveInfo = true;\n        this.config = this.configService.getConfig();\n        this.invoiceId = this.route.snapshot.params['id'];\n        this.historyService.addHistory('verifier', 'viewer', this.translate.instant('HISTORY-DESC.viewer', {invoice_id: this.invoiceId}));\n        this.updateInvoice({\n            'locked': true,\n            'locked_by': this.userService.user.username\n        });\n        this.invoice = await this.getInvoice();\n        this.currentFilename = this.invoice.full_jpg_filename;\n        await this.getThumb(this.invoice.full_jpg_filename);\n        if (this.invoice.form_id) {\n            this.currentFormFields = await this.getFormFieldsById(this.invoice.form_id);\n            this.formSettings = await this.getFormById(this.invoice.form_id);\n            if (this.formSettings.supplier_verif && !this.token) {\n                let token: any;\n                token = await this.generateTokenInsee();\n                if (token['token']) {\n                    this.token = token['token'];\n                }\n            }\n        }\n        if (Object.keys(this.currentFormFields).length === 0) this.currentFormFields = await this.getForm();\n        this.formList = await this.getAllForm();\n        this.formList = this.formList.forms;\n        this.suppliers = await this.retrieveSuppliers();\n        this.suppliers = this.suppliers.suppliers;\n\n        /*\n        * Enable library to draw rectangle on load (OCR ON FLY)\n        */\n        this.imageInvoice = $('#invoice_image');\n        this.ratio = this.invoice.img_width / this.imageInvoice.width();\n        this.ocr({\n            'target' : {\n                'id': '',\n                'labels': [\n                    {'textContent': ''}\n                ]\n            }\n        }, true);\n        if (this.invoice.supplier_id) this.getSupplierInfo(this.invoice.supplier_id, false, true);\n        await this.fillForm(this.currentFormFields);\n        setTimeout(() => {\n            this.drawPositions();\n            this.loading = false;\n        }, 500);\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        this.filteredOptions = this.supplierNamecontrol.valueChanges\n            .pipe(\n                startWith(''),\n                map(option => option ? this._filter(option) : this.suppliers.slice())\n            );\n    }\n\n    async generateTokenInsee(){\n        return await this.http.get(API_URL + '/ws/verifier/getTokenINSEE', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getThumb(filename:string) {\n        this.http.post(API_URL + '/ws/verifier/getThumb',\n            {'args': {'path': this.config['GLOBAL']['fullpath'], 'filename': filename}},\n            {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.imgSrc = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + data.file);\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        return this.imgSrc;\n    }\n\n    private _filter(value: any): string[] {\n        this.toHighlight = value;\n        const filterValue = value.toLowerCase();\n        return this.suppliers.filter((supplier: any) => supplier.name.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    updateFilteredOption(event: any, control: any) {\n        let value = '';\n        if (event.target.value) value = event.target.value;\n        else if (control.value) value = control.value;\n        control.patchValue(value);\n    }\n\n    getFieldInfo(fieldId: any) {\n        for (const parent in this.fields) {\n            for (const cpt in this.currentFormFields.fields[parent]) {\n                const field = this.currentFormFields.fields[parent][cpt];\n                if (field.id === fieldId) {\n                    return field;\n                }\n            }\n        }\n    }\n\n    async drawPositions(): Promise<any> {\n        for (const fieldId in this.invoice.datas) {\n            const page = this.getPage(fieldId);\n            const position = this.invoice.positions[fieldId];\n            if (position && parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                this.lastId = fieldId;\n                const splittedFieldId = fieldId.split('_');\n                let field = this.getFieldInfo(fieldId);\n                if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1]))) {\n                    const cpt = splittedFieldId[splittedFieldId.length - 1];\n                    const tmpFieldId = splittedFieldId.join('_').replace('_' + cpt, '');\n                    field = this.getFieldInfo(tmpFieldId);\n                }\n                this.lastLabel = this.translate.instant(field.label).trim();\n                this.lastColor = field.color;\n                this.disableOCR = true;\n                $('#' + fieldId).focus();\n                const newArea = {\n                    x: position.ocr_from_user ? position.x / this.ratio : position.x / this.ratio - ((position.x / this.ratio) * 0.005),\n                    y: position.ocr_from_user ? position.y / this.ratio : position.y / this.ratio - ((position.y / this.ratio) * 0.003),\n                    width: position.ocr_from_user ? position.width / this.ratio : position.width / this.ratio + ((position.width / this.ratio) * 0.05),\n                    height: position.ocr_from_user ? position.height / this.ratio : position.height / this.ratio + ((position.height / this.ratio) * 0.6)\n                };\n                const triggerEvent = $('.trigger');\n                triggerEvent.hide();\n                triggerEvent.trigger('mousedown');\n                triggerEvent.trigger('mouseup', [newArea]);\n            }\n        }\n    }\n\n    drawPositionByField(field: any, position: any) {\n        this.lastId = field.id;\n        this.lastLabel = this.translate.instant(field.label).trim();\n        this.lastColor = field.color;\n        this.disableOCR = true;\n        $('#' + field.id).focus();\n        const newArea = {\n            x: position.x / this.ratio,\n            y: position.y / this.ratio,\n            width: position.width / this.ratio,\n            height: position.height / this.ratio\n        };\n        const triggerEvent = $('.trigger');\n        triggerEvent.hide();\n        triggerEvent.trigger('mousedown');\n        triggerEvent.trigger('mouseup', [newArea]);\n    }\n\n    getPage(fieldId: any) {\n        let page: number = 1;\n        if (this.invoice.pages) {\n            Object.keys(this.invoice.pages).forEach((element: any) => {\n                if (element === fieldId) {\n                    page = this.invoice.pages[fieldId];\n                }\n            });\n        }\n        return page;\n    }\n\n    async retrieveSuppliers(): Promise<any> {\n        return await this.http.get(API_URL + '/ws/accounts/suppliers/list?order=name ASC', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getInvoice(): Promise<any> {\n        return await this.http.get(API_URL + '/ws/verifier/invoices/' + this.invoiceId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getForm(): Promise<any> {\n        if (this.invoice.form_id)\n            return await this.http.get(API_URL + '/ws/forms/fields/getByFormId/' + this.invoice.form_id, {headers: this.authService.headers}).toPromise();\n        if (this.invoice.supplier_id)\n            return await this.http.get(API_URL + '/ws/forms/fields/getBySupplierId/' + this.invoice.supplier_id, {headers: this.authService.headers}).toPromise();\n        else\n            return await this.http.get(API_URL + '/ws/forms/getDefault', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getAllForm(): Promise<any> {\n        return await this.http.get(API_URL + '/ws/forms/list', {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormFieldsById(formId: number): Promise<any> {\n        return await this.http.get(API_URL + '/ws/forms/fields/getByFormId/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async getFormById(formId: number): Promise<any> {\n        return await this.http.get(API_URL + '/ws/forms/getById/' + formId, {headers: this.authService.headers}).toPromise();\n    }\n\n    async fillForm(data: any): Promise<any> {\n        this.form = {\n            'supplier': [],\n            'facturation': [],\n            'other': []\n        };\n        this.fields = data.fields;\n\n        for (const category in this.fields) {\n            for (const cpt in this.fields[category]) {\n                const field = this.fields[category][cpt];\n                this.form[category].push({\n                    id: field.id,\n                    label: field.label,\n                    required: field.required,\n                    control: new FormControl(),\n                    type: field.type,\n                    pattern: this.getPattern(field.format),\n                    color: field.color,\n                    unit: field.unit,\n                    class: field.class,\n                    format: field.format,\n                    display: field.display,\n                    format_icon: field.format_icon,\n                    display_icon: field.display_icon,\n                    class_label: field.class_label,\n                    cpt: 0,\n                    values: ''\n                });\n\n                const _field = this.form[category][this.form[category].length - 1];\n\n                if (field.id === 'accounting_plan') {\n                    let array = await this.retrieveAccountingPlan();\n                    this.accountingPlanEmpty = Object.keys(array).length === 0;\n                    if (this.accountingPlanEmpty) {\n                        array = await this.retrieveDefaultAccountingPlan();\n                    }\n                    array = this.sortArray(array);\n                    this.form[category][cpt].values = this.form[category][cpt].control.valueChanges\n                        .pipe(\n                            startWith(''),\n                            map(option => option ? this._filter_accounting(array, option) : array)\n                        );\n                }\n\n                if (this.invoice.datas[field.id]) {\n                    let value = this.invoice.datas[field.id];\n                    if (field.format === 'date' && field.id !== '' && field.id !== undefined && value) {\n                        value = value.replaceAll('.', '/');\n                        value = value.replaceAll(',', '/');\n                        value = value.replaceAll(' ', '/');\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n                    _field.control.setValue(value);\n                    _field.control.markAsTouched();\n\n                    if (field.id === 'siret' || field.id === 'siren') this.checkSirenOrSiret(field.id, value);\n                    if (field.id === 'vat_number') this.checkVAT(field.id, value);\n                }\n\n                if (field.id === 'name' && category === 'supplier') this.supplierNamecontrol = this.form[category][cpt].control;\n                this.findChildren(field.id, _field, category);\n            }\n        }\n    }\n\n    private _filter_accounting(array: any, value: any): string[] {\n        this.toHighlightAccounting = value;\n        const filterValue = value.toLowerCase();\n        return array.filter((option: any) => option.compte_lib.toLowerCase().indexOf(filterValue) !== -1 || option.compte_num.toLowerCase().indexOf(filterValue) !== -1);\n    }\n\n    sortArray(array: any) {\n        return array.sort((a: any, b: any) => {\n            const x = a.compte_num, y = b.compte_num;\n            return x === y ? 0 : x > y ? 1 : -1;\n        });\n    }\n\n    async retrieveAccountingPlan() {\n        return await this.http.get(API_URL + '/ws/accounts/customers/getAccountingPlan/' + this.invoice.customer_id, {headers: this.authService.headers}).toPromise();\n    }\n\n    async retrieveDefaultAccountingPlan() {\n        return await this.http.get(API_URL + '/ws/accounts/customers/getDefaultAccountingPlan', {headers: this.authService.headers}).toPromise();\n    }\n\n    findChildren(parentId: any, parent: any, categoryId: any) {\n        for (const field in this.invoice.datas) {\n            if (field.includes(parentId + '_')) {\n                parent.cpt += 1;\n                const splitted = field.split('_');\n                const cpt = parseInt(splitted[splitted.length - 1]) + 1;\n                this.form[categoryId].push({\n                    id: field,\n                    label: parent.label,\n                    required: parent.required,\n                    control: new FormControl(),\n                    type: parent.type,\n                    pattern: this.getPattern(parent.format),\n                    color: parent.color,\n                    unit: parent.unit,\n                    class: parent.class,\n                    format: parent.format,\n                    display: 'simple',\n                    format_icon: parent.format_icon,\n                    display_icon: parent.display_icon,\n                    class_label: parent.class_label,\n                    cpt: cpt,\n                });\n                const value = this.invoice.datas[field];\n                const _field = this.form[categoryId][this.form[categoryId].length - 1];\n                _field.control.setValue(value);\n            }\n        }\n    }\n\n    getSelectionByCpt(selection: any, cpt: any) {\n        for (const index in selection) {\n            if (selection[index].id === cpt)\n                return selection[index];\n        }\n    }\n\n    ocr(event: any, enable: boolean, color = 'green') {\n        $('.trigger').show();\n        const _this = this;\n        this.lastId = event.target.id;\n        this.lastLabel = event.target.labels[0].textContent.replace('*', '').trim();\n        this.lastColor = color;\n        const imageContainer = $('.image-container');\n        const deleteArea = $('.delete-area');\n        const backgroundArea = $('.select-areas-background-area');\n        const resizeArea = $('.select-areas-resize-handler');\n        deleteArea.addClass('pointer-events-auto');\n        backgroundArea.addClass('pointer-events-auto');\n        resizeArea.addClass('pointer-events-auto');\n        imageContainer.addClass('pointer-events-none');\n        imageContainer.addClass('cursor-auto');\n        if (enable) {\n            $('.outline_' + _this.lastId).toggleClass('animate');\n            imageContainer.removeClass('pointer-events-none');\n            imageContainer.removeClass('cursor-auto');\n            this.imageInvoice.selectAreas({\n                allowNudge: false,\n                minSize: [20, 20],\n                maxSize: [this.imageInvoice.width(), this.imageInvoice.height() / 8],\n                onChanged(img: any, cpt: any, selection: any) {\n                    if (selection.length !== 0 && selection['width'] !== 0 && selection['height'] !== 0) {\n                        _this.ocr_process(img, cpt, selection);\n                    }\n                },\n                onDeleted(img: any, cpt: any) {\n                    const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n                    if (inputId) {\n                        _this.updateFormValue(inputId, '');\n                        if (_this.deleteDataOnChangeForm) {\n                            _this.deleteData(inputId);\n                            _this.deletePosition(inputId);\n                            _this.deletePage(inputId);\n                        }\n                    }\n                }\n            });\n        }else {\n            let deleteClicked = false;\n            $(\".select-areas-delete-area\").click(() => {\n                deleteClicked = true;\n            });\n            setTimeout(() => {\n                if (!deleteClicked) {\n                    resizeArea.hide();\n                    deleteArea.hide();\n                }\n            }, 200);\n            $('.outline_' + _this.lastId).removeClass('animate');\n        }\n    }\n\n    ocr_process(img: any, cpt: number, selection: any) {\n        // Write the label of the input above the selection rectangle\n        const page = this.getPage(this.lastId);\n        if (this.ocrFromUser || (parseInt(String(page)) === this.currentPage || page === 0)) {\n            if ($('#select-area-label_' + cpt).length === 0) {\n                const outline = $('#select-areas-outline_' + cpt);\n                const backgroundArea = $('#select-areas-background-area_' + cpt);\n                const labelContainer = $('#select-areas-label-container_' + cpt);\n                const deleteContainer = $('#select-areas-delete_' + cpt);\n                const resizeHandler = $('.select-areas-resize-handler_' + cpt);\n                labelContainer.append('<div id=\"select-area-label_' + cpt + '\" class=\"input_' + this.lastId + ' select-none\">' + this.lastLabel + '</div>');\n                backgroundArea.css('background-color', this.lastColor);\n                outline.addClass('outline_' + this.lastId);\n                backgroundArea.addClass('background_' + this.lastId);\n                resizeHandler.addClass('resize_' + this.lastId);\n                deleteContainer.addClass('delete_' + this.lastId);\n                backgroundArea.data('page', page);\n                labelContainer.data('page', page);\n                outline.data('page', page);\n            }\n            // End write\n\n            const inputId = $('#select-area-label_' + cpt).attr('class').replace('input_', '').replace('select-none', '');\n            $('#' + inputId).focus();\n\n            // Test to avoid multi selection for same label. If same label exists, remove the selected areas and replace it by the new one\n            const label = $('div[id*=select-area-label_]:contains(' + this.lastLabel + ')');\n            const labelCount = label.length;\n            if (labelCount > 1) {\n                const cptToDelete = label[labelCount - 1].id.split('_')[1];\n                $('#select-areas-label-container_' + cptToDelete).remove();\n                $('#select-areas-background-area_' + cptToDelete).remove();\n                $('#select-areas-outline_' + cptToDelete).remove();\n                $('#select-areas-delete_' + cptToDelete).remove();\n                $('.select-areas-resize-handler_' + cptToDelete).remove();\n            }\n            if (!this.isOCRRunning && !this.loading && this.saveInfo) {\n                this.isOCRRunning = true;\n                this.http.post(API_URL + '/ws/verifier/ocrOnFly',\n                    {\n                        selection: this.getSelectionByCpt(selection, cpt),\n                        fileName: this.invoice.full_jpg_filename,\n                        thumbSize: {width: img.currentTarget.width, height: img.currentTarget.height}\n                    }, {headers: this.authService.headers})\n                    .pipe(\n                        tap((data: any) => {\n                            this.updateFormValue(inputId, data.result);\n                            this.isOCRRunning = false;\n                            const res = this.saveData(data.result, this.lastId, true);\n                            if (res) {\n                                this.savePosition(this.getSelectionByCpt(selection, cpt));\n                                this.savePages(this.currentPage).then();\n                            }\n                        }),\n                        catchError((err: any) => {\n                            console.debug(err);\n                            this.notify.handleErrors(err);\n                            return of(false);\n                        })\n                    ).subscribe();\n            }\n            this.saveInfo = true;\n        }else {\n            const input = $('.input_' + this.lastId);\n            const background = $('.background_' + this.lastId);\n            const outline = $('.outline_' + this.lastId);\n            input.remove();\n            background.remove();\n            outline.remove();\n        }\n    }\n\n    updateFormValue(inputId: string, value: any) {\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.id.trim() === inputId.trim()) {\n                    if (input.type === 'date') {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = new Date(value._d);\n                    }\n\n                    input.control.setValue(value);\n                    input.control.markAsTouched();\n                }\n            });\n        }\n    }\n\n    savePosition(position: any) {\n        position = {\n            ocr_from_user: true,\n            x: position.x * this.ratio,\n            y: position.y * this.ratio,\n            height: position.height * this.ratio,\n            width: position.width * this.ratio\n        };\n\n        if (this.invoice.supplier_id) {\n            this.http.put(API_URL + '/ws/accounts/supplier/' + this.invoice.supplier_id + '/updatePosition',\n                {'args': {[this.lastId]: position}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/updatePosition',\n            {'args': {[this.lastId]: position}},\n            {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.invoice.positions[this.lastId] = position;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    async savePages(page: any) {\n        if (this.invoice.supplier_id) {\n            this.http.put(API_URL + '/ws/accounts/supplier/' + this.invoice.supplier_id + '/updatePage',\n                {'args': {[this.lastId]: page}},\n                {headers: this.authService.headers}).pipe(\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n\n        this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/updatePage',\n            {'args': {[this.lastId]: page}},\n            {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.invoice.pages[this.lastId] = page;\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n        ).subscribe();\n    }\n\n    saveData(data: any, fieldId: any = false, showNotif: boolean = false) {\n        if (data) {\n            if (fieldId) {\n                const field = this.getField(fieldId);\n                if (field.control.errors || this.invoice.datas[fieldId] === data) return false;\n                data = {[fieldId]: data};\n            }\n            this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/updateData',\n                {'args': data},\n                {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.invoice.datas[fieldId] = data;\n                    if (showNotif) this.notify.success(this.translate.instant('INVOICES.position_and_data_updated', {\"input\": this.lastLabel}));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n            return true;\n        }\n        return false;\n    }\n\n    updateInvoice(data: any) {\n        this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoiceId + '/update',\n            {'args': data},\n            {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getField(fieldId: any) {\n        let _field : any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((field: any) => {\n                if (field.id.trim() === fieldId.trim()) {\n                    _field = field;\n                }\n            });\n        }\n        return _field;\n    }\n\n    deleteData(fieldId: any) {\n        this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/deleteData',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('INVOICES.data_deleted', {\"input\": this.lastLabel}));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePosition(fieldId: any) {\n        this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/deletePosition',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    deletePage(fieldId: any) {\n        this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/deletePage',\n            {'args': fieldId.trim()},\n            {headers: this.authService.headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    getPattern(format: any) {\n        let pattern = '';\n        for (const cpt in this.pattern) {\n            if (cpt === format) {\n                pattern = this.pattern[cpt];\n            }\n        }\n        return pattern;\n    }\n\n    duplicateField(fieldId: any, categoryId: any) {\n        for (const category in this.form) {\n            if (category === categoryId) {\n                this.form[category].forEach((field: any, cpt:number) => {\n                    if (field.id.trim() === fieldId.trim()) {\n                        const newField = Object.assign({}, field);\n                        newField.id = newField.id + '_' + field.cpt;\n                        field.cpt += 1;\n                        newField.cpt = field.cpt;\n                        newField.display = 'simple';\n                        newField.control = new FormControl();\n                        this.form[category].splice(cpt + field.cpt, 0, newField);\n                        this.saveData('', newField.id);\n                        this.notify.success(this.translate.instant('INVOICES.field_duplicated', {\"input\": this.translate.instant(field.label)}));\n                    }\n                });\n            }\n        }\n    }\n\n    removeDuplicateField(fieldId: any, categoryId: any) {\n        const parentId = fieldId.split('_').slice(0,-1).join('_');\n        for (const category in this.form) {\n            if (category === categoryId) {\n                this.form[category].forEach((field: any, cpt:number) => {\n                    if (field.id.trim() === fieldId.trim()) {\n                        this.deleteData(field.id);\n                        this.deletePosition(field.id);\n                        this.form[category].splice(cpt, 1);\n                    }else if (field.id.trim() === parentId.trim()) {\n                        field.cpt = field.cpt - 1;\n                    }\n                });\n            }\n        }\n    }\n\n    isChildField(fieldId: any) {\n        const splittedId = fieldId.split('_');\n        return Number.isInteger(parseInt(splittedId[splittedId.length - 1]));\n    }\n\n    getSupplierInfo(supplierId: any, showNotif = false, launchOnInit = false) {\n        this.suppliers.forEach((supplier: any) => {\n            if (supplier.id === supplierId) {\n                this.http.get(API_URL + '/ws/accounts/getAdressById/' + supplier.address_id, {headers: this.authService.headers}).pipe(\n                    tap((address: any) => {\n                        const supplierData : any = {\n                            'name': supplier.name,\n                            'address1': address.address1,\n                            'address2': address.address2,\n                            'city': address.city,\n                            'country': address.country,\n                            'postal_code': address.postal_code,\n                            'siret': supplier.siret,\n                            'siren': supplier.siren,\n                            'vat_number': supplier.vat_number,\n                        };\n                        this.getOnlyRawFooter = supplier.get_only_raw_footer;\n                        for (const column in supplierData) {\n                            this.updateFormValue(column, supplierData[column]);\n                        }\n\n                        if (!launchOnInit) {\n                            this.updateInvoice({'supplier_id': supplierId});\n                            this.saveData(supplierData);\n                            this.http.put(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/updateData',\n                                {'args': supplierData},\n                                {headers: this.authService.headers}).pipe(\n                                tap(() => {\n                                    this.invoice.supplier_id = supplierId;\n                                    if (showNotif) {\n                                        this.notify.success(this.translate.instant('INVOICES.supplier_infos_updated'));\n                                    }\n                                }),\n                                catchError((err: any) => {\n                                    console.debug(err);\n                                    this.notify.handleErrors(err);\n                                    return of(false);\n                                })\n                            ).subscribe();\n                        }\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }\n        });\n    }\n\n    // Function used to verify SIRET or SIREN using the Luhn algorithm\n    verify(value: any, size: any, isVAT = false) {\n        if (isVAT){\n            return value.length === size;\n        }\n\n        if (isNaN(value) || value.length !== size) return false;\n        let bal     = 0;\n        let total   = 0;\n        for (let i = size - 1; i >= 0; i--){\n            const step = (value.charCodeAt(i) - 48) * (bal + 1);\n            total += (step > 9) ? step - 9:step;\n            bal = 1 - bal;\n        }\n        return total % 10 === 0;\n    }\n\n    getErrorMessage(field: any, category: any) {\n        let error: any;\n        this.form[category].forEach((element: any) => {\n            if (element.id === field) {\n                if (element.control.errors) {\n                    const required = element.control.errors.required;\n                    const pattern = element.control.errors.pattern;\n                    const datePickerPattern = element.control.errors.matDatepickerParse;\n                    const siret_error = element.control.errors.siret_error;\n                    const siren_error = element.control.errors.siren_error;\n                    const vat_error = element.control.errors.vat_error;\n                    if (pattern) {\n                        if (pattern.requiredPattern === this.getPattern('alphanum')) {\n                            error = this.translate.instant('ERROR.alphanum_pattern');\n                        }else if (pattern.requiredPattern === this.getPattern('alphanum_extended')) {\n                            error = this.translate.instant('ERROR.alphanum_extended_pattern');\n                        }else if (pattern.requiredPattern === this.getPattern('number_int')) {\n                            error = this.translate.instant('ERROR.number_int_pattern');\n                        }else if (pattern.requiredPattern === this.getPattern('number_float')) {\n                            error = this.translate.instant('ERROR.number_float_pattern');\n                        }\n                    }else if (datePickerPattern) {\n                        error = this.translate.instant('ERROR.date_pattern');\n                    }else if (required) {\n                        error = this.translate.instant('ERROR.field_required');\n                    }else if (siret_error) {\n                        error = siret_error;\n                    }else if (siren_error) {\n                        error = siren_error;\n                    }else if (vat_error) {\n                        error = vat_error;\n                    }else {\n                        error = this.translate.instant('ERROR.unknow_error');\n                    }\n                }\n            }\n        });\n        return error;\n    }\n\n    validateForm() {\n        let valid = true;\n        const arrayData: any = {};\n        for (const category in this.form) {\n            this.form[category].forEach((input: any) => {\n                if (input.control.value) {\n                    let value = input.control.value;\n                    if (input.type === 'date') {\n                        const format = moment().localeData().longDateFormat('L');\n                        value = moment(value, format);\n                        value = value.format(format);\n                    }\n                    Object.assign(arrayData, {[input.id] : value});\n                }\n                if (input.control.errors) {\n                    valid = false;\n                    this.notify.error(this.translate.instant('ERROR.form_not_valid'));\n                }\n            });\n        }\n        if (!valid) return;\n        this.saveData(arrayData);\n        const formId = this.currentFormFields.form_id;\n        /*\n            Executer les actions paramétrées dans les réglages du formulaires\n         */\n        this.http.get(API_URL + '/ws/forms/getById/' + formId, {headers: this.authService.headers}).pipe(\n            tap((form: any) => {\n                const outputsLabel: any[] = [];\n                if (form.outputs.length !== 0) {\n                    form.outputs.forEach((outputId: any, cpt: number) => {\n                        this.http.get(API_URL + '/ws/outputs/getById/' + outputId, {headers: this.authService.headers}).pipe(\n                            tap((data: any) => {\n                                outputsLabel.push(data.output_label);\n                                this.http.post(API_URL + '/ws/verifier/invoices/' + this.invoice.id + '/' + data.output_type_id, {'args': data.data},{headers: this.authService.headers}).pipe(\n                                    tap(() => {\n                                        /* Actions à effectuer après le traitement des chaînes sortantes */\n                                        if (cpt + 1 === form.outputs.length) {\n                                            this.updateInvoice({'status': 'END', 'locked': false, 'locked_by': null});\n                                            this.router.navigate(['/verifier']).then();\n                                            this.notify.success(this.translate.instant('VERIFIER.form_validated_and_output_done', {outputs: outputsLabel.join('<br>')}));\n                                        }\n                                    }),\n                                    catchError((err: any) => {\n                                        console.debug(err);\n                                        this.notify.handleErrors(err);\n                                        return of(false);\n                                    })\n                                ).subscribe();\n                            }),\n                            catchError((err: any) => {\n                                console.debug(err);\n                                this.notify.handleErrors(err);\n                                return of(false);\n                            })\n                        ).subscribe();\n                    });\n                }else {\n                    this.notify.error(this.translate.instant('VERIFIER.no_outputs_for_this_form', {'form': form.label}));\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    refuseForm() {\n        this.updateInvoice({'status': 'ERR', 'locked': false, 'locked_by': null});\n        this.notify.error(this.translate.instant('VERIFIER.invoice_refused'));\n        this.router.navigate(['/verifier/list']);\n    }\n\n    async changeForm(event: any) {\n        this.loading = true;\n        const newFormId = event.value;\n        for (const cpt in this.formList) {\n            if (this.formList[cpt].id === newFormId) {\n                this.updateInvoice({'form_id': newFormId});\n                this.currentFormFields = await this.getFormFieldsById(newFormId);\n                this.deleteDataOnChangeForm = false;\n                this.imageInvoice.selectAreas('destroy');\n                this.settingsOpen = false;\n                this.notify.success(this.translate.instant('VERIFIER.form_changed'));\n                await this.ngOnInit();\n                this.deleteDataOnChangeForm = true;\n            }\n        }\n    }\n\n    nextPage() {\n        if (this.currentPage < this.invoice.nb_pages) {\n            this.currentPage = this.currentPage + 1;\n            this.changeImage(this.currentPage, this.currentPage - 1);\n        }else {\n            this.changeImage(1, this.invoice.nb_pages);\n        }\n    }\n\n    previousPage() {\n        if (this.currentPage > 1) {\n            this.currentPage = this.currentPage - 1;\n            this.changeImage(this.currentPage, this.currentPage + 1);\n        }else {\n            this.changeImage(this.invoice.nb_pages, this.currentPage);\n        }\n    }\n\n    changeImage(pageToShow: number, oldPage: number) {\n        if (pageToShow) {\n            const extension = this.currentFilename.split('.').pop();\n            const oldCpt = ('000' + oldPage).substr(-3);\n            const newCpt = ('000' + pageToShow).substr(-3);\n            const newFilename = this.currentFilename.replace(oldCpt + '.' + extension, newCpt + '.' + extension);\n            this.currentFilename = newFilename;\n            this.getThumb(newFilename).then();\n            this.currentPage = pageToShow;\n            for (const fieldId in this.invoice.datas) {\n                const page = this.invoice.pages[fieldId];\n                const position = this.invoice.positions[fieldId];\n                if (position) {\n                    const input = $('.input_' + fieldId);\n                    const background = $('.background_' + fieldId);\n                    const outline = $('.outline_' + fieldId);\n                    const resizeHandler = $('.resize_' + fieldId);\n                    const deleteContainer = $('.delete_' + fieldId);\n                    input.remove();\n                    background.remove();\n                    outline.remove();\n                    resizeHandler.remove();\n                    deleteContainer.remove();\n                    if (parseInt(String(page)) === parseInt(String(this.currentPage))) {\n                        this.lastId = fieldId;\n                        const splittedFieldId = fieldId.split('_');\n                        let field = this.getFieldInfo(fieldId);\n                        if (!isNaN(parseInt(splittedFieldId[splittedFieldId.length - 1]))) {\n                            const cpt = splittedFieldId[splittedFieldId.length - 1];\n                            const tmpFieldId = splittedFieldId.join('_').replace('_' + cpt, '');\n                            field = this.getFieldInfo(tmpFieldId);\n                            field.label = this.translate.instant(field.label) + ' ' + (parseInt(cpt) + 1);\n                        }\n                        this.saveInfo = false;\n                        if (parseInt(String(page)) === this.currentPage) this.drawPositionByField(field, position);\n                    }\n                }\n            }\n        }\n    }\n\n    checkSirenOrSiret(siretOrSiren: any, value: any) {\n        if (this.formSettings.supplier_verif) {\n            const sizeSIREN = 9;\n            const sizeSIRET = 14;\n            if (siretOrSiren === 'siren') {\n                if (this.verify(value, sizeSIREN) && this.token) {\n                    this.http.post(API_URL + '/ws/verifier/verifySIREN', {'token': this.token, 'siren': value}, {headers: this.authService.headers}).pipe(\n                        tap(),\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siren') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siren_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n                else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siren') {\n                            setTimeout(() => {\n                                if (!this.token) {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                }else {\n                                    element.control.setErrors({'siren_error': this.translate.instant('ERROR.wrong_siren_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            } else if (siretOrSiren === 'siret') {\n                if (this.verify(value, sizeSIRET) && this.token) {\n                    this.http.post(API_URL + '/ws/verifier/verifySIRET', {'token': this.token, 'siret': value}, {headers: this.authService.headers}).pipe(\n                        tap(),\n                        catchError((err: any) => {\n                            this.form['supplier'].forEach((element: any) => {\n                                if (element.id === 'siret') {\n                                    setTimeout(() => {\n                                        element.control.setErrors({'siret_error': err.error.status});\n                                        element.control.markAsTouched();\n                                    }, 100);\n                                }\n                            });\n                            return of(false);\n                        })\n                    ).subscribe();\n                }\n                else {\n                    this.form['supplier'].forEach((element: any) => {\n                        if (element.id === 'siret') {\n                            setTimeout(() => {\n                                if (!this.token) {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.insee_api_not_up')});\n                                }else {\n                                    element.control.setErrors({'siret_error': this.translate.instant('ERROR.wrong_siret_format')});\n                                }\n                                element.control.markAsTouched();\n                            }, 100);\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    checkVAT(id: any, value: any) {\n        if (id === 'vat_number' && this.formSettings.supplier_verif) {\n            const sizeVAT = 13;\n            if (this.verify(value, sizeVAT, true)) {\n                this.http.post(API_URL + '/ws/verifier/verifyVATNumber', {'vat_number': value}, {headers: this.authService.headers}).pipe(\n                    tap(),\n                    catchError((err: any) => {\n                        this.form['supplier'].forEach((element: any) => {\n                            if (element.id === 'vat_number') {\n                                setTimeout(() => {\n                                    element.control.setErrors({'vat_error': err.error.status});\n                                    element.control.markAsTouched();\n                                }, 100);\n                            }\n                        });\n                        return of(false);\n                    })\n                ).subscribe();\n            }else {\n                this.form['supplier'].forEach((element: any) => {\n                    if (element.id === 'vat_number') {\n                        setTimeout(() => {\n                            if (!this.token) {\n                                element.control.setErrors({'vat_error': this.translate.instant('ERROR.ecu_api_not_up')});\n                            }else {\n                                element.control.setErrors({'vat_error': this.translate.instant('ERROR.wrong_vat_number_format')});\n                            }\n                            element.control.markAsTouched();\n                        }, 100);\n                    }\n                });\n            }\n        }\n    }\n}\n","<div *ngIf=\"loading\">\n    <app-loader></app-loader>\n</div>\n<div class=\"grid grid-cols-2 overflow-auto mt-2\">\n    <div class=\"fixed z-50 text-xl left-6 top-4\">\n        <ng-container *ngIf=\"!this.loading && this.invoice && this.invoice.nb_pages > 1\">\n            <i class=\"fa fa-arrow-left cursor-pointer\" (click)=\"previousPage()\"></i>\n            {{ 'VERIFIER.page' | translate }}\n            {{ currentPage }}\n            {{ 'VERIFIER.on' | translate }}\n            {{ invoice.nb_pages }}\n            <i class=\"fa fa-arrow-right cursor-pointer\" (click)=\"nextPage()\"></i>\n        </ng-container>\n    </div>\n    <div class=\"overflow-auto\" style=\"height: calc(100vh - 64px) !important; direction: rtl\">\n        <div class=\"image-container px-4\" *ngIf=\"this.invoice\">\n            <img id=\"invoice_image\" alt=\"Open-Capture For Invoices\" [src]=\"this.imgSrc\">\n        </div>\n    </div>\n    <div *ngIf=\"this.fields\" class=\"px-4 overflow-auto\" style=\"height: calc(100vh - 56px) !important\">\n        <mat-accordion>\n            <mat-expansion-panel class=\"top-2 mb-4\" [(expanded)]=\"settingsOpen\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title class=\"justify-center\">{{ 'GLOBAL.settings' | translate }}</mat-panel-title>\n                </mat-expansion-panel-header>\n                <mat-tab-group class=\"mx-5\">\n                    <mat-tab [label]=\"'VERIFIER.change_form' | translate\">\n                        <p class=\"mt-3 text-center text-gray-400\">{{ 'VERIFIER.change_form_details' | translate }}</p>\n                        <mat-form-field class=\"w-full\">\n                            <mat-select [(value)]=\"this.currentFormFields.form_id\" (selectionChange)=\"changeForm($event)\">\n                                <mat-option *ngFor=\"let form of this.formList\" [value]=\"form['id']\">\n                                    {{ form['label'] }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </mat-tab>\n                </mat-tab-group>\n            </mat-expansion-panel>\n        </mat-accordion>\n        <ng-container *ngFor=\"let category of this.fieldCategories\">\n            <ng-container *ngIf=\"this.form[category['id']].length !== 0\">\n                <div class=\"relative text-xl tracking-wider pl-1.5 pr-1.5 bg-white left-6 z-5\"\n                     [style]=\"'width:calc(3% + ' + (this.translate.instant(category['label']).length + 2)+ '%)'\">\n                    {{ category['label'] | translate }}\n                    <span *ngIf=\"getOnlyRawFooter && this.translate.instant(category['label']) == this.translate.instant('FORMS.supplier')\"\n                          class=\"cursor-default relative top-1.5 text-red-500 text-3xl\"\n                          matTooltip=\"{{ 'VERIFIER.only_raw_footer' | translate }}\">&bull;</span>\n                    <span *ngIf=\"!getOnlyRawFooter && this.translate.instant(category['label']) == this.translate.instant('FORMS.supplier')\"\n                          class=\"cursor-default relative top-1.5 text-green-400 text-3xl\"\n                          matTooltip=\"{{ 'VERIFIER.calculated_footer' | translate }}\">&bull;</span>\n                </div>\n                <div class=\"relative border-green-400 border rounded-lg -top-3.5\">\n                    <div id=\"{{ category['id'] }}\" class=\"flex flex-wrap w-full my-3\" style=\"min-height: 50px;\">\n                        <div *ngFor=\"let field of this.form[category['id']];\" class=\"flex items-center px-3\" [class]=\"field.class\">\n                            <ng-container *ngIf=\"field.type === 'text'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"category['id'] == 'supplier' && field.id == 'name' else other\" (click)=\"updateFilteredOption($event, field.control)\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }}\n                                    </mat-label>\n                                    <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field.required\"\n                                           [formControl]=\"field.control\" [pattern]=\"field.pattern\" [matAutocomplete]=\"auto\">\n                                    <mat-error class=\"mt-1\" *ngIf=\"field.control.errors\">{{ getErrorMessage(field.id, category['id']) }}</mat-error>\n                                    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)='getSupplierInfo($event.option.id, true)'>\n                                        <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option.name\" [id]=\"option.id\">\n                                            <span [innerHTML]=\"option.name | highlight: toHighlight\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                </mat-form-field>\n                                <ng-template #other>\n                                    <mat-form-field class=\"right-0 w-full form-viewer\">\n                                        <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                            {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                        </mat-label>\n                                        <span *ngIf=\"field.display == 'multi'\" (click)=\"duplicateField(field.id, category['id'])\"\n                                              class=\"absolute -top-2 -right-2.5 cursor-pointer text-gray-900\">\n                                            <mat-icon class=\"text-lg\">add_circle</mat-icon>\n                                        </span>\n                                        <span *ngIf=\"isChildField(field.id)\" (click)=\"removeDuplicateField(field.id, category['id'])\"\n                                              class=\"absolute -top-2 -right-2.5 cursor-pointer text-red-500\">\n                                            <mat-icon class=\"text-xl\">delete_forever</mat-icon>\n                                        </span>\n                                        <input [id]=\"field.id\" matInput type=\"text\" [formControl]=\"field.control\" [required]=\"field.required\"\n                                               [pattern]=\"field.pattern\" (click)=\"this.ocrFromUser = true; this.saveInfo = true;\"\n                                               (focusin)=\"ocr($event, true, field.color);\"\n                                               (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id']); checkVAT(field['id'], $any($event.target).value); checkSirenOrSiret(field['id'], $any($event.target).value)\">\n                                        <mat-error class=\"mt-1\" *ngIf=\"field.control.errors\">\n                                            {{ getErrorMessage(field.id, category['id']) }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </ng-template>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'textarea'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }} <span *ngIf=\"isChildField(field.id) && !field.id.includes('custom_')\">{{ field.cpt }}</span>\n                                    </mat-label>\n                                    <textarea [id]=\"field.id\" cdkTextareaAutosize cdkAutosizeMinRows=\"1\" matInput\n                                              [required]=\"field.required\" [formControl]=\"field.control\" [pattern]=\"field.pattern\"\n                                              (focusin)=\"ocr($event, true, field.color)\"\n                                              (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"></textarea>\n                                    <mat-error class=\"mt-1\" *ngIf=\"field.control.errors\">\n                                        {{ getErrorMessage(field.id, category['id']) }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'date'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }}\n                                    </mat-label>\n                                    <input [id]=\"field.id\" matInput [matDatepicker]=\"picker\" [formControl]=\"field.control\"\n                                           (focusin)=\"ocr($event, true, field.color)\" [required]=\"field.required\"\n                                           (focusout)=\"ocr($event, false); saveData($any($event.target).value, field['id'])\"\n                                           (dateChange)=\"saveData($any($event.targetElement).value, field['id'])\">\n                                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #picker></mat-datepicker>\n                                    <mat-error class=\"mt-1\" *ngIf=\"field.control.errors\">\n                                        {{ getErrorMessage(field.id, category['id']) }}\n                                    </mat-error>\n                                </mat-form-field>\n                            </ng-container>\n                            <ng-container *ngIf=\"field.type === 'select'\">\n                                <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"field.id == 'accounting_plan'\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }}\n                                    </mat-label>\n                                    <input [id]=\"field.id\" matInput type=\"text\" [required]=\"field.required\"\n                                           [formControl]=\"field.control\" [matAutocomplete]=\"accounting\">\n                                    <mat-hint *ngIf=\"accountingPlanEmpty\">\n                                        {{ 'VERIFIER.accounting_plan_empty' | translate }}\n                                    </mat-hint>\n                                    <mat-autocomplete #accounting=\"matAutocomplete\">\n                                        <mat-option *ngFor=\"let option of field.values | async\" [value]=\"option.compte_lib\" [id]=\"option.compte_num\">\n                                            <span [innerHTML]=\"option.compte_num + ' - ' + option['compte_lib'] | highlight: toHighlightAccounting\"></span>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                </mat-form-field>\n                                <mat-form-field class=\"right-0 w-full form-viewer\" *ngIf=\"field.id != 'accounting_plan'\">\n                                    <mat-label class=\"overflow-ellipsis overflow-hidden whitespace-nowrap w-8/12\">\n                                        {{ field.label | translate }}\n                                    </mat-label>\n                                    <mat-select [id]=\"field.id\" >\n                                        <mat-option *ngFor=\"let option of field.values\" [value]=\"option['compte_num']\">\n                                            {{ option['compte_num'] }} - {{ option['compte_lib'] }}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n        <div class=\"mt-4 mb-6 grid grid-cols-2 gap-4 h-12 text-gray-900\">\n            <button mat-button (click)=\"validateForm()\" type=\"submit\"\n                    class=\"border-solid border-green-400 border-opacity-70 border hover:bg-green-400 hover:bg-opacity-70 hover:text-white transition duration-300\">\n                {{ 'FORMS.validate' | translate }}\n            </button>\n            <button mat-button (click)=\"refuseForm()\" type=\"submit\"\n                    class=\"border-solid border-red-400 border hover:bg-red-400 hover:text-white transition duration-300\">\n                {{ 'FORMS.refuse' | translate }}\n            </button>\n        </div>\n    </div>\n</div>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\n\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './splitter-list.component.html',\n    styleUrls: ['./splitter-list.component.scss']\n})\nexport class SplitterListComponent implements OnInit {\n\n    constructor(\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit(): void {\n        this.localeStorageService.save('splitter_or_verifier', 'splitter');\n    }\n}\n","<p>list works!</p>\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../services/user.service\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../services/settings.service\";\nimport {LastUrlService} from \"../../../../services/last-url.service\";\nimport {PrivilegesService} from \"../../../../services/privileges.service\";\nimport {LocalStorageService} from \"../../../../services/local-storage.service\";\nimport {API_URL} from \"../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {ConfirmDialogComponent} from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {Sort} from \"@angular/material/sort\";\nimport {HistoryService} from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './customers-list.component.html',\n    styleUrls: ['./customers-list.component.scss']\n})\nexport class CustomersListComponent implements OnInit {\n    headers         : HttpHeaders = this.authService.headers;\n    loading         : boolean     = true;\n    columnsToDisplay: string[]    = ['id', 'name', 'company_number', 'vat_number', 'siret', 'siren', 'actions'];\n    customers       : any         = [];\n    pageSize        : number      = 10;\n    pageIndex       : number      = 0;\n    total           : number      = 0;\n    offset          : number      = 0;\n    search          : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/customers') || lastUrl === '/') {\n            if (this.localeStorageService.get('customersPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('customersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        }else\n            this.localeStorageService.remove('customersPageIndex');\n        this.loadCustomers();\n    }\n\n    loadCustomers() {\n        this.http.get(API_URL + '/ws/accounts/customers/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n                if (this.customers.length !== 0) {\n                    this.total = data.customers[0].total;\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchCustomer(event: any) {\n        this.search = event.target.value;\n        this.loadCustomers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('customersPageIndex', event.pageIndex);\n        this.loadCustomers();\n    }\n\n    deleteConfirmDialog(customerId: number, customer: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_customer', {\"customer\": customer}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteCustomer(customerId);\n                this.historyService.addHistory('accounts', 'delete_customer', this.translate.instant('HISTORY-DESC.delete-customer', {customer: customer}));\n            }\n        });\n    }\n\n    deleteCustomer(customerId: number) {\n        if (customerId !== undefined) {\n            this.http.delete(API_URL + '/ws/accounts/customers/delete/' + customerId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadCustomers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.customer_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.customers.slice();\n        if(!sort.active || sort.direction === '') {\n            this.customers = data;\n            return;\n        }\n\n        this.customers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'company_number': return this.compare(a.company_number, b.company_number, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"absolute left-4 top-0\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_customer' | translate }}</mat-label>\n                    <input matInput type=\"text\" (keyup)=\"searchCustomer($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center\">{{ this.serviceSettings.getTitle() }}</h3>\n            <hr class=\"border-green-400\">\n            <button routerLink=\"/accounts/customers/create\" class=\"relative float-right -top-12 right-4\">\n                <i class=\"fas fa-plus text-2xl ml-2\"></i>\n                <span class=\"ml-2 relative -top-1\">{{ 'ACCOUNTS.create_customer' | translate }}</span>\n            </button>\n        </div>\n        <mat-table matSort [dataSource]=\"customers\" (matSortChange)=\"sortData($event)\" class=\"w-full table relative -top-8\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.customer_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"company_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.company_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.company_number}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"vat_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.vat_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.vat_number}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siret\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siret' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.siret}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siren\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siren' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.siren}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/accounts/customers/update/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { AppMaterialModule } from '../app/app-material.module';\nimport { CustomSnackbarComponent, NotificationService } from './notifications/notifications.service';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { LastUrlService } from './last-url.service';\n\n@NgModule({\n    imports: [\n        AppMaterialModule,\n        CommonModule\n    ],\n    declarations: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent,\n    ],\n    exports: [],\n    entryComponents: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent\n    ],\n    providers: [NotificationService, LastUrlService]\n})\nexport class ServicesModule { }\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\n/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Title } from '@angular/platform-browser';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {catchError, filter, map, tap} from 'rxjs/operators';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { NotificationService } from \"../services/notifications/notifications.service\";\nimport {LocaleService} from \"../services/locale.service\";\nimport {LocalStorageService} from \"../services/local-storage.service\";\nimport {API_URL} from \"./env\";\nimport {of} from \"rxjs\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent implements OnInit {\n    title   : string = 'Open-Capture For Invoices';\n    image   : string = '';\n    loading : boolean = true;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        public location: Location,\n        private titleService: Title,\n        private notify:NotificationService,\n        private translate: TranslateService,\n        private localeService: LocaleService,\n        private activatedRoute: ActivatedRoute,\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    ngOnInit() {\n        const appTitle = this.titleService.getTitle();\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(() => {\n                let child = this.activatedRoute.firstChild;\n                let childImage = 'assets/imgs/logo_opencapture.png';\n                if (child) {\n                    while (child.firstChild) {\n                        child = child.firstChild;\n                    }\n                    if (this.router.url !== '/home' && !this.router.url.includes('settings')) {\n                        const splitterOrVerifier = this.localeStorageService.get('splitter_or_verifier');\n                        if (splitterOrVerifier !== undefined) {\n                            if (splitterOrVerifier === 'splitter') {\n                                childImage = 'assets/imgs/logo_splitter.png';\n                            }else {\n                                childImage = 'assets/imgs/logo_verifier.png';\n                            }\n                        }\n                    }\n\n                    if (child.snapshot.data['title']) {\n                        return [child.snapshot.data['title'], childImage];\n                    }\n                }\n                return [appTitle, childImage];\n            })\n        ).subscribe((data: any) => {\n            const ttl = data[0];\n            this.image = data[1];\n            if (this.localeService.currentLang === undefined) {\n                this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n                    tap((data: any) => {\n                        this.translate.use(data.lang);\n                        this.translate.get(ttl).subscribe((data:any)=> {\n                            this.titleService.setTitle(data + ' - ' + this.title);\n                        });\n                        this.loading = false;\n                    }),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }else{\n                this.translate.get(ttl).subscribe((data:any)=> {\n                    this.titleService.setTitle(data + ' - ' + this.title);\n                });\n                this.loading = false;\n            }\n        });\n    }\n}\n","<app-menu [image]=\"this.image\" *ngIf=\"this.location.path() !== '/login' && this.location.path() !== '/404' && loading == this.loading\"></app-menu>\n\n<router-outlet></router-outlet>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {LastUrlService} from \"../../../../../services/last-url.service\";\nimport {LocalStorageService} from \"../../../../../services/local-storage.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-output-list',\n    templateUrl: './outputs-list.component.html',\n    styleUrls: ['./outputs-list.component.scss']\n})\nexport class OutputsListComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    columnsToDisplay: string[]      = ['id', 'output_label', 'output_type_id', 'actions'];\n    loading         : boolean       = true;\n    outputs         : any           = [];\n    pageSize        : number        = 10;\n    pageIndex       : number        = 0;\n    total           : number        = 0;\n    offset          : number        = 0;\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) {}\n\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('outputs/') || lastUrl === '/') {\n            if (this.localeStorageService.get('outputsPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('outputsPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        } else\n            this.localeStorageService.remove('outputsPageIndex');\n        this.loadOutputs();\n    }\n\n    loadOutputs(): void {\n        this.http.get(API_URL + '/ws/outputs/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                if (data.outputs[0]) this.total = data.outputs[0].total;\n                this.outputs = data.outputs;\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('outputsPageIndex', event.pageIndex);\n        this.loadOutputs();\n    }\n\n    deleteConfirmDialog(outputId: number, output: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle: this.translate.instant('GLOBAL.confirm'),\n                confirmText: this.translate.instant('OUTPUT.confirm_delete', {\"output\": output}),\n                confirmButton: this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor: \"warn\",\n                cancelButton: this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.deleteOutput(outputId);\n                this.historyService.addHistory('verifier', 'delete_output', this.translate.instant('HISTORY-DESC.delete-output', {output: output}));\n            }\n        });\n    }\n\n    deleteOutput(outputId: number) {\n        if (outputId !== undefined) {\n            this.http.delete(API_URL + '/ws/outputs/delete/' + outputId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadOutputs();\n                    this.notify.success(this.translate.instant('OUTPUT.output_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.outputs.slice();\n        if (!sort.active || sort.direction === '') {\n            this.outputs = data;\n            return;\n        }\n\n        this.outputs = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <mat-table matSort [dataSource]=\"outputs\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_type_id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.output_type' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.output_type_id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"output_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.label' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.output_label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.output_label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/settings/verifier/outputs/update/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {FormControl} from \"@angular/forms\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-create-input',\n    templateUrl: './create-input.component.html',\n    styleUrls: ['./create-input.component.scss']\n})\nexport class CreateInputComponent implements OnInit {\n    headers         : HttpHeaders   = this.authService.headers;\n    loading         : boolean       = true;\n    inputId         : any;\n    input           : any;\n    inputForm       : any[]         = [\n        {\n            id: 'input_id',\n            label: this.translate.instant('HEADER.label_short'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"default_input\",\n            required: true,\n        },\n        {\n            id: 'input_label',\n            label: this.translate.instant('HEADER.label'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'input_folder',\n            label: this.translate.instant('INPUT.input_folder'),\n            type: 'text',\n            control: new FormControl(),\n            placeholder: \"/var/share/sortant\",\n            required: true,\n        },\n        {\n            id: 'default_form_id',\n            label: this.translate.instant('INPUT.default_form_id'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'customer_id',\n            label: this.translate.instant('INPUT.associated_customer'),\n            type: 'select',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'purchase_or_sale',\n            label: this.translate.instant('INPUT.purchase_or_sale'),\n            type: 'select',\n            control: new FormControl(),\n            values: [\n                {\n                    'id': 'purchase',\n                    'label': 'UPLOAD.purchase_invoice'\n                },\n                {\n                    'id': 'sale',\n                    'label': 'UPLOAD.sale_invoice'\n                }\n            ],\n            required: true,\n        },\n        {\n            id: 'override_supplier_form',\n            label: this.translate.instant('INPUT.override_supplier_form'),\n            type: 'boolean',\n            control: new FormControl()\n        },\n    ];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        public userService: UserService,\n        private authService: AuthService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService,\n    ) {}\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.http.get(API_URL + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((customers: any) => {\n                this.inputForm.forEach((element: any) => {\n                    if (element.id === 'customer_id') {\n                        element.values = customers.customers;\n                        if (customers.customers.length === 1) {\n                            element.control.setValue(customers.customers[0].id);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.http.get(API_URL + '/ws/forms/list', {headers: this.authService.headers}).pipe(\n            tap((forms: any) => {\n                this.inputForm.forEach((element: any) => {\n                    if (element.id === 'default_form_id') {\n                        element.values = forms.forms;\n                        if (forms.forms.length === 1) {\n                            element.control.setValue(forms.forms[0].id);\n                        }\n                    }\n                });\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n        this.inputForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const input : any = {};\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.post(API_URL + '/ws/inputs/create', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.createScriptAndIncron();\n                    this.notify.success(this.translate.instant('INPUT.created'));\n                    this.historyService.addHistory('verifier', 'create_input', this.translate.instant('HISTORY-DESC.create-input', {input: input['input_label']}));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    createScriptAndIncron() {\n        if (this.isValidForm()) {\n            const input: any = {};\n            this.inputForm.forEach(element => {\n                input[element.id] = element.control.value;\n            });\n\n            this.http.post(API_URL + '/ws/inputs/createScriptAndIncron', {'args': input}, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.router.navigate(['/settings/verifier/inputs']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.inputForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n            <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\">\n                <h3>{{ this.serviceSettings.getTitle() }}</h3>\n                <hr class=\"border-green-400\">\n            </div>\n        </div>\n        <form>\n            <div class=\"grid grid-cols-2 gap-4 w-auto m-5 text-center\">\n                <ng-container *ngFor=\"let field of inputForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'text'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [readonly]=\"field.disabled\"\n                               [type]=\"field.type\" placeholder=\"{{ field.placeholder | translate }}\"\n                               [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">\n                                <span *ngIf=\"option['label']\">\n                                    {{ option['label'] | translate}}\n                                </span>\n                                <span *ngIf=\"option['name']\">\n                                    {{ option['name'] | translate}}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-slide-toggle *ngIf=\"field.type == 'boolean'\" [formControl]=\"field.control\" class=\"relative top-4 mb-10 col-span-2\">\n                        <span class=\"justify-center\">{{ field.label | translate }}</span>\n                    </mat-slide-toggle>\n                </ng-container>\n            </div>\n        </form>\n        <div class=\"flex justify-center items-center\">\n            <button (click)=\"onSubmit()\"  mat-button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\">\n                <span>{{ \"INPUT.create\" | translate }}</span>\n            </button>\n        </div>\n        <div class=\"text-gray-400 text-sm mt-4 flex justify-center items-center\">\n            <span class=\"w-1/3\" [innerHTML]=\"'INPUT.create_hint' | translate\"></span>\n        </div>\n    </mat-sidenav-content>\n</mat-sidenav-container>","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-10\">        <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">            <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"                 height=\"300\" xml:space=\"preserve\">                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">                    <stop offset=\"0%\" stop-color=\"#76B442\">                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"                                 repeatCount=\"indefinite\"></animate>                    </stop>                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"                                 repeatCount=\"indefinite\"></animate>                    </stop>                </linearGradient>                <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>        </svg>    </div></div>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {Router} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n    selector: 'app-not-found',\n    templateUrl: './not-found.component.html',\n    styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n    constructor(\n        private notify: NotificationService,\n        private router: Router,\n        private translate: TranslateService,\n    ) { }\n\n    ngOnInit(): void {\n        this.translate.get('ERROR.404').subscribe((translated: string) => {\n            this.notify.error(translated);\n            this.router.navigate(['/login']).then();\n        });\n    }\n\n}\n","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-50\">\n    <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"\n             height=\"300\" xml:space=\"preserve\">\n                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">\n                    <stop offset=\"0%\" stop-color=\"#76B442\">\n                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n\n                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">\n                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n                </linearGradient>\n            <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7\n                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1\n                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4\n                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7\n                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>\n        </svg>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot} from \"@angular/router\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRequiredService implements CanActivate{\n\n    constructor(\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (!this.authService.getToken()) {\n            this.translate.get('AUTH.not_connected').subscribe((translated: string) => {\n                this.authService.setCachedUrl(state.url.replace(/^\\//g, ''));\n                this.notify.error(translated);\n                this.authService.logout();\n            });\n            return false;\n        }\n        return true;\n    }\n}\n","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { API_URL } from \"../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { NotificationService } from \"../../../services/notifications/notifications.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { AuthService } from \"../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { marker } from \"@biesbjerg/ngx-translate-extract-marker\";\nimport { LastUrlService } from \"../../../services/last-url.service\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { FlatTreeControl } from \"@angular/cdk/tree\";\nimport { MatTreeFlatDataSource, MatTreeFlattener } from \"@angular/material/tree\";\nimport { UserService } from \"../../../services/user.service\";\nimport {ConfirmDialogComponent} from \"../../../services/confirm-dialog/confirm-dialog.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\nimport {ConfigService} from \"../../../services/config.service\";\ndeclare var $: any;\n\ninterface accountsNode {\n    name: string;\n    id: number;\n    parent_id: any;\n    supplier_id: any;\n    purchase_or_sale: any;\n    number: number;\n    display: boolean;\n    children: any;\n}\n\ninterface flatNode {\n    expandable: boolean;\n    name: string;\n    id: number;\n    parent_id: any;\n    supplier_id: any;\n    purchase_or_sale: any;\n    display: boolean;\n    number: number;\n    level: number;\n    children: any;\n}\n\n@Component({\n    selector: 'app-verifier-list',\n    templateUrl: './verifier-list.component.html',\n    styleUrls: ['./verifier-list.component.scss'],\n    providers: [\n        { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'fill' } },\n    ]\n})\nexport class VerifierListComponent implements OnInit {\n    loading         : boolean           = true;\n    status          : any[]             = [];\n    config          : any;\n    currentStatus   : string            = 'NEW';\n    currentTime     : string            = 'today';\n    batchList       : any[]             = [\n        {\n            'id': 'today',\n            'label': marker('BATCH.today'),\n        },\n        {\n            'id': 'yesterday',\n            'label': marker('BATCH.yesterday'),\n        },\n        {\n            'id': 'older',\n            'label': marker('BATCH.older'),\n        }\n    ];\n    pageSize        : number            = 16;\n    pageIndex       : number            = 0;\n    pageSizeOptions : any []            = [4, 8, 16, 24, 48];\n    total           : number            = 0;\n    offset          : number            = 0;\n    selectedTab     : number            = 0;\n    invoices        : any []            = [];\n    allowedCustomers: any []            = [];\n    allowedSuppliers: any []            = [];\n    purchaseOrSale  : string            = '';\n    search          : string            = '';\n    TREE_DATA       : accountsNode[]    = [];\n    expanded        : boolean           = false;\n    invoiceToDeleteSelected : boolean   = false;\n    totalChecked    : number            = 0;\n\n    private _transformer = (node: accountsNode, level: number) => {\n        return {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            supplier_id: node.supplier_id,\n            id: node.id,\n            parent_id: node.parent_id,\n            purchase_or_sale: node.purchase_or_sale,\n            display: node.display,\n            number: node.number,\n            level: level,\n            children: node.children\n        };\n    }\n\n    treeControl = new FlatTreeControl<flatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    constructor(\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private sanitizer: DomSanitizer,\n        private authService: AuthService,\n        private userService: UserService,\n        public translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private routerExtService: LastUrlService,\n        private localeStorageService: LocalStorageService\n    ) {}\n\n    hasChild = (_: number, node: flatNode) => node.expandable;\n    isLevelOne = (_: number, node: flatNode) => node.level === 1;\n    isLevelTwo = (_: number, node: flatNode) => node.level === 2;\n    isNotLevelOne = (_: number, node: flatNode) => node.level !== 1;\n\n    async ngOnInit() {\n        marker('VERIFIER.nb_pages'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.expand_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.collapse_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.select_all'); // Needed to get the translation in the JSON file\n        marker('VERIFIER.unselect_all'); // Needed to get the translation in the JSON file\n        this.config = this.configService.getConfig();\n        this.localeStorageService.save('splitter_or_verifier', 'verifier');\n        this.removeLockByUserId(this.userService.user.username);\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('verifier/') && !lastUrl.includes('settings') || lastUrl === '/' || lastUrl === '/upload') {\n            if (this.localeStorageService.get('invoicesPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('invoicesPageIndex') as string);\n            if (this.localeStorageService.get('invoicesTimeIndex')) {\n                this.selectedTab = parseInt(this.localeStorageService.get('invoicesTimeIndex') as string);\n                this.currentTime = this.batchList[this.selectedTab].id;\n            }\n            this.offset = this.pageSize * (this.pageIndex);\n        } else {\n            this.localeStorageService.remove('invoicesPageIndex');\n            this.localeStorageService.remove('invoicesTimeIndex');\n        }\n\n        this.http.get(API_URL + '/ws/status/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.status = data.status;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n        this.loadCustomers();\n    }\n\n    removeLockByUserId(userId: any) {\n        this.http.put(API_URL + '/ws/verifier/invoices/removeLockByUserId/' + userId, {}, {headers: this.authService.headers}).pipe(\n            tap(() => {}),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadCustomers() {\n        this.TREE_DATA = [];\n        this.http.get(API_URL + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const customers = data.customers;\n                this.TREE_DATA.push({\n                    name: this.translate.instant('ACCOUNTS.customer_not_specified'),\n                    id: 0,\n                    parent_id: '',\n                    supplier_id: '',\n                    purchase_or_sale: '',\n                    display: true,\n                    number: 0,\n                    children: []\n                });\n                this.allowedCustomers.push(0); // 0 is used if for some reasons no customer was recover by OC process\n                customers.forEach((customer: any) => {\n                    this.allowedCustomers.push(customer.id);\n                    this.TREE_DATA.push({\n                        name: customer.name,\n                        id: customer.id,\n                        parent_id: '',\n                        supplier_id: '',\n                        purchase_or_sale: '',\n                        display: true,\n                        number: 0,\n                        children: []\n                    });\n                });\n                this.loadInvoices();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    loadInvoices() {\n        this.invoiceToDeleteSelected = false;\n        this.totalChecked = 0;\n        this.loading = true;\n        this.invoices = [];\n        this.http.post(API_URL + '/ws/verifier/invoices/list',\n            {\n                'allowedCustomers': this.allowedCustomers, 'status': this.currentStatus, 'allowedSuppliers': this.allowedSuppliers,\n                'time': this.currentTime, 'limit': this.pageSize, 'offset': this.offset, 'search': this.search,\n                'purchaseOrSale': this.purchaseOrSale\n            },\n            {headers: this.authService.headers}\n        ).pipe(\n            tap((data: any) => {\n                if (data) {\n                    this.total = data.total;\n                    this.invoices = data.invoices;\n                    this.invoices.forEach((invoice: any) => {\n                        if (!invoice.thumb.includes('data:image/jpeg;base64'))\n                            invoice.thumb = this.sanitizer.bypassSecurityTrustUrl('data:image/jpeg;base64, ' + invoice.thumb);\n                    });\n                }\n\n                /*\n                * Starting from here, we fill the customers tree\n                */\n                // let customersToKeep: any = [];\n                const customersPurchaseToKeep : any = [];\n                const customersSaleToKeep : any = [];\n                this.allowedCustomers.forEach((customer: any) => {\n                    this.invoices.forEach((invoice:any) => {\n                        if (invoice.purchase_or_sale === 'purchase' && !customersPurchaseToKeep.includes(customer))\n                            customersPurchaseToKeep.push(customer);\n                        if (invoice.purchase_or_sale === 'sale' && !customersSaleToKeep.includes(customer))\n                            customersSaleToKeep.push(customer);\n                    });\n                });\n\n                /*\n                * RESET the TREE DATA before re populate it\n                */\n                this.TREE_DATA.forEach((data: any, index: number) => {\n                    this.TREE_DATA[index].display = true;\n                    this.TREE_DATA[index].number = 0;\n                    this.TREE_DATA[index].children = [];\n                });\n\n                this.TREE_DATA.forEach((data: any, index: number) => {\n                    customersSaleToKeep.forEach((customer1: any) => {\n                        if (data.id === customer1) {\n                            let childExists = false;\n                            this.TREE_DATA[index].children.forEach((child: any) => {\n                                if (child.id === 0)\n                                    childExists = true;\n                            });\n                            if (!childExists) {\n                                this.TREE_DATA[index].children.push(\n                                    {name: this.translate.instant('UPLOAD.sale_invoice'), id: 0, display: true, number: 0, children: []},\n                                );\n                                this.createChildren('sale', 0, index);\n                            }\n                        }\n                    });\n                    customersPurchaseToKeep.forEach((customer2: any) => {\n                        if (data.id === customer2) {\n                            if (this.TREE_DATA[index]) {\n                                let childExists = false;\n                                this.TREE_DATA[index].children.forEach((child: any) => {\n                                    if (child.id === 1)\n                                        childExists = true;\n                                });\n                                if (!childExists) {\n                                    this.TREE_DATA[index].children.push(\n                                        {name: this.translate.instant('UPLOAD.purchase_invoice'), id: 1, display: true, number: 0, children: []},\n                                    );\n                                    this.createChildren('purchase', 1, index);\n                                }\n                            }\n                        }\n                    });\n                });\n                this.dataSource.data = this.TREE_DATA;\n            }),\n            finalize(() => {this.loading = false;}),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    fillChildren(parentId: any , parent: any, childName: any, supplierName: any, supplierId: any, id: any, purchaseOrSale: any) {\n        let childNameExists = false;\n        parent.forEach((child: any) => {\n            if (child.name === childName) {\n                childNameExists = true;\n                child.number = child.number + 1;\n            }\n        });\n\n        if (!childNameExists) {\n            parent.push({\n                name: supplierName,\n                supplier_id: supplierId,\n                id: id,\n                parent_id: parentId,\n                purchase_or_sale: purchaseOrSale,\n                number: 1,\n                display: true\n            });\n        }\n    }\n\n    createChildren(purchaseOrSale: any, id: any, index: any) {\n        this.TREE_DATA[index].children.forEach((child: any, childIndex: any) => {\n            if (child.id === id) {\n                this.invoices.forEach((invoice: any) => {\n                    if (this.TREE_DATA[index].id === invoice.customer_id && invoice.purchase_or_sale === purchaseOrSale) {\n                        if(invoice.supplier_id) {\n                            this.fillChildren(this.TREE_DATA[index].id, this.TREE_DATA[index].children[childIndex].children, invoice.supplier_name, invoice.supplier_name, invoice.supplier_id, invoice.invoice_id, purchaseOrSale);\n                        }else {\n                            this.fillChildren(this.TREE_DATA[index].id, this.TREE_DATA[index].children[childIndex].children, invoice.supplier_name, this.translate.instant('ACCOUNTS.supplier_unknow'), invoice.supplier_id, invoice.invoice_id, purchaseOrSale);\n                        }\n                        this.TREE_DATA[index].children[childIndex].number = this.TREE_DATA[index].children[childIndex].number + 1;\n                        this.TREE_DATA[index].number = this.TREE_DATA[index].number + 1;\n                    }\n                });\n            }\n        });\n    }\n\n    loadInvoicePerCustomer(node: any) {\n        const parentId = node.parent_id;\n        const supplierId = node.supplier_id;\n        const purchaseOrSale = node.purchase_or_sale;\n        this.TREE_DATA.forEach((element: any) => {\n            if (element.id === parentId) {\n                const customerId = element.id;\n                this.allowedCustomers = [customerId];\n                this.allowedSuppliers = [supplierId];\n                this.purchaseOrSale = purchaseOrSale;\n                this.resetPaginator();\n                this.loadInvoices();\n            }\n        });\n    }\n\n    resetInvoices() {\n        this.loading = true;\n        this.allowedCustomers = [];\n        this.allowedSuppliers = [];\n        this.purchaseOrSale = '';\n        this.search = '';\n        this.resetPaginator();\n        this.loadCustomers();\n    }\n\n    selectOrUnselectAllInvoices(event: any) {\n        const label = event.srcElement.textContent;\n        this.invoiceToDeleteSelected = !this.invoiceToDeleteSelected;\n        const checkboxList = $(\".checkBox_list\");\n        checkboxList.each((cpt: any) => {\n            checkboxList[cpt].checked = label === this.translate.instant('VERIFIER.select_all');\n        });\n        this.totalChecked = $('input.checkBox_list:checked').length;\n    }\n\n    deleteAllInvoices() {\n        this.loading = true;\n        const checkboxList = $(\".checkBox_list\");\n        checkboxList.each((cpt: any) => {\n            const invoiceId = checkboxList[cpt].id.split('_')[0];\n            this.deleteInvoice(invoiceId, true);\n        });\n        this.notify.success('VERIFIER.all_invoices_deleted');\n        this.loadCustomers();\n    }\n\n    deleteInvoice(invoiceId: number, batchDelete = false) {\n        this.http.delete(API_URL + '/ws/verifier/invoices/delete/' + invoiceId, {headers: this.authService.headers}).pipe(\n            tap(() => {\n                if (!batchDelete) this.loadCustomers();\n                this.notify.success(this.translate.instant('VERIFIER.invoices_deleted'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    checkCheckedInvoices () {\n        this.totalChecked = $('input.checkBox_list:checked').length;\n        this.invoiceToDeleteSelected = this.totalChecked !== 0;\n    }\n\n    deleteConfirmDialog(invoiceId: number) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_invoice'),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteInvoice(invoiceId);\n            }\n        });\n    }\n\n    displayInvoiceLocked(lockedBy: any) {\n        this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('VERIFIER.invoice_locked'),\n                confirmText         : this.translate.instant('VERIFIER.invoice_locked_by', {'locked_by': lockedBy}),\n                confirmButton       : this.translate.instant('GLOBAL.confirm'),\n                confirmButtonColor  : \"warn\"\n            },\n            width: \"600px\",\n        });\n    }\n\n    deleteAllConfirmDialog() {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('VERIFIER.confirm_delete_all_invoices'),\n                confirmButton       : this.translate.instant('VERIFIER.delete_all'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteAllInvoices();\n            }\n        });\n    }\n\n    changeStatus(event: any) {\n        this.currentStatus = event.value;\n        this.resetPaginator();\n        this.loadInvoices();\n    }\n\n    onTabChange(event: any) {\n        this.search = '';\n        this.selectedTab = event.index;\n        this.localeStorageService.save('invoicesTimeIndex', this.selectedTab);\n        this.currentTime = this.batchList[this.selectedTab].id;\n        this.loadInvoices();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('invoicesPageIndex', event.pageIndex);\n        this.loadInvoices();\n    }\n\n    searchInvoice(event: any) {\n        this.search = event.target.value;\n        this.loadInvoices();\n    }\n\n    resetPaginator() {\n        this.total = 0;\n        this.offset = 0;\n        this.pageIndex = 0;\n        this.localeStorageService.save('invoicesPageIndex', this.pageIndex);\n    }\n\n    expandAll() {\n        this.expanded = !this.expanded;\n        /*\n        * mat-tree-node.child are clicked twice to be sure they will be close at the second click\n         */\n        $('mat-tree-node.child').click();\n        $('mat-tree-node.parent').click();\n        $('mat-tree-node.child').click();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"text-center text-gray-900 m-0 h-16\" style=\"padding-top: 1.2rem\">\n            <i class=\"fas fa-sync-alt mr-4 cursor-pointer\" (click)=\"resetInvoices()\"\n               [matTooltip]=\"'VERIFIER.reset_invoice_list' | translate\"></i>\n            {{ \"VERIFIER.suppliers_by_customer\" | translate }}\n            <i [class.fa-compress-arrows-alt]=\"this.expanded\" [class.fa-expand-arrows-alt]=\"!this.expanded\" class=\"fas ml-4 cursor-pointer\" (click)=\"expandAll()\"\n               [matTooltip]=\"!this.expanded ? this.translate.instant('VERIFIER.expand_all') : this.translate.instant('VERIFIER.collapse_all') \"></i>\n        </h3>\n        <mat-divider></mat-divider>\n        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n            <mat-tree-node style=\"min-height: 24px\" class=\"pl-12 cursor-pointer hover:bg-black hover:bg-opacity-20\"\n                           *matTreeNodeDef=\"let node; when:isLevelTwo\" (click)=\"loadInvoicePerCustomer(node)\">\n                <button mat-icon-button disabled>\n                    <i class=\"text-green-400 ml-4 fas fa-user pb-0.5\"></i>\n                </button>\n                <span class=\"pl-2 font-normal select-none\">{{node.name}}</span>\n                <span class=\"float-right ml-auto select-none mr-20 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{node.number}}\n                </span>\n            </mat-tree-node>\n            <mat-tree-node style=\"min-height: 24px\" class=\"parent cursor-pointer hover:bg-black hover:bg-opacity-10\"\n                           *matTreeNodeDef=\"let node;when: hasChild; when:isNotLevelOne\" matTreeNodeToggle>\n                <button mat-icon-button [class.hidden]=\"node.number == 0 && node.id == 0\">\n                    <mat-icon class=\"mat-icon-rtl-mirror text-gray-900\">\n                        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n                    </mat-icon>\n                </button>\n                <span class=\"select-none\" [class.pointer-events-none]=\"node.number == 0\"\n                      [class.hidden]=\"node.number == 0 && node.id == 0\">\n                    {{node.name}}\n                </span>\n                <span *ngIf=\"!treeControl.isExpanded(node)\" [class.hidden]=\"node.number == 0 && node.id == 0\"\n                      class=\"float-right ml-auto select-none mr-4 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{node.number}}\n                </span>\n            </mat-tree-node>\n            <mat-tree-node [class.hidden]=\"node.number == 0\" style=\"min-height: 24px\" class=\"child pl-6 cursor-pointer hover:bg-black hover:bg-opacity-10\" *matTreeNodeDef=\"let node;when: isLevelOne\" matTreeNodeToggle>\n                <button mat-icon-button>\n                    <i [class.fa-folder-open]=\"treeControl.isExpanded(node)\" class=\"text-gray-600 ml-4 fas fa-folder pb-0.5\"></i>\n                </button>\n                <span class=\"pl-2 font-normal select-none\">{{node.name}}</span>\n                <span *ngIf=\"!treeControl.isExpanded(node)\" class=\"float-right ml-auto select-none mr-12 bottom-1 bg-green-400 rounded-full px-1.5 py-0.5 text-center text-xs text-white\">\n                    {{node.number}}\n                </span>\n            </mat-tree-node>\n        </mat-tree>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white overflow-hidden\">\n        <button mat-icon-button (click)=\"sidenav.toggle();\"\n                class=\"absolute left-2 top-2\" style=\"z-index: 999\">\n            <i [class.transform]=\"!sidenav.opened\" [class.rotate-180]=\"!sidenav.opened\" class=\"fas fa-stream text-xl text-gray-900\"></i>\n        </button>\n        <mat-tab-group [selectedIndex]=\"selectedTab\" (selectedTabChange)=\"onTabChange($event)\" class=\"batches overflow-auto\" animationDuration=\"0ms\">\n            <mat-tab *ngFor=\"let batch of batchList\" [label]=\"this.translate.instant(batch.label)\" [id]=\"batch.id\">\n                <div class=\"flex flex-col\">\n                    <div class=\"verifier-list grid grid-cols-3 grid-flow-row gap-0 mt-4 z-30\">\n                        <mat-form-field class=\"left-4 w-1/2\" appearance=\"outline\">\n                            <mat-label>{{ 'VERIFIER.search' | translate }}</mat-label>\n                            <input matInput type=\"text\" [(ngModel)]=\"search\" (keyup)=\"searchInvoice($event)\">\n                        </mat-form-field>\n                        <mat-form-field class=\"w-1/2 m-auto\" appearance=\"outline\">\n                            <mat-label>{{ 'STATUS.list' | translate }}</mat-label>\n                            <mat-select [(value)]=\"currentStatus\" (selectionChange)=\"changeStatus($event)\">\n                                <mat-option *ngFor=\"let option of status\" [value]=\"option['id']\">\n                                    {{ option['label'] }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <span [class.hidden]=\"this.loading\">\n                            <mat-paginator [length]=\"this.total\" [showFirstLastButtons]=\"true\" [pageSize]=\"pageSize\" [pageIndex]=\"pageIndex\"\n                                           [pageSizeOptions]=\"this.pageSizeOptions\" (page)=\"onPageChange($event)\"></mat-paginator>\n                        </span>\n                    </div>\n                    <div class=\"z-40 -mt-2 mb-2 select-none\" style=\"margin-left: 1.2rem\" *ngIf=\"invoices.length > 1\">\n                        <span class=\"cursor-pointer\" (click)=\"selectOrUnselectAllInvoices($event)\"\n                              [innerHTML]=\"invoiceToDeleteSelected ? this.translate.instant('VERIFIER.unselect_all') : this.translate.instant('VERIFIER.select_all')\">\n                        </span>\n                        <span [class.hidden]=\"this.totalChecked == 0\"> ({{ this.totalChecked}})</span>\n                        <span [class.hidden]=\"!invoiceToDeleteSelected\" (click)=\"$event.stopPropagation();deleteAllConfirmDialog()\">\n                            <i class=\"fas fa-trash ml-2 text-red-500 cursor-pointer\" matTooltip=\"{{ 'VERIFIER.delete_all' | translate }}\"></i>\n                        </span>\n                    </div>\n                    <hr class=\"w-1/2 m-auto mb-4 border-green-400 relative z-30\">\n                    <div *ngIf=\"loading\">\n                        <app-loader></app-loader>\n                    </div>\n                    <div class=\"content mx-10 mt-3\" *ngIf=\"!loading\">\n                        <div class=\"list grid grid-cols-4 grid-flow-row gap-12\">\n                            <mat-card *ngFor=\"let invoice of this.invoices;\" class=\"cursor-pointer p-0\">\n                                <input id=\"{{ invoice.invoice_id }}_checkbox\" class=\"checkBox_list absolute z-40 ml-2 mt-2 cursor-pointer\" type=\"checkbox\" (click)=\"checkCheckedInvoices()\"/>\n                                <img [routerLink]=\"invoice.locked ? '/verifier/list' : '/verifier/viewer/'+ invoice.invoice_id\"\n                                     mat-card-image class=\"m-auto p-4\" [src]=\"invoice.thumb\"\n                                     (click)=\"invoice.locked ? displayInvoiceLocked(invoice.locked_by) : ''\">\n                                <mat-card-header class=\"leading-6 relative z-10 bg-white pt-4 pl-4 pr-4\"\n                                                 [routerLink]=\"invoice.locked ? '/verifier/list' : '/verifier/viewer/'+ invoice.invoice_id\"\n                                                 (click)=\"invoice.locked ? displayInvoiceLocked(invoice.locked_by) : ''\">\n                                    <mat-card-title>\n                                        <span>\n                                            <i [matTooltip]=\"'VERIFIER.invoice_locked_by' | translate\" class=\"fas fa-lock text-base mb-2 relative\" style=\"bottom: 0.1rem\" *ngIf=\"invoice.locked\"></i>\n                                            {{ invoice.supplier_name ? invoice.supplier_name : 'ACCOUNTS.supplier_unknow' | translate }}\n                                        </span>\n                                        <span class=\"absolute right-6 text-green-400 text-base badge badge-secondary badge-pill\"\n                                              [matTooltip]=\"this.translate.instant('VERIFIER.nb_pages') + ' : ' + invoice.nb_pages\">\n                                            {{ invoice.nb_pages }}<i class=\"far fa-file-alt ml-1\"></i>\n                                        </span>\n                                    </mat-card-title>\n                                    <mat-card-subtitle class=\"mt-2 -mb-1 break-all\">\n                                        <b>{{ 'FACTURATION.invoice_number' | translate }}</b> : {{ invoice.datas.invoice_number }}<br>\n                                        <b>{{ 'FACTURATION.invoice_date' | translate }}</b> : {{ invoice.datas.invoice_date }}<br>\n                                        <b>{{ 'VERIFIER.register_date' | translate }}</b> : {{ invoice.date }}<br>\n                                        <b>{{ 'VERIFIER.original_file' | translate }}</b> : {{ invoice.original_filename }}\n                                    </mat-card-subtitle>\n                                </mat-card-header>\n                                <mat-card-actions class=\"pb-4 pl-4\">\n                                    <i class=\"fas fa-trash cursor-pointer text-red-500 \" (click)=\"$event.stopPropagation();deleteConfirmDialog(invoice.invoice_id)\">\n                                        <span class=\"font-medium mat-typography\">{{ 'VERIFIER.delete_invoice' | translate }}</span>\n                                    </i>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { SettingsService } from \"../../../../services/settings.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport { PrivilegesService } from \"../../../../services/privileges.service\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { Sort } from \"@angular/material/sort\";\nimport { API_URL } from \"../../../env\";\nimport { catchError, finalize, tap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport {HistoryService} from \"../../../../services/history.service\";\n\n@Component({\n    selector: 'suppliers-list',\n    templateUrl: './suppliers-list.component.html',\n    styleUrls: ['./suppliers-list.component.scss']\n})\nexport class SuppliersListComponent implements OnInit {\n    columnsToDisplay : string[]    = ['id', 'name', 'vat_number', 'siret', 'siren','form_label', 'actions'];\n    deletePositionSrc: string      = 'assets/imgs/map-marker-alt-solid-del.svg';\n    headers          : HttpHeaders = this.authService.headers;\n    loading          : boolean     = true;\n    suppliers        : any         = [];\n    pageSize         : number      = 10;\n    pageIndex        : number      = 0;\n    total            : number      = 0;\n    offset           : number      = 0;\n    search           : string      = '';\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        private routerExtService: LastUrlService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        const lastUrl = this.routerExtService.getPreviousUrl();\n        if (lastUrl.includes('accounts/suppliers') || lastUrl === '/') {\n            if (this.localeStorageService.get('suppliersPageIndex'))\n                this.pageIndex = parseInt(this.localeStorageService.get('suppliersPageIndex') as string);\n            this.offset = this.pageSize * (this.pageIndex);\n        }else\n            this.localeStorageService.remove('suppliersPageIndex');\n        this.loadSuppliers();\n    }\n\n    loadSuppliers() {\n        this.http.get(API_URL + '/ws/accounts/suppliers/list?limit=' + this.pageSize + '&offset=' + this.offset + \"&search=\" + this.search, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.suppliers = data.suppliers;\n                if (this.suppliers.length !== 0) {\n                    this.total = data.suppliers[0].total;\n                }\n                this.http.get(API_URL + '/ws/forms/list', {headers: this.authService.headers}).pipe(\n                    tap((data: any) => {\n                        for (const cpt in this.suppliers) {\n                            for (const form of data.forms) {\n                                if (form.id === this.suppliers[cpt].form_id) {\n                                    this.suppliers[cpt].form_label = form.label;\n                                }\n                            }\n                        }\n                    }),\n                    finalize(() => this.loading = false),\n                    catchError((err: any) => {\n                        console.debug(err);\n                        this.notify.handleErrors(err);\n                        return of(false);\n                    })\n                ).subscribe();\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    searchSupplier(event: any) {\n        this.search = event.target.value;\n        this.loadSuppliers();\n    }\n\n    onPageChange(event: any) {\n        this.pageSize = event.pageSize;\n        this.offset = this.pageSize * (event.pageIndex);\n        this.localeStorageService.save('suppliersPageIndex', event.pageIndex);\n        this.loadSuppliers();\n    }\n\n    deleteConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteSupplier(supplierId);\n                this.historyService.addHistory('accounts', 'delete_supplier', this.translate.instant('HISTORY-DESC.delete-supplier', {supplier: supplier}));\n            }\n        });\n    }\n\n    deletePositionsConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_delete_supplier_positions', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.deleteSupplierPositions(supplierId);\n                this.historyService.addHistory('accounts', 'delete_supplier_positions', this.translate.instant('HISTORY-DESC.delete-supplier-positions', {supplier: supplier}));\n            }\n        });\n    }\n\n    skipAutoValidateConfirmDialog(supplierId: number, supplier: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data: {\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ACCOUNTS.confirm_skip_auto_validate', {\"supplier\": supplier}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result) {\n                this.skipAutoValidate(supplierId);\n                this.historyService.addHistory('accounts', 'skip_auto_validate', this.translate.instant('HISTORY-DESC.skip-auto-validate', {supplier: supplier}));\n            }\n        });\n    }\n\n    deleteSupplier(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(API_URL + '/ws/accounts/suppliers/delete/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.loadSuppliers();\n                    this.notify.success(this.translate.instant('ACCOUNTS.supplier_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    skipAutoValidate(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(API_URL + '/ws/accounts/suppliers/skipAutoValidate/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.skip_validated_success'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    deleteSupplierPositions(supplierId: number) {\n        if (supplierId !== undefined) {\n            this.http.delete(API_URL + '/ws/accounts/suppliers/deletePositions/' + supplierId, {headers: this.authService.headers}).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('ACCOUNTS.positions_deleted'));\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    sortData(sort: Sort) {\n        const data = this.suppliers.slice();\n        if(!sort.active || sort.direction === '') {\n            this.suppliers = data;\n            return;\n        }\n\n        this.suppliers = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'name': return this.compare(a.name, b.name, isAsc);\n                case 'vat_number': return this.compare(a.vat_number, b.vat_number, isAsc);\n                case 'siret': return this.compare(a.siret, b.siret, isAsc);\n                case 'siren': return this.compare(a.siren, b.siren, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n\n    getReferenceFile() {\n        this.http.get(API_URL + '/ws/accounts/supplier/getReferenceFile', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                const mimeType = data.mimetype;\n                const referenceFile = 'data:' + mimeType + ';base64, ' + data.file;\n                const link = document.createElement(\"a\");\n                link.href = referenceFile;\n                link.download = data.filename;\n                link.click();\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <div class=\"absolute left-4 top-0\">\n                <mat-form-field>\n                    <mat-label>{{ 'ACCOUNTS.search_supplier' | translate }}</mat-label>\n                    <input matInput type=\"text\" (keyup)=\"searchSupplier($event)\">\n                </mat-form-field>\n            </div>\n            <h3 class=\"text-center\">{{ this.serviceSettings.getTitle() }}</h3>\n            <hr class=\"border-green-400\">\n            <button routerLink=\"/accounts/suppliers/create\" class=\"relative float-right -top-12 right-4 ml-4\">\n                <i class=\"fas fa-plus text-2xl ml-2\"></i>\n                <span class=\"ml-2 relative -top-1\">{{ 'ACCOUNTS.create_supplier' | translate }}</span>\n            </button>\n            <button [class.hidden]=\"!this.privilegesService.hasPrivilege('export_suppliers')\" (click)=\"getReferenceFile()\" class=\"relative float-right -top-12 right-4\">\n                <i class=\"fas fa-file-export text-2xl ml-2\"></i>\n                <span class=\"ml-2 relative -top-1\">{{ 'ACCOUNTS.export_suppliers' | translate }}</span>\n            </button>\n        </div>\n        <mat-table matSort [dataSource]=\"suppliers\" (matSortChange)=\"sortData($event)\" class=\"w-full table relative -top-8\">\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'HEADER.id' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.supplier_name' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"vat_number\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.vat_number' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.vat_number}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siret\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siret' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.siret}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"siren\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.siren' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.siren}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"form_label\">\n                <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ACCOUNTS.form' | translate }} </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\"> {{element.form_label}} </mat-cell>\n            </ng-container>\n            <ng-container matColumnDef=\"actions\">\n                <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n                <mat-cell *matCellDef=\"let element\">\n                    <button (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-trash fa-lg\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();deletePositionsConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.delete_supplier_positions' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"text-lg icomoon-wrong_location\"></i>\n                    </button>\n                    <button (click)=\"$event.stopPropagation();skipAutoValidateConfirmDialog(element.id, element.name)\"\n                            matTooltip=\"{{ 'GLOBAL.skip_auto_validate' | translate }}\" mat-icon-button\n                            class=\"inline-block align-text-top\">\n                        <i class=\"fas fa-forward fa-lg\"></i>\n                    </button>\n                </mat-cell>\n            </ng-container>\n            <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                     routerLink=\"/accounts/suppliers/update/{{row.id}}\"\n                     class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n        </mat-table>\n        <mat-paginator showFirstLastButtons\n                       [length]=\"this.total\"\n                       [pageSize]=\"pageSize\"\n                       [pageIndex]=\"pageIndex\"\n                       [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                       (page)=\"onPageChange($event)\">\n        </mat-paginator>\n    </mat-sidenav-content>\n</mat-sidenav-container>","/** This file is part of Open-Capture for Invoices.\n\nOpen-Capture for Invoices is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nOpen-Capture is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Open-Capture for Invoices.  If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.\n\n@dev : Nathan Cheval <nathan.cheval@outlook.fr> */\n\nimport {Component, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {AuthService} from \"../../../../../services/auth.service\";\nimport {UserService} from \"../../../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../../../services/notifications/notifications.service\";\nimport {SettingsService} from \"../../../../../services/settings.service\";\nimport {API_URL} from \"../../../../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {PrivilegesService} from \"../../../../../services/privileges.service\";\nimport {HistoryService} from \"../../../../../services/history.service\";\n\n@Component({\n    selector: 'app-update',\n    templateUrl: './update-user.component.html',\n    styleUrls: ['./update-user.component.scss']\n})\n\nexport class UpdateUserComponent implements OnInit {\n    headers: HttpHeaders = this.authService.headers;\n    loading: boolean = true;\n    userId: any;\n    user: any;\n    roles: any[] = [];\n    userForm: any[] = [\n        {\n            id: 'username',\n            label: this.translate.instant('USER.username'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'firstname',\n            label: this.translate.instant('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: this.translate.instant('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'password',\n            label: this.translate.instant('USER.password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'password_check',\n            label: this.translate.instant('USER.password_check'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: this.translate.instant('HEADER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: true\n        }\n    ];\n    customers: any[] = [];\n    usersCustomers: any[] = [];\n\n    constructor(\n        public router: Router,\n        private http: HttpClient,\n        private route: ActivatedRoute,\n        public userService: UserService,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private historyService: HistoryService,\n        public serviceSettings: SettingsService,\n        public privilegesService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.serviceSettings.init();\n        this.userId = this.route.snapshot.params['id'];\n\n        this.http.get(API_URL + '/ws/accounts/customers/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.customers = data.customers;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/users/getCustomersByUserId/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.usersCustomers = data;\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/roles/list', {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable) {\n                        this.roles.push(element);\n                    } else {\n                        if ((this.userService.getUser().privileges === '*')) {\n                            this.roles.push(element);\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n\n        this.http.get(API_URL + '/ws/users/getById/' + this.userId, {headers: this.authService.headers}).pipe(\n            tap((data: any) => {\n                this.user = data;\n                for (const field in data) {\n                    if (data.hasOwnProperty(field)) {\n                        this.userForm.forEach(element => {\n                            if (element.id === field) {\n                                element.control.setValue(data[field]);\n                                if (element.id === 'role') {\n                                    element.values = this.roles;\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe();\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.userForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit() {\n        if (this.isValidForm()) {\n            const user: any = {};\n            this.userForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(API_URL + '/ws/users/update/' + this.userId, {'args': user}, {headers: this.authService.headers},\n            ).pipe(\n                tap(() => {\n                    this.notify.success(this.translate.instant('USER.updated'));\n                    const _user = user['lastname'] + ' ' + user['firstname'];\n                    this.historyService.addHistory('general', 'update_user', this.translate.instant('HISTORY-DESC.update-user', {user: _user}));\n                    this.router.navigate(['/settings/general/users/']).then();\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err, '/settings/general/users/');\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error: any;\n        this.userForm.forEach(element => {\n            if (element.id === field) {\n                if (element.required && !(element.value || element.control.value)) {\n                    error = this.translate.instant('AUTH.field_required');\n                }\n            }\n        });\n        return error;\n    }\n\n    hasCustomer(customerId: any) {\n        for (const _customerId of this.usersCustomers) {\n            if(_customerId === customerId) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    updateUsersCustomers(customerId: any) {\n        let found = false;\n        let cpt = 0;\n        for (const _customerId of this.usersCustomers) {\n            if(_customerId === customerId) {\n                found = true;\n                break;\n            }\n            cpt = cpt + 1;\n        }\n        if (!found) {\n            this.usersCustomers.push(customerId);\n        }else{\n            this.usersCustomers.splice(cpt, 1);\n        }\n\n        this.http.put(API_URL + '/ws/users/customers/update/' + this.userId, {'customers': this.usersCustomers}, {headers: this.authService.headers},\n        ).pipe(\n            tap(() => {\n                this.notify.success(this.translate.instant('USER.customers_updated'));\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err, '/settings/general/users/');\n                return of(false);\n            })\n        ).subscribe();\n    }\n}\n","<mat-sidenav-container class=\"absolute left-0 right-0 bottom-0\" style=\"top: 4.1rem\">\n    <mat-sidenav #sidenav mode=\"side\" opened class=\"w-1/6 flex flex-col h-full border-r border-green-400\" style=\"top:0.1rem\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-nav-list class=\"pt-0\">\n                        <mat-expansion-panel *ngFor=\"let parent of this.serviceSettings.getSettingsParent()\"\n                                 [expanded]=\"this.router.url.includes(parent['id'])\">\n                <mat-expansion-panel-header class=\"border-t border-green-400 z-30\" style=\"box-shadow: 0 1px 5px 4px gray\">\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div *ngFor=\"let setting of this.serviceSettings.getSettings()[parent['id']];\"\n                         [class.border-b]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                         [class.border-gray-400]=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\">\n                        <div *ngIf=\"this.serviceSettings.getSettingsAction(parent['id'], setting['id']) else noActions\">\n                            <mat-expansion-panel *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                                 [expanded]=\"this.router.url.includes(setting['route'])\">\n                                <mat-expansion-panel-header class=\"font-normal w-full h-20\">\n                                    <mat-panel-title class=\"font-normal justify-center items-center text-center\">\n                                        <i [class.text-green-400]=\"this.router.url == setting['route']\"\n                                           class=\"absolute text-lg left-4 w-10 h-10 rounded-full flex items-center justify-center {{setting['icon']}}\">\n                                        </i>\n                                        <button mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                                class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ setting['route'] }}\">\n                                            <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                                {{ setting['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </mat-panel-title>\n                                </mat-expansion-panel-header>\n                                <div *ngFor=\"let action of this.serviceSettings.getSettingsAction(parent['id'], setting['id'])\"\n                                     [class.border-gray-600]=\"!action['showOnlyIfActive']\"\n                                     [class.border-t]=\"!action['showOnlyIfActive']\"\n                                     [class.w-full]=\"!action['showOnlyIfActive']\">\n                                    <div class=\"border-b border-gray-400\"\n                                         *ngIf=\"(this.privilegesService.hasPrivilege(action['privilege']) || setting['privilege'] == '*') && (!action['showOnlyIfActive'] || (action['showOnlyIfActive'] && this.router.url.includes(action['route'])))\">\n                                        <button mat-button\n                                                [class.text-green-400]=\"this.router.url.includes(action['route'])\"\n                                                class=\"font-normal w-full h-12 ml-12 flex items-center text-center\"\n                                                (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                                routerLink=\"{{ action['route'] }}\"\n                                                [class.disable_link]=\"action['showOnlyIfActive']\">\n                                            <i class=\"absolute text-lg w-10 h-10 rounded-full flex items-center justify-center {{action['icon']}}\"></i>\n                                            <p class=\"m-0 ml-12\" style=\"margin-top: 2.5px!important\">\n                                                {{ action['label'] | translate }}\n                                            </p>\n                                        </button>\n                                    </div>\n                                </div>\n                            </mat-expansion-panel>\n                        </div>\n                        <ng-template #noActions>\n                            <button *ngIf=\"this.privilegesService.hasPrivilege(setting['privilege']) || setting['privilege'] == '*'\"\n                                    mat-button [class.text-green-400]=\"this.router.url == setting['route']\"\n                                    class=\"pr-0 font-normal w-full h-20 flex justify-center items-center text-center\"\n                                    (click)=\"this.serviceSettings.changeSetting(setting['id'], parent['id'])\"\n                                    routerLink=\"{{ setting['route'] }}\">\n                                <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"></i>\n                                <p [class.font-medium]=\"this.router.url == setting['route']\" class=\"m-0\">\n                                    {{ setting['label'] | translate }}\n                                </p>\n                            </button>\n                        </ng-template>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content class=\"bg-white\">\n        <div *ngIf=\"loading\">\n            <app-loader></app-loader>\n        </div>\n        <div class=\"settings_header\">\n            <button mat-icon-button (click)=\"sidenav.toggle(); this.serviceSettings.toggleMenu();\"\n                    class=\"absolute left-2 top-2\">\n                <i [class.fa-arrow-right]=\"!this.serviceSettings.getIsMenuOpen()\" class=\"fas fa-arrow-left text-2xl text-gray-900\"></i>\n            </button>\n            <div class=\"settings_title text-center\" *ngIf=\"this.user\">\n                <h3>{{ this.serviceSettings.getTitle() }} : {{ this.user['firstname'] }} {{ this.user['lastname'] }} <b>({{ this.user['username'] }})</b></h3>\n                <hr class=\"border-green-400\">\n            </div>\n            <button mat-icon-button (click)=\"sidenav2.toggle();\"\n                    class=\"absolute right-2 top-2\">\n                <i [class.transform]=\"!sidenav2.opened\" [class.rotate-180]=\"!sidenav2.opened\" class=\"fas fa-stream text-2xl text-gray-900\"></i>\n            </button>\n        </div>\n        <div class=\"flex justify-center items-center align-middle\">\n            <form (ngSubmit)=\"onSubmit()\" class=\"grid grid-cols-3 gap-6 w-full m-10 text-center\">\n                <ng-container *ngFor=\"let field of userForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [readonly]=\"field.id == 'username'\" [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [formControl]=\"field.control\" [(value)]=\"field.control.value\" [required]=\"field.required\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button col-span-3\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.update' | translate }}\n                    </button>\n                </div>\n            </form>\n        </div>\n    </mat-sidenav-content>\n    <mat-sidenav #sidenav2 mode=\"side\" opened position=\"end\" class=\"customers w-1/4 flex flex-col h-full border-r border-green-400\">\n        <h3 class=\"bg-green-400 bg-opacity-60 text-center text-gray-900 m-0 pb-4\" style=\"padding-top: 0.9rem\">{{ \"ACCOUNTS.customers_list\" | translate }}</h3>\n        <mat-divider class=\"border-green-400\"></mat-divider>\n        <mat-list>\n            <mat-list-item *ngFor=\"let customer of customers\" class=\"hover:bg-green-400 cursor-pointer m-2 w-auto\"\n                           [class.bg-green-400]=\"hasCustomer(customer.id)\" (click)=\"updateUsersCustomers(customer.id)\">\n                {{ customer.name }}\n            </mat-list-item>\n        </mat-list>\n    </mat-sidenav>\n</mat-sidenav-container>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}