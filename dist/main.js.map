{"version":3,"sources":["./src/frontend/app/settings/roles/roles.component.ts","./src/frontend/app/settings/roles/roles.component.html","./src/frontend/services/local-storage.service.ts","./src/frontend/app/login/login.component.ts","./src/frontend/app/login/login.component.html","./src/frontend/app/settings/version-update/version-update.component.ts","./src/frontend/app/settings/version-update/version-update.component.html","./src/frontend/services/login-redirect.service.ts","./src/frontend/app/menu/menu.component.ts","./src/frontend/app/menu/menu.component.html","./src/frontend/app/splitter/viewer/viewer.component.ts","./src/frontend/app/splitter/viewer/viewer.component.html","./src/frontend/services/last-url.service.ts","./src/frontend/app/env.ts","./src/frontend/services/has-privilege.service.ts","./src/frontend/app/app-routing.module.ts","./src/frontend/app/splitter/list/list.component.ts","./src/frontend/app/splitter/list/list.component.html","./src/frontend/app/app.module.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.ts","./src/frontend/services/confirm-dialog/confirm-dialog.component.html","./src/frontend/app/verifier/viewer/viewer.component.ts","./src/frontend/app/verifier/viewer/viewer.component.html","./src/frontend/services/notifications/notifications.service.ts","./src/frontend/services/notifications/notification.service.html","./src/frontend/services/privileges.service.ts","./src/frontend/services/user.service.ts","./src/frontend/services/auth.service.ts","./src/frontend/$_lazy_route_resource lazy namespace object","./src/frontend/app/home/home.component.ts","./src/frontend/app/home/home.component.html","./src/frontend/services/locale.service.ts","./src/frontend/app/custom-mat-paginator.ts","./src/frontend/app/profile/profile.component.ts","./src/frontend/app/profile/profile.component.html","./src/frontend/app/app-material.module.ts","./src/frontend/services/config.service.ts","./src/frontend/app/logout/logout.component.ts","./src/frontend/app/settings/about-us/about-us.component.ts","./src/frontend/app/settings/about-us/about-us.component.html","./src/frontend/app/verifier/list/list.component.ts","./src/frontend/app/verifier/list/list.component.html","./src/frontend/app/upload/upload.component.ts","./src/frontend/app/upload/upload.component.html","./src/frontend/app/register/register.component.ts","./src/frontend/app/register/register.component.html","./src/frontend/main.ts","./src/frontend/services/services.module.ts","./src/frontend/app/app.component.ts","./src/frontend/app/app.component.html","./src/frontend/app/not-found/not-found.component.ts","./src/frontend/app/not-found/not-found.component.html","./src/frontend/app/settings/users/list/list.component.ts","./src/frontend/app/settings/users/list/list.component.html","./src/frontend/services/login-required.service.ts","./src/frontend/app/settings/panel/panel.component.ts","./src/frontend/app/settings/panel/panel.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {UserService} from \"../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../../services/notifications/notifications.service\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {LastUrlService} from \"../../../services/last-url.service\";\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\nimport {API_URL} from \"../../env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {Sort} from \"@angular/material/sort\";\nimport {ConfirmDialogComponent} from \"../../../services/confirm-dialog/confirm-dialog.component\";\n\n@Component({\n    selector: 'app-roles',\n    templateUrl: './roles.component.html',\n    styleUrls: ['./roles.component.scss']\n})\n\nexport class RolesComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'label_short', 'label', 'editable', 'actions'];\n    roles : any                   = [];\n    pageSize : number             = 10;\n    pageIndex: number             = 0;\n    total: number                 = 0;\n    offset: number                = 0;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private dialog: MatDialog,\n        private routerExtService: LastUrlService,\n        private localeStorageService: LocalStorageService,\n    ) { }\n\n    ngOnInit(): void {\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('roles/') || lastUrl == '/'){\n            if (this.localeStorageService.get('rolesPageIndex'))\n                this.pageIndex = parseInt(<string>this.localeStorageService.get('rolesPageIndex'))\n            this.offset = this.pageSize * (this.pageIndex)\n        }else\n            this.localeStorageService.remove('rolesPageIndex')\n        this.loadRoles()\n    }\n\n    loadRoles(): void{\n        let headers = this.authService.headers;\n        this.http.get(API_URL + '/ws/roles/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers}).pipe(\n            tap((data: any) => {\n                this.total = data.roles[0].total\n                this.roles = data.roles\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    onPageChange(event: any){\n        this.pageSize = event.pageSize\n        this.offset = this.pageSize * (event.pageIndex)\n        this.localeStorageService.save('rolesPageIndex', event.pageIndex)\n        this.loadRoles()\n    }\n\n    deleteConfirmDialog(role_id: number, role: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('ROLE.confirm_delete', {\"role\": role}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.deleteRole(role_id)\n            }\n        });\n    }\n\n    deleteRole(role_id: number){\n        let headers = this.authService.headers;\n        if (role_id !== undefined){\n            this.http.delete(API_URL + '/ws/roles/delete/' + role_id, {headers}).pipe(\n                tap((data: any) => {\n                    this.loadRoles()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    sortData(sort: Sort){\n        let data = this.roles.slice()\n        if(!sort.active || sort.direction === ''){\n            this.roles = data\n            return;\n        }\n\n        this.roles = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'label_short': return this.compare(a.label_short, b.label_short, isAsc);\n                case 'label': return this.compare(a.label, b.label, isAsc);\n                case 'editable': return this.compare(a.editable, b.editable, isAsc);\n                default: return 0;\n            }\n        });\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<div>\n    <mat-paginator showFirstLastButtons\n                   [length]=\"this.total\"\n                   [pageSize]=\"pageSize\"\n                   [pageIndex]=\"pageIndex\"\n                   [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n                   (page)=\"onPageChange($event)\">\n    </mat-paginator>\n    <mat-table matSort [dataSource]=\"roles\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'GLOBAL.id' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"label_short\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ROLE.label_short' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.label_short}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"label\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ROLE.label' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.label}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"editable\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'ROLE.editable' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.editable\"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'ROLE.editable' | translate }}</span>\n                <span *ngIf=\"!element.editable\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'ROLE.non_editable' | translate }}</span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.editable\">\n                    <button mat-icon-button routerLink=\"/profile/{{element.id}}\"\n                            (click)=\"$event.stopPropagation();\"\n                            matTooltip=\"{{ 'ROLE.update' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-edit fa-lg\"></i>\n                    </button>\n                    <button mat-icon-button\n                            (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.label)\"\n                            matTooltip=\"{{ 'GLOBAL.delete' | translate }}\"\n                            class=\"inline-block align-text-top\">\n                        <i class=\"btn-action-icon fas fa-trash fa-lg\"></i>\n                    </button>\n                </span>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n    </mat-table>\n</div>","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalStorageService {\n    constructor() {\n    }\n\n    save(id: string, content: any) {\n        localStorage.setItem(id, content);\n    }\n\n    get(id: string) {\n        return localStorage.getItem(id);\n    }\n\n    remove(id: string) {\n        localStorage.removeItem(id);\n    }\n\n    resetLocal() {\n        const arr: string | any[] = [];\n        // Iterate over arr and remove the items by key\n        for (let i = 0; i < arr.length; i++) {\n            localStorage.removeItem(arr[i]);\n        }\n    }\n\n    getCookie(cname: string) {\n        let name = cname + \"=\";\n        let decodedCookie = decodeURIComponent(document.cookie);\n        let ca = decodedCookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    setCookie(cname: string, cvalue: string, exdays: number) {\n        let d = new Date();\n        if (exdays !== 0) {\n            d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n            let expires = \"expires=\" + d.toUTCString();\n            document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n        } else {\n            document.cookie = cname + \"=\" + cvalue;\n        }\n    }\n\n    deleteCookie(cname: string){\n        this.setCookie(cname, '', -1)\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Validators, FormBuilder} from '@angular/forms';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {API_URL} from \"../env\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\nimport {ConfigService} from \"../../services/config.service\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {UserService} from \"../../services/user.service\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private configService: ConfigService,\n        private localeService: LocaleService\n) {}\n\n    ngOnInit(): void {\n        this.loginForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required]\n        });\n        this.localeService.getCurrentLocale();\n    }\n\n    onSubmit() {\n        let password = this.loginForm.get('password').value;\n        let username = this.loginForm.get('username').value;\n        if (password && username){\n            this.http.post(\n                API_URL + '/ws/auth/login',\n                {\n                    'username': username,\n                    'password': password,\n                    'lang': this.localeService.currentLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.userService.setUser(data.body.user);\n                    this.authService.setTokens(data.body.auth_token, btoa(JSON.stringify(this.userService.getUser())), data.body.days_before_exp);\n                    this.notify.success(this.translate.instant('AUTH.authenticated'));\n                    this.configService.readConfig().then(() => {\n                        if (this.authService.getCachedUrl()) {\n                            // @ts-ignore\n                            this.router.navigateByUrl(this.authService.getCachedUrl()).then();\n                            this.authService.cleanCachedUrl();\n                        } else {\n                            this.router.navigate(['/home']).then();\n                        }\n                    });\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if(this.loginForm.get(field).hasError('required')){\n            return this.translate.instant('AUTH.field_required');\n        }\n        return this.translate.instant('ERROR.unknow_error');\n    }\n}\n","<div class=\"mt-32 -mb-32 flex justify-center h-20\">\n    <img src=\"assets/imgs/logo_opencapture.png\" alt=\"Open-Capture For Invoices logo\"/>\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            {{ 'GLOBAL.login' | translate }}\n        </mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                    <input matInput formControlName=\"username\"  type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                    <mat-error *ngIf=\"loginForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                    <input matInput formControlName=\"password\" type=\"password\" placeholder=\"{{ 'USER.password' | translate }}\" required>\n                    <mat-error *ngIf=\"loginForm.controls.password.invalid\">{{ getErrorMessage('password') }}</mat-error>\n                </mat-form-field>\n                <div class=\"button\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'AUTH.login' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n    <div class=\"absolute mt-96 hover:text-green-400 transition duration-500\">\n        <a routerLink=\"/register\">\n            {{ 'GLOBAL.register' | translate }}\n        </a>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-version-update',\n  templateUrl: './version-update.component.html',\n  styleUrls: ['./version-update.component.scss']\n})\nexport class VersionUpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>versions-update works!</p>\n","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRedirectService {\n\n    constructor(private authService: AuthService, private router: Router) {\n    }\n\n    canActivate(): boolean {\n        if (this.authService.getToken()) {\n            this.router.navigateByUrl('/home');\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from \"@angular/common\";\nimport { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { UserService } from \"../../services/user.service\";\nimport { LocaleService } from \"../../services/locale.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { HttpHeaders } from \"@angular/common/http\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { PrivilegesService } from \"../../services/privileges.service\";\nimport {filter, map} from \"rxjs/operators\";\nimport {ActivatedRoute, NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.scss'],\n    animations: [\n        trigger('toggle', [\n            state('hide', style({\n                display: 'none',\n\n            })),\n            state('show', style({\n                display: \"block\",\n            })),\n            transition('show => hide', animate('150ms ease-out')),\n            transition('hide => show', animate('100ms ease-in'))\n        ])\n    ]\n})\n\nexport class MenuComponent implements OnInit {\n    profileDropdownCurrentState : string = 'hide';\n    profileSettingsCurrentState : string = 'hide';\n    mobileMenuState             : string = 'hide';\n    image_url                   : string = 'assets/imgs/logo_opencapture.png';\n\n    constructor(\n        public router: Router,\n        public location: Location,\n        public userService: UserService,\n        private authService: AuthService,\n        public localeService: LocaleService,\n        private activatedRoute: ActivatedRoute,\n        public privilegesService: PrivilegesService,\n        public localeStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.authService.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getToken());\n        this.userService.user = this.userService.getUserFromLocal();\n        this.localeService.getLocales();\n        this.localeService.getCurrentLocale();\n    }\n\n    getSplitterOrVerifier(){\n        return this.localeStorageService.get('splitter_or_verifier')\n    }\n\n    toggleProfileDropdown() {\n        this.profileDropdownCurrentState = this.profileDropdownCurrentState === 'hide' ? 'show' : 'hide';\n        this.profileSettingsCurrentState = this.profileDropdownCurrentState === 'show' && this.profileSettingsCurrentState == 'show' ? 'hide' : this.profileSettingsCurrentState;\n    }\n\n    closeprofileDropDown() {\n        this.profileDropdownCurrentState = 'hide';\n    }\n\n    toggleMobileMenu() {\n        this.mobileMenuState = this.mobileMenuState === 'hide' ? 'show' : 'hide';\n    }\n}\n","<nav style=\"background: #f8f9fa\" class=\"shadow-md\">\n    <div class=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n        <div class=\"relative flex items-center justify-between h-16\">\n            <div class=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                <!-- Mobile menu button-->\n                <button (click)=\"toggleMobileMenu()\"\n                        class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-white hover:bg-gray-900 focus:ring-2 focus:ring-inset focus:ring-gray-900\"\n                        aria-expanded=\"false\">\n                    <svg *ngIf=\"mobileMenuState == 'hide'\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\"\n                         stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                              d=\"M4 6h16M4 12h16M4 18h16\"/>\n                    </svg>\n                    <svg *ngIf=\"mobileMenuState == 'show'\" class=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\"\n                         fill=\"none\" viewBox=\"0 0 24 24\"\n                         stroke=\"currentColor\" aria-hidden=\"true\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n                    </svg>\n                </button>\n            </div>\n            <div class=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div class=\"flex-shrink-0 flex items-center\">\n                    <img class=\"hidden lg:block h-10 w-auto\" src=\"assets/imgs/logo_opencapture.png\" alt=\"Open-Capture logo\">\n                </div>\n                <div class=\"hidden sm:block sm:ml-6\">\n                    <div class=\"flex space-x-4\">\n                        <button mat-flat-button routerLink=\"/home\"\n                                [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                           class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.home' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/verifier\"\n                                [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() == 'verifier'\"\n                           class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/splitter\"\n                                [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home' && this.getSplitterOrVerifier() == 'splitter'\"\n                           class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.batches' | translate }}\n                        </button>\n                        <button mat-flat-button routerLink=\"/upload\"\n                                [routerLinkActive]=\"'bg-gray-900 text-green-400'\"\n                                *ngIf=\"location.path() !== '/home'\"\n                                [class.disabled]=\"!this.privilegesService.hasPrivilege('upload')\"\n                       class=\"text-gray-500 hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n                            {{ 'GLOBAL.upload' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <!-- Profile dropdown -->\n                <div class=\"ml-3 relative mr-2\">\n                    <div>\n                        <button [class.settings_active]=\"location.path().includes('profile/' + userService.user['id'])\"\n                                mat-mini-fab (click)=\"toggleProfileDropdown()\"\n                                class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\"\n                                id=\"user-menu\" aria-haspopup=\"true\">\n                            <i class=\"fas fa-users-cog\"></i>\n                        </button>\n                    </div>\n                    <div [@toggle]=\"profileDropdownCurrentState\" class=\"origin-top-right absolute md:right-0 mt-2 w-56 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 z-50\"\n                         role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\n                        <span class=\"block text-center mb-2 text-gray-900\">\n                            <b>{{ userService.user['lastname'] }}</b> {{ userService.user['firstname'] }} ({{ userService.user['username'] }})\n                            <i>{{ userService.user['role']['label'] }}</i>\n                            <hr>\n                        </span>\n                        <a *ngIf=\"location.path() !== '/home'\" (click)=\"closeprofileDropDown()\" routerLink=\"/profile/{{ userService.user['id'] }}\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\"\n                           role=\"menuitem\">{{ 'USER.my_profile' | translate }}</a>\n                        <a (click)=\"closeprofileDropDown()\" routerLink=\"/logout\" class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 relative\"\n                           role=\"menuitem\">{{ 'GLOBAL.log_out' | translate }}</a>\n                    </div>\n                </div>\n                <div class=\"ml-3 relative\" *ngIf=\"this.getSplitterOrVerifier() != undefined && this.privilegesService.hasPrivilege('settings')\">\n                    <button id=\"settings-menu\" aria-haspopup=\"true\"\n                            mat-mini-fab routerLink=\"/settings/panel\"\n                            [class.settings_active]=\"location.path().includes('settings')\"\n                            class=\"bg-green-400 hover:ring-4 hover:ring-offset-4 hover:ring-green-400 hover:ring-opacity-60\">\n                        <i class=\"fas fa-cog \"></i>\n                    </button>\n                </div>\n                <div class=\"ml-3 relative\">\n                    <mat-form-field class=\"origin-top-right right-0 mt-4 w-32\">\n                        <mat-label>{{ 'GLOBAL.language' | translate }}</mat-label>\n                        <mat-select (selectionChange)=\"localeService.changeLocale($event)\" [(value)]=\"localeService.currentLang\">\n                            <mat-option *ngFor=\"let lang of localeService.langs\" [value]=\"lang[0]\">{{ lang[1] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n    </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class SplitterViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewer works!</p>\n","import { Injectable } from '@angular/core';\nimport { Router, RouterEvent, NavigationEnd } from '@angular/router';\n\n/** A router wrapper, adding extra functions. */\n@Injectable()\nexport class LastUrlService {\n\n    private previousUrl: string = '';\n    private currentUrl: string = '';\n\n    constructor(private router : Router) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe(event => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n            };\n        });\n    }\n\n    public getPreviousUrl(){\n        return this.previousUrl;\n    }\n}","export const API_URL = 'http://192.168.1.28:5000';","import {Injectable} from '@angular/core';\nimport {PrivilegesService} from \"./privileges.service\";\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"./notifications/notifications.service\";\n\n@Injectable({\n        providedIn: 'root'\n})\nexport class HasPrivilegeService {\n\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private privilegesService: PrivilegesService,\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (route.data.privilege !== undefined){\n            let hasPrivilege = this.privilegesService.hasPrivilege(route.data.privilege)\n            if (hasPrivilege){\n                return true\n            }else{\n                this.translate.get('ERROR.unauthorized').subscribe((translated: string) => {\n                    this.notify.error(translated)\n                    this.router.navigateByUrl('/home')\n                });\n                return false\n            }\n        }else{\n          return true\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { LoginRedirectService } from '../services/login-redirect.service';\nimport { LoginRequiredService } from '../services/login-required.service';\nimport { PrivilegesService } from \"../services/privileges.service\";\n\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { HomeComponent } from './home/home.component';\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { UserProfileComponent } from \"./profile/profile.component\";\nimport { SplitterViewerComponent } from \"./splitter/viewer/viewer.component\";\nimport { SplitterListComponent } from \"./splitter/list/list.component\";\nimport { VerifierViewerComponent } from './verifier/viewer/viewer.component';\nimport { VerifierListComponent } from './verifier/list/list.component';\nimport { UploadComponent } from \"./upload/upload.component\";\nimport { PanelComponent } from \"./settings/panel/panel.component\";\nimport { HasPrivilegeService } from \"../services/has-privilege.service\";\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'home', pathMatch: 'full'},\n    {path: 'home', component: HomeComponent , data: { title: marker('GLOBAL.home'), image: 'assets/imgs/logo_opencapture.png' }, canActivate: [LoginRequiredService]},\n    {path: 'login', component: LoginComponent , data: { title: marker('GLOBAL.login')}, canActivate: [LoginRedirectService]},\n    {path: 'register', component: RegisterComponent , data: { title: marker('GLOBAL.register')}, canActivate: [LoginRedirectService]},\n    {path: 'logout', component: LogoutComponent , canActivate: [LoginRequiredService]},\n    {path: 'profile/:id', component: UserProfileComponent, canActivate: [LoginRequiredService]},\n\n    {\n        path: 'splitter/viewer/:id',\n        component: SplitterViewerComponent,\n        data: {title: marker('SPLITTER.viewer'), privilege: 'splitter' },\n        canActivate: [\n            LoginRequiredService,\n            HasPrivilegeService\n        ]\n    },\n    {\n        path: 'splitter/list',\n        component: SplitterListComponent,\n        data: {title: marker('SPLITTER.list'), privilege: 'splitter'},\n        canActivate: [\n            LoginRequiredService,\n            HasPrivilegeService\n        ],\n\n    },\n    {path: 'splitter', redirectTo: 'splitter/list', pathMatch: 'full'},\n\n    {\n        path: 'verifier/viewer',\n        component: VerifierViewerComponent,\n        data: {title: marker('VERIFIER.viewer'), privilege: 'verifier'},\n        canActivate: [\n            LoginRequiredService,\n            HasPrivilegeService\n        ]\n    },\n    {\n        path: 'verifier/list',\n        component: VerifierListComponent,\n        data: {title: marker('VERIFIER.list'), privilege: 'verifier'},\n        canActivate: [\n            LoginRequiredService,\n            HasPrivilegeService\n        ]\n    },\n    {path: 'verifier', redirectTo: 'verifier/list', pathMatch: 'full'},\n    {\n        path: 'upload',\n        component: UploadComponent,\n        data: {title: marker('GLOBAL.upload'), privilege: 'upload'},\n        canActivate: [\n            LoginRequiredService,\n            HasPrivilegeService\n        ]\n    },\n    {\n        path: 'settings/panel',\n        component: PanelComponent,\n        data: {title: marker('GLOBAL.settings'), privilege: 'settings'},\n        canActivate: [\n            LoginRequiredService,\n            HasPrivilegeService\n        ]\n    },\n\n    {path: '404', component: NotFoundComponent}, // This two routes (** and 404) need to be the last of const routes: Routes variable\n    {path: '**', redirectTo: '404'}, // if routes doesn't exists, redirect to 404, display a popup and then redirect to login\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes, {useHash: true})\n    ],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\n\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss']\n})\nexport class SplitterListComponent implements OnInit {\n\n    constructor(\n        private localeStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.localeStorageService.save('splitter_or_verifier', 'splitter')\n    }\n\n}\n","<p>list works!</p>\n","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppMaterialModule } from './app-material.module';\nimport { ServicesModule } from '../services/services.module';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule, TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient} from \"@angular/common/http\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { VerifierViewerComponent } from './verifier/viewer/viewer.component';\nimport { VerifierListComponent } from './verifier/list/list.component';\nimport { SplitterViewerComponent } from './splitter/viewer/viewer.component';\nimport { SplitterListComponent } from './splitter/list/list.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from \"./logout/logout.component\";\nimport { HomeComponent } from './home/home.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { UserProfileComponent } from './profile/profile.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { NgxFileDragDropModule } from \"ngx-file-drag-drop\";\nimport { UserListComponent } from './settings/users/list/list.component';\nimport { PanelComponent } from './settings/panel/panel.component';\nimport { MatPaginatorIntl } from \"@angular/material/paginator\";\nimport { CustomMatPaginatorIntl } from \"./custom-mat-paginator\";\nimport { LastUrlService } from \"../services/last-url.service\";\nimport { AboutUsComponent } from './settings/about-us/about-us.component';\nimport { VersionUpdateComponent } from './settings/version-update/version-update.component';\nimport { RolesComponent } from './settings/roles/roles.component';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, 'assets/i18n/frontend/', '.json');\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VerifierViewerComponent,\n    VerifierListComponent,\n    SplitterListComponent,\n    SplitterViewerComponent,\n    LoginComponent,\n    LogoutComponent,\n    HomeComponent,\n    MenuComponent,\n    RegisterComponent,\n    NotFoundComponent,\n    UserProfileComponent,\n    UploadComponent,\n    UserListComponent,\n    PanelComponent,\n    AboutUsComponent,\n    VersionUpdateComponent,\n    RolesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AppMaterialModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ServicesModule,\n    TranslateModule.forRoot({\n      defaultLanguage: 'fra',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    ReactiveFormsModule,\n    FormsModule,\n    NgxFileDragDropModule,\n  ],\n  providers: [\n    Title,\n    TranslateService,\n    LastUrlService,\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'outline' } },\n    {\n      provide: MatPaginatorIntl,\n      useClass: CustomMatPaginatorIntl\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n      private routerExtService: LastUrlService,\n  ){}\n}\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\nexport interface ConfirmData {\n    confirmTitle : string,\n    confirmText : string,\n    confirmButton : string,\n    confirmButtonColor : string,\n    cancelButton : string,\n}\n\n@Component({\n    selector: 'app-confirm-dialog',\n    templateUrl: './confirm-dialog.component.html',\n    styleUrls: ['./confirm-dialog.component.scss']\n})\n\nexport class ConfirmDialogComponent implements OnInit {\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: ConfirmData,\n    ) { }\n\n    ngOnInit(): void {}\n}","<h2 mat-dialog-title>{{ data.confirmTitle }}</h2>\n<hr class=\"border-green-400 -mt-4 mb-4\">\n<mat-dialog-content class=\"mat-typography\">\n    {{ data.confirmText }}\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{ data.cancelButton }}</button>\n    <button mat-button [mat-dialog-close]=\"true\" color=\"{{ data.confirmButtonColor }}\" cdkFocusInitial>{{ data.confirmButton }}</button>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss']\n})\nexport class VerifierViewerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>viewer works!</p>\n","import { MatSnackBar } from '@angular/material/snack-bar';\nimport { Injectable, Component, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { API_URL } from \"../../app/env\";\n\n@Component({\n    selector: 'custom-snackbar',\n    templateUrl: 'notification.service.html',\n    styleUrls: ['notification.service.scss'],\n})\nexport class CustomSnackbarComponent {\n    constructor(@Inject(MAT_SNACK_BAR_DATA) public data: any) { }\n\n    dismiss() {\n        this.data.close();\n    }\n}\n\n@Injectable()\nexport class NotificationService {\n    constructor(\n        public translate: TranslateService,\n        private router: Router,\n        public snackBar: MatSnackBar)\n    { }\n\n    success(message: string) {\n        const duration = this.getMessageDuration(message, 2000);\n        const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n            duration: duration,\n            panelClass: ['success-snackbar', 'mt-20', 'mr-3'],\n            verticalPosition : 'top',\n            horizontalPosition: 'right',\n            data: { message: message, icon: 'info-circle', close: () => {snackBar.dismiss()} }\n        });\n    }\n\n    error(message: string, url: any = null) {\n        const duration = this.getMessageDuration(message, 8000);\n        const snackBar = this.snackBar.openFromComponent(CustomSnackbarComponent, {\n            duration: duration,\n            panelClass: ['error-snackbar', 'mt-20', 'mr-3'],\n            verticalPosition : 'top',\n            horizontalPosition: 'right',\n            data: { url: url, message: message, icon: 'exclamation-triangle', close: () => {snackBar.dismiss()} }\n        });\n    }\n\n    handleErrors(err: any) {\n        if (err.status === 0 && err.statusText === 'Unknown Error') {\n            let message = this.translate.instant('ERROR.connection_failed') + ' : ' + this.translate.instant('ERROR.is_server_up', {server: API_URL});\n            this.error(message);\n            if (this.router.url !== '/login')\n                this.router.navigate(['/logout']);\n        } else if (err.error !== undefined) {\n            if (err.error.errors !== undefined) {\n                this.error(err.error.errors + ' : ' + err.error.message, err.url);\n                if (err.status === 403 || err.status === 404)\n                    this.router.navigate(['/login']).then();\n                else if (err.error.errors == this.translate.instant('ERROR.jwt_error'))\n                    this.router.navigate(['/logout']).then();\n            } else if (err.error.exception !== undefined)\n                this.error(err.error.exception[0].message, err.url);\n            else if (err.error.error !== undefined) {\n                if (err.error.error[0] !== undefined)\n                    this.error(err.error.error[0].message, err.url);\n                else\n                    this.error(err.error.error.message, err.url);\n            } else\n                this.error(`${err.status} : ${err.statusText}`, err.url);\n        } else\n            this.error(err);\n    }\n\n    getMessageDuration(message: string, minimumDuration: number) {\n        const duration = (message.length / 25) * 1000;\n        const maxDuration = 10000;\n        if (duration < minimumDuration) {\n            return minimumDuration;\n        } else if (duration > maxDuration) {\n            return maxDuration;\n        }\n        return duration;\n    }\n}\n","<div class=\"notif-container\" (click)=\"dismiss()\">\n    <div class=\"notif-container-icon\">\n        <i class=\"fa fa-{{data.icon}} fa-2x\"></i>\n    </div>\n    <div class=\"notif-container-content\">\n        <div class=\"notif-container-content-msg\">\n            <div [innerHTML]=\"data.url\"></div>\n            <div [innerHTML]=\"data.message\"></div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PrivilegesService {\n\n    constructor(\n        private userService: UserService\n    ) { }\n\n    hasPrivilege(privilege_id: any) {\n        let found = false\n        let user_privileges = this.userService.getUserFromLocal()['privileges']\n\n        if (user_privileges){\n            if (user_privileges == '*')\n                return true\n\n            user_privileges.forEach((element: any) => {\n                if (privilege_id == element){\n                    found = true\n                }\n            })\n            return found\n        }\n        return false\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { LocalStorageService } from \"./local-storage.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    user : any = {};\n\n    constructor(\n        private http: HttpClient,\n        private localStorage: LocalStorageService,\n    ) {\n    }\n\n    setUser(value: any) {\n        this.user = value;\n    }\n\n    getUser(){\n        return this.user;\n    }\n\n    getUserFromLocal() {\n        let token = this.getTokenAuth();\n        if (token) {\n            return JSON.parse(atob(<string>token));\n        }\n    }\n\n    getTokenAuth() {\n        return this.localStorage.getCookie('OpenCaptureForInvoicesToken_2');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {LocalStorageService} from \"./local-storage.service\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {UserService} from \"./user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n    public headers : HttpHeaders;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private userService: UserService,\n        private localStorage: LocalStorageService,\n    ) {\n        this.headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.getToken());\n    }\n\n    setCachedUrl(url: string) {\n        this.localStorage.save('OpenCaptureForInvoicesCachedUrl', url);\n    }\n\n    getCachedUrl() {\n        return this.localStorage.get('OpenCaptureForInvoicesCachedUrl');\n    }\n\n    cleanCachedUrl() {\n        return this.localStorage.remove('OpenCaptureForInvoicesCachedUrl');\n    }\n\n    setTokenCustom(name: string, token: string) {\n        this.localStorage.save(name, token);\n    }\n\n    getTokenCustom(name: string){\n        return this.localStorage.get(name);\n    }\n\n    setTokens(token: string, token2: string, days_before_exp: number) {\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken', token, days_before_exp);\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken_2', token2, days_before_exp);\n    }\n\n    setTokenAuth(token: string, days_before_exp: number){\n        this.localStorage.setCookie('OpenCaptureForInvoicesToken_2', token, days_before_exp);\n    }\n\n    getToken() {\n        return this.localStorage.getCookie('OpenCaptureForInvoicesToken');\n    }\n\n    clearTokens() {\n        this.localStorage.deleteCookie('OpenCaptureForInvoicesToken');\n        this.localStorage.deleteCookie('OpenCaptureForInvoicesToken_2');\n        this.localStorage.remove('splitter_or_verifier');\n    }\n\n    logout(){\n        this.userService.setUser({});\n        this.clearTokens();\n        this.router.navigateByUrl(\"/login\");\n    }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"TCaw\";","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {LocalStorageService} from \"../../services/local-storage.service\";\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n    constructor(\n        private authService: AuthService,\n        private userService: UserService,\n        public privilegesService: PrivilegesService,\n        private localeStorageService: LocalStorageService\n    ) {\n    }\n\n    ngOnInit() {\n    }\n\n    setValue(value: string){\n        this.localeStorageService.save('splitter_or_verifier', value);\n    }\n}\n","<div class=\"flex relative justify-center items-center gap-8\" style=\"height: 85vh\">\n    <mat-card [class.disabled]=\"!this.privilegesService.hasPrivilege('splitter')\" class=\"text-center w-full lg:w-1/6 shadow-lg transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/splitter/list\" class=\"block\" (click)=\"setValue('splitter')\">\n            <div class=\"bg-splitter bg-100 bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\"></div>\n        </a>\n        <mat-card-subtitle>\n            {{ 'HOME.splitter' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n    <mat-card [class.disabled]=\"!this.privilegesService.hasPrivilege('verifier')\" class=\"text-center w-full lg:w-1/6 shadow-lg transition duration-500 ease-in-out transform hover:-translate-y-1 hover:scale-110 hover:shadow-2xl\">\n        <a routerLink=\"/verifier/list\" class=\"block\" (click)=\"setValue('verifier')\">\n            <div class=\"bg-verifier bg-60 bg-no-repeat bg-center w-full h-64 transition duration-500 ease-in-out hover:opacity-30\"></div>\n        </a>\n        <mat-card-subtitle>\n            {{ 'HOME.verifier' | translate }}\n        </mat-card-subtitle>\n    </mat-card>\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {API_URL} from \"../app/env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {AuthService} from \"./auth.service\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocaleService {\n    currentLang: string = ''\n    langs: [] = []\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private translate: TranslateService,\n        private notify: NotificationService\n    ) {\n    }\n\n    changeLocale(data: any) {\n        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getToken())\n        this.http.get(API_URL + '/ws/i18n/changeLanguage/' + data.value, {headers}).pipe(\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n        this.currentLang = data.value\n        this.translate.use(data.value)\n    }\n\n    getCurrentLocale() {\n        this.http.get(API_URL + '/ws/i18n/getCurrentLang').pipe(\n            tap((data: any) => {\n                this.currentLang = data.lang\n                this.translate.use(this.currentLang)\n            }),\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    getLocales() {\n        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getToken())\n        this.http.get(API_URL + '/ws/i18n/getAllLang', {headers}).pipe(\n            tap((data: any) => {\n                this.langs = data.langs\n            }),\n            catchError((err: any) => {\n                console.debug(err)\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n}\n","import {MatPaginatorIntl} from \"@angular/material/paginator\";\nimport {Injectable} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable()\nexport class CustomMatPaginatorIntl extends MatPaginatorIntl {\n    constructor(\n        private translate: TranslateService\n    ) {\n        super();\n        this.getAndInitTranslations();\n    }\n\n    getAndInitTranslations() {\n        this.translate.get('PAGINATOR.items_per_page').subscribe((translated: string) => {\n            this.itemsPerPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.next_page').subscribe((translated: string) => {\n            this.nextPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.first_page').subscribe((translated: string) => {\n            this.firstPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.last_page').subscribe((translated: string) => {\n            this.lastPageLabel = translated;\n        });\n        this.translate.get('PAGINATOR.previous_page').subscribe((translated: string) => {\n            this.previousPageLabel = translated;\n        });\n        this.changes.next();\n    }\n\n    getRangeLabel = (page: number, pageSize: number, length: number) =>  {\n        if (length == 0 || pageSize == 0) { return `0 de ${length}`; }\n\n        length = Math.max(length, 0);\n\n        const startIndex = page * pageSize;\n\n        // If the start index exceeds the list length, do not try and fix the end index to the end.\n        const endIndex = startIndex < length ?\n            Math.min(startIndex + pageSize, length):\n                startIndex + pageSize;\n\n        const nbPage = Math.ceil(length / pageSize);\n        //return `${startIndex + 1} - ${endIndex} / ${length} (${page})`;\n        return this.translate.instant('PAGINATOR.page') + ` ${page + 1} / ${nbPage}`;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {API_URL} from \"../env\";\nimport {catchError, finalize, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\nimport {PrivilegesService} from \"../../services/privileges.service\";\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n    userId      : any;\n    profile     : any;\n    roles       : any[] = [];\n    profileForm : any[] = [\n        {\n            id: 'firstname',\n            label: marker('USER.firstname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true,\n        },\n        {\n            id: 'lastname',\n            label: marker('USER.lastname'),\n            type: 'text',\n            control: new FormControl(),\n            required: true\n        },\n        {\n            id: 'old_password',\n            label: marker('USER.old_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'new_password',\n            label: marker('USER.new_password'),\n            type: 'password',\n            control: new FormControl(),\n            required: false\n        },\n        {\n            id: 'role',\n            label: marker('USER.role'),\n            type: 'select',\n            values: [],\n            control: new FormControl(),\n            required: false\n        }\n    ];\n    public loading: boolean = true;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private localeService: LocaleService,\n        private privilegeService: PrivilegesService\n    ) {\n    }\n\n    ngOnInit(){\n        console.log(this.userService.getUserFromLocal()['privileges'])\n        this.userId = this.route.snapshot.params['id'];\n        let headers = this.authService.headers;\n\n        if (this.userId != this.userService.user.id){\n            if (!this.privilegeService.hasPrivilege('modify_user')){\n                this.notify.error('ERROR.unauthorized')\n                this.router.navigateByUrl('/home')\n            }\n        }\n\n        this.http.get(API_URL + '/ws/roles/list', {headers}).pipe(\n            tap((data: any) => {\n                data.roles.forEach((element: any) => {\n                    if (element.editable){\n                        this.roles.push(element)\n                    }else{\n                        if((this.userService.getUser().privileges == '*')){\n                            this.roles.push(element)\n                        }\n                    }\n                });\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n\n        this.http.get(API_URL + '/ws/users/getById/' + this.userId, {headers}).pipe(\n            tap((data: any) => {\n                this.profile = data;\n                // console.log(this.profile)\n                for (let field in this.profile){\n                    if (this.profile.hasOwnProperty(field)){\n                        this.profileForm.forEach(element => {\n                            if (element.id == field){\n                                element.control.value = this.profile[field];\n                                if (element.id == 'role'){\n                                    element.values = this.roles\n                                }\n                            }\n                        });\n                    }\n                }\n            }),\n            finalize(() => this.loading = false ),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    isValidForm() {\n        let state = true;\n\n        this.profileForm.forEach(element => {\n            if (element.control.status !== 'DISABLED' && element.control.status !== 'VALID') {\n                state = false;\n            }\n            element.control.markAsTouched();\n        });\n\n        return state;\n    }\n\n    onSubmit(){\n        if(this.isValidForm()){\n            const user : any = {};\n            let headers = this.authService.headers;\n\n            this.profileForm.forEach(element => {\n                user[element.id] = element.control.value;\n            });\n\n            this.http.put(\n                API_URL + '/ws/users/update/' + this.userId,\n                {\n                    'args': user,\n                    'lang': this.localeService.currentLang\n                },\n                {\n                    headers\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('USER.profile_updated'));\n                    if (this.userId == this.userService.user.id){\n                        this.userService.setUser(data.user);\n                        this.authService.setTokenAuth(btoa(JSON.stringify(this.userService.getUser())), data.days_before_exp);\n                    }\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        let error = '';\n        this.profileForm.forEach(element => {\n            if(element.id == field)\n                if (element.required){\n                    error = this.translate.instant('AUTH.field_required');\n                }\n        })\n        return error\n    }\n}\n","<div *ngIf=\"!loading\" class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-full lg:w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            <span *ngIf=\"this.userId == this.userService.user.id\">{{ 'USER.modify_my_profile' | translate }}</span>\n            <span *ngIf=\"this.userId != this.userService.user.id\">{{ 'USER.modify_profile_of' | translate }} {{this.profile['username']}}</span>\n        </mat-card-title>\n        <mat-card-content>\n            <form (ngSubmit)=\"onSubmit()\" >\n                <ng-container *ngFor=\"let field of profileForm\">\n                    <mat-form-field class=\"block\" *ngIf=\"field.type != 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <input matInput [formControl]=\"field.control\" [type]=\"field.type\" placeholder=\"{{ field.label | translate }}\" [required]=\"field.required\">\n                        <mat-error *ngIf=\"field.control.invalid\">{{ getErrorMessage(field.id) }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\" *ngIf=\"field.type == 'select'\">\n                        <mat-label>{{ field.label | translate }}</mat-label>\n                        <mat-select [disabled]=\"this.userService.getUserFromLocal()['privileges'] != '*'\" [(value)]=\"field.control.value\">\n                            <mat-option *ngFor=\"let option of field.values\" [value]=\"option['id']\">{{ option['label'] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </ng-container>\n                <div class=\"button\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'USER.modify' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import {MAT_DATE_FORMATS} from \"@angular/material/core\";\n\nexport const APP_DATE_FORMATS =\n{\n    parse: {\n        dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n    },\n    display: {\n        dateInput: 'input',\n        monthYearLabel: { month: 'short', year: 'numeric', day: 'numeric' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n    imports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatTreeModule,\n        MatRippleModule,\n    ],\n    exports: [\n        MatCheckboxModule,\n        MatSelectModule,\n        MatSlideToggleModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatTabsModule,\n        MatSidenavModule,\n        MatButtonModule,\n        MatCardModule,\n        MatButtonToggleModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatToolbarModule,\n        MatMenuModule,\n        MatGridListModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatExpansionModule,\n        MatAutocompleteModule,\n        MatSnackBarModule,\n        MatIconModule,\n        MatDialogModule,\n        MatListModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatRadioModule,\n        MatSliderModule,\n        MatBadgeModule,\n        MatBottomSheetModule,\n        MatRippleModule,\n        MatTreeModule,\n    ],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\n    ]\n})\nexport class AppMaterialModule { }\n","import {Injectable} from '@angular/core';\nimport {API_URL} from \"../app/env\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {AuthService} from \"./auth.service\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ConfigService {\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService,\n        private notify:NotificationService,\n    ) {\n    }\n\n    readConfig() {\n        const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.authService.getToken())\n        return new Promise((resolve, reject) => {\n            this.http.get(API_URL + '/ws/config/readConfig', {headers}).pipe(\n                tap((data: any) => {\n                    this.setConfig(data.text)\n                    resolve(true);\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    resolve(false);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        });\n    }\n\n    setConfig(config: any){\n        this.authService.setTokenCustom('OpenCaptureForInvoicesConfig', btoa(JSON.stringify(config)));\n    }\n\n    getConfig(){\n        return JSON.parse(atob(<string>this.authService.getTokenCustom('OpenCaptureForInvoicesConfig')))\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-logout',\n    templateUrl: './logout.component.html',\n    styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n    constructor(\n        private router: Router,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private authService: AuthService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.authService.logout()\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center text-gray-900 mb-10\">Open-Capture For Invoices</h1>\n<hr class=\"border-green-400 -mt-4 mb-4 w-1/2 m-auto \">\n<div class=\"logo flex justify-center items-center gap-48\">\n    <div id=\"verifier\">\n        <img src=\"assets/imgs/logo_opencapture.png\" alt=\"Open-Capture Verifier\">\n\n    </div>\n    <div id=\"splitter\">\n        <img src=\"assets/imgs/logo_splitter.png\" alt=\"Open-Capture Splitter\">\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss']\n})\nexport class VerifierListComponent implements OnInit {\n    loading = true\n\n    constructor(\n        private localeStorageService: LocalStorageService\n\n    ) {}\n\n    ngOnInit(): void {\n        this.localeStorageService.save('splitter_or_verifier', 'verifier')\n    }\n\n\n}\n","<p>list works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormControl} from \"@angular/forms\";\nimport {FileValidators} from \"ngx-file-drag-drop\";\nimport {API_URL} from \"../env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {UserService} from \"../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {LocalStorageService} from \"../../services/local-storage.service\";\n\n\n@Component({\n    selector: 'app-upload',\n    templateUrl: './upload.component.html',\n    styleUrls: ['./upload.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\n\nexport class UploadComponent implements OnInit {\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        public localeStorageService: LocalStorageService\n    ) {\n    }\n\n    fileControl = new FormControl(\n        [],\n        [\n            FileValidators.required,\n            FileValidators.fileExtension(['pdf'])\n        ]\n    );\n\n    ngOnInit(): void {\n    }\n\n    checkFile(data: any): void {\n        if (data && data.length != 0) {\n            for (let i = 0; i < data.length; i++) {\n                let file_name = data[i].name\n                let file_extension = file_name.split('.').pop();\n                console.log(file_extension)\n                if (file_extension.toLowerCase() != 'pdf') {\n                    this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized', {count: data.length}));\n                    return;\n                }\n            }\n        }\n    }\n\n    uploadFile(): void {\n        const formData: FormData = new FormData();\n        let headers = this.authService.headers;\n\n        if (this.fileControl.value.length == 0) {\n            this.notify.handleErrors(this.translate.instant('UPLOAD.no_file'));\n            return;\n        }\n\n        for (let i = 0; i < this.fileControl.value.length; i++) {\n            if (this.fileControl.status == 'VALID') {\n                console.log(this.fileControl.value[i])\n                console.log(this.fileControl.value[i].name)\n                formData.append(this.fileControl.value[i].name, this.fileControl.value[i]);\n                console.log(formData)\n            } else {\n                this.notify.handleErrors(this.translate.instant('UPLOAD.extension_unauthorized'));\n                return;\n            }\n        }\n        console.log(formData)\n        let splitter_or_verifier = this.localeStorageService.get('splitter_or_verifier')\n        if(splitter_or_verifier !== undefined || splitter_or_verifier !== ''){\n            this.http.post(\n                API_URL + '/ws/' + splitter_or_verifier + '/upload',\n                formData,\n                {\n                    headers\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('UPLOAD.upload_success'));\n                }),\n                catchError((err: any) => {\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }else{\n            this.notify.handleErrors(this.translate.instant('ERROR.unknow_error'));\n            return;\n        }\n    }\n}","<ngx-file-drag-drop\n        [formControl]=\"fileControl\"\n        [activeBorderColor]=\"'#97BF3D'\"\n        [multiple]=\"true\"\n        [accept]=\"'pdf'\"\n        [displayFileSize]=\"true\"\n        [emptyPlaceholder]=\"'UPLOAD.placeholder' | translate\"\n        [class]=\"'max-w-3xl h-56'\"\n        (valueChanged)=\"checkFile($event)\">\n</ngx-file-drag-drop>\n\n<div class=\"flex justify-center content-center\">\n    <button mat-flat-button\n            (click)=\"uploadFile()\"\n            class=\"mt-5 border-solid border-green-400 border hover:bg-green-400 hover:text-white px-3 py-2 text-sm font-medium transition duration-300\">\n        {{ 'UPLOAD.send' | translate }}\n    </button>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {LocaleService} from \"../../services/locale.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {API_URL} from \"../env\";\nimport {catchError, tap} from \"rxjs/operators\";\nimport {of} from \"rxjs\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {AuthService} from \"../../services/auth.service\";\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {ConfigService} from \"../../services/config.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: any;\n\n    constructor(\n        private router: Router,\n        private http: HttpClient,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n        private configService: ConfigService,\n        private localeService: LocaleService,\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.registerForm = this.formBuilder.group({\n            username: [null, Validators.required],\n            password: [null, Validators.required],\n            firstname: [null, Validators.required],\n            lastname: [null, Validators.required]\n        });\n        this.localeService.getCurrentLocale()\n    }\n\n    onSubmit() {\n        let password = this.registerForm.get('password').value\n        let username = this.registerForm.get('username').value\n        let firstname = this.registerForm.get('firstname').value\n        let lastname = this.registerForm.get('lastname').value\n        if (password && username){\n            this.http.post(\n                API_URL + '/ws/auth/register',\n                {\n                    'username': username,\n                    'password': password,\n                    'firstname': firstname,\n                    'lastname': lastname,\n                    'lang': this.localeService.currentLang\n                },\n                {\n                    observe: 'response'\n                },\n            ).pipe(\n                tap((data: any) => {\n                    this.notify.success(this.translate.instant('AUTH.registered'))\n                    this.authService.logout()\n                }),\n                catchError((err: any) => {\n                    console.debug(err)\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe();\n        }\n    }\n\n    getErrorMessage(field: any) {\n        if (this.registerForm.get(field).hasError('required')) {\n            return this.translate.instant('AUTH.field_required')\n        }\n        return this.translate.instant('ERROR.unknow_error')\n    }\n\n}\n","<div class=\"mt-32 -mb-32 flex justify-center h-20\">\n    <img src=\"assets/imgs/logo_opencapture.png\" alt=\"Open-Capture For Invoices logo\"/>\n</div>\n<div class=\"flex justify-center items-center\" style=\"height: 85vh\">\n    <mat-card class=\"text-center w-1/4\">\n        <mat-card-title class=\"mb-10\">\n            {{ 'GLOBAL.register' | translate }}\n        </mat-card-title>\n        <mat-card-content>\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"grid grid-cols-2 gap-4\">\n                    <mat-form-field class=\"block\">\n                        <mat-label>{{ 'USER.firstname' | translate }}</mat-label>\n                        <input matInput formControlName=\"firstname\" autocomplete=\"off\" type=\"text\" placeholder=\"{{ 'USER.firstname' | translate }}\" required>\n                        <mat-error *ngIf=\"registerForm.controls.firstname.invalid\">{{ getErrorMessage('firstname') }}</mat-error>\n                    </mat-form-field>\n                    <mat-form-field class=\"block\">\n                        <mat-label>{{ 'USER.lastname' | translate }}</mat-label>\n                        <input matInput formControlName=\"lastname\" autocomplete=\"off\" type=\"text\" placeholder=\"{{ 'USER.lastname' | translate }}\" required>\n                        <mat-error *ngIf=\"registerForm.controls.lastname.invalid\">{{ getErrorMessage('lastname') }}</mat-error>\n                    </mat-form-field>\n                </div>\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.username' | translate }}</mat-label>\n                    <input matInput formControlName=\"username\" autocomplete=\"off\" type=\"text\" placeholder=\"{{ 'USER.username' | translate }}\" required>\n                    <mat-error *ngIf=\"registerForm.controls.username.invalid\">{{ getErrorMessage('username') }}</mat-error>\n                </mat-form-field>\n                <mat-form-field class=\"block\">\n                    <mat-label>{{ 'USER.password' | translate }}</mat-label>\n                    <input matInput formControlName=\"password\" autocomplete=\"off\" type=\"password\" placeholder=\"{{ 'USER.password' | translate }}\" required>\n                    <mat-error *ngIf=\"registerForm.controls.password.invalid\">{{ getErrorMessage('password') }}</mat-error>\n                </mat-form-field>\n                <div class=\"button\">\n                    <button class=\"border-solid border-green-400 border hover:bg-green-400 hover:text-white transition duration-300\" type=\"submit\" mat-button>\n                        {{ 'GLOBAL.submit' | translate }}\n                    </button>\n                </div>\n            </form>\n        </mat-card-content>\n    </mat-card>\n    <div class=\"absolute mt-96 hover:text-green-400 transition duration-500\">\n        <a class=\"relative top-7\" routerLink=\"/login\">\n            {{ 'AUTH.login' | translate }}\n        </a>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { AppMaterialModule } from '../app/app-material.module';\nimport { CustomSnackbarComponent, NotificationService } from './notifications/notifications.service';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { LastUrlService } from './last-url.service';\n\n@NgModule({\n    imports: [\n        AppMaterialModule,\n        CommonModule\n    ],\n    declarations: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent,\n    ],\n    exports: [],\n    entryComponents: [\n        CustomSnackbarComponent,\n        ConfirmDialogComponent\n    ],\n    providers: [NotificationService, LastUrlService]\n})\nexport class ServicesModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Title } from '@angular/platform-browser';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { NotificationService } from \"../services/notifications/notifications.service\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\n\nexport class AppComponent implements OnInit {\n    title   : string = 'Open-Capture For Invoices';\n    image   : string = '';\n    loading : boolean = true;\n\n    constructor(\n        private router: Router,\n        public location: Location,\n        private http: HttpClient,\n        private titleService: Title,\n        private notify:NotificationService,\n        private translate: TranslateService,\n        private activatedRoute: ActivatedRoute\n    ) {\n    }\n\n    ngOnInit() {\n        const appTitle = this.titleService.getTitle();\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd),\n            map(() => {\n                let child = this.activatedRoute.firstChild;\n                let child_image = ''\n                if (child) {\n                    while (child.firstChild) {\n                        child = child.firstChild;\n                    }\n\n                    if (child.snapshot.data['image']) {\n                        child_image = child.snapshot.data['image']\n                    }\n\n                    if (child.snapshot.data['title']) {\n                        return [child.snapshot.data['title'], child_image];\n                    }\n                }\n\n                return [appTitle, child_image]\n            })\n        ).subscribe((data: any) => {\n            let ttl = data[0]\n            this.image = data[1]\n            this.translate.get(ttl).subscribe((data:any)=> {\n                this.titleService.setTitle(data + ' - ' + this.title);\n            });\n            this.loading = false\n        });\n    }\n}\n","<!-- This example requires Tailwind CSS v2.0+ -->\n<app-menu *ngIf=\"this.location.path() !== '/login' && this.location.path() !== '/register' && this.location.path() !== '/404' && loading == false\"></app-menu>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport {NotificationService} from \"../../services/notifications/notifications.service\";\nimport {Router} from \"@angular/router\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(\n      private notify: NotificationService,\n      private router: Router,\n      private translate: TranslateService,\n  ) { }\n\n  ngOnInit(): void {\n    this.translate.get('ERROR.404').subscribe((translated: string) => {\n      this.notify.error(translated)\n      this.router.navigate(['/login'])\n    });\n  }\n\n}\n","<div id=\"preloader\" class=\"fixed inset-0 bg-white z-50\">\n    <div id=\"status\" class=\"flex absolute items-center justify-center w-full h-0 top-1/2\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 74.4 81.9\" width=\"300\"\n             height=\"300\" xml:space=\"preserve\">\n                <linearGradient id=\"fill\" x1=\"0.5\" y1=\"1\" x2=\"0.5\" y2=\"0\">\n                    <stop offset=\"0%\" stop-color=\"#76B442\">\n                        <animate attributeName=\"stop-color\" values=\"#76B442; #A7A8AA; #76B442\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n\n                    <stop offset=\"100%\" stop-color=\"#A7A8AA\">\n                        <animate attributeName=\"stop-color\" values=\"#A7A8AA; #76B442; #A7A8AA\" dur=\"1s\"\n                                 repeatCount=\"indefinite\"></animate>\n                    </stop>\n                </linearGradient>\n            <path fill=\"url(#fill)\" d=\"M1.9,79.4c-1.5-1.5,0.3-4.7,8.2-14.2c4.8-5.7,10.1-12.3,11.9-14.6l3.3-4.1l-1.6-1.7\n                        c-7.2-7.4-8.6-20.6-3-29.7C27.9,3.4,43.8-1.4,56.8,4.2c6,2.6,11.8,8,14.4,13.5c2.7,5.6,2.5,15.4-0.4,21.1\n                        c-6.6,13-22.8,18.9-36.3,13.3c-2.2-1-4.1-1.3-4.4-1c-0.3,0.4-5.8,7-12.2,14.8C8.8,76.8,5.7,80,4.3,80C3.3,80,2.1,79.7,1.9,79.4\n                        L1.9,79.4z M53.5,48.8c5.7-2,10.7-6.3,13.4-11.3c2.8-5.2,2.9-13.8,0.1-18.9c-4.5-8.4-12-12.8-21.9-12.8c-26.3,0-33.2,33.2-9,42.7\n                        C42.2,50.9,47.3,51,53.5,48.8L53.5,48.8z\"></path>\n        </svg>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { UserService } from \"../../../../services/user.service\";\nimport { AuthService } from \"../../../../services/auth.service\";\nimport { NotificationService } from \"../../../../services/notifications/notifications.service\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { API_URL } from \"../../../env\";\nimport { of } from \"rxjs\";\nimport { ConfirmDialogComponent } from \"../../../../services/confirm-dialog/confirm-dialog.component\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { LocalStorageService } from \"../../../../services/local-storage.service\";\nimport { LastUrlService } from \"../../../../services/last-url.service\";\nimport {Sort} from \"@angular/material/sort\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './list.component.html',\n    styleUrls: ['./list.component.scss']\n})\n\nexport class UserListComponent implements OnInit {\n    columnsToDisplay: string[]    = ['id', 'username', 'firstname', 'lastname', 'role','status', 'actions'];\n    users : any                   = [];\n    pageSize : number             = 10;\n    pageIndex: number             = 0;\n    total: number                 = 0;\n    offset: number                = 0;\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private notify: NotificationService,\n        private dialog: MatDialog,\n        private routerExtService: LastUrlService,\n        private localeStorageService: LocalStorageService,\n    ) { }\n\n\n    ngOnInit(): void {\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('profile/') || lastUrl == '/'){\n            if (this.localeStorageService.get('usersPageIndex'))\n                this.pageIndex = parseInt(<string>this.localeStorageService.get('usersPageIndex'))\n            this.offset = this.pageSize * (this.pageIndex)\n        }else\n            this.localeStorageService.remove('usersPageIndex')\n        this.loadUsers()\n    }\n\n    onPageChange(event: any){\n        this.pageSize = event.pageSize\n        this.offset = this.pageSize * (event.pageIndex)\n        this.localeStorageService.save('usersPageIndex', event.pageIndex)\n        this.loadUsers()\n    }\n\n    loadUsers(): void{\n        let headers = this.authService.headers;\n        let roles: never[] = []\n        this.http.get(API_URL + '/ws/roles/list', {headers}).pipe(\n            tap((data: any) => {\n                roles = data.roles\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n\n        this.http.get(API_URL + '/ws/users/list?limit=' + this.pageSize + '&offset=' + this.offset, {headers}).pipe(\n            tap((data: any) => {\n                this.total = data.users[0].total\n                this.users = data.users;\n                if (roles){\n                    this.users.forEach((user: any) => {\n                        roles.forEach((element: any) => {\n                            if (user.role == element.id){\n                                user.role_label = element.label\n                            }\n                        })\n                    });\n                }\n            }),\n            catchError((err: any) => {\n                console.debug(err);\n                this.notify.handleErrors(err);\n                return of(false);\n            })\n        ).subscribe()\n    }\n\n    deleteConfirmDialog(user_id: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_delete', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.delete'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.deleteUser(user_id)\n            }\n        });\n    }\n\n    disableConfirmDialog(user_id: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_disable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.disable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.disableUser(user_id)\n            }\n        });\n    }\n\n    enableConfirmDialog(user_id: number, user: string) {\n        const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n            data:{\n                confirmTitle        : this.translate.instant('GLOBAL.confirm'),\n                confirmText         : this.translate.instant('USER.confirm_enable', {\"user\": user}),\n                confirmButton       : this.translate.instant('GLOBAL.enable'),\n                confirmButtonColor  : \"warn\",\n                cancelButton        : this.translate.instant('GLOBAL.cancel'),\n            },\n            width: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            if(result){\n                this.enableUser(user_id)\n            }\n        });\n    }\n\n    deleteUser(user_id: number){\n        let headers = this.authService.headers;\n        if (user_id !== undefined){\n            this.http.delete(API_URL + '/ws/users/delete/' + user_id, {headers}).pipe(\n                tap((data: any) => {\n                    this.loadUsers()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    disableUser(user_id: number){\n        let headers = this.authService.headers;\n        if (user_id !== undefined){\n            this.http.put(API_URL + '/ws/users/disable/' + user_id, null, {headers}).pipe(\n                tap((data: any) => {\n                    this.loadUsers()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    enableUser(user_id: number){\n        let headers = this.authService.headers;\n        if (user_id !== undefined){\n            this.http.put(API_URL + '/ws/users/enable/' + user_id, null, {headers}).pipe(\n                tap((data: any) => {\n                    this.loadUsers()\n                }),\n                catchError((err: any) => {\n                    console.debug(err);\n                    this.notify.handleErrors(err);\n                    return of(false);\n                })\n            ).subscribe()\n        }\n    }\n\n    sortData(sort: Sort){\n        let data = this.users.slice()\n        if(!sort.active || sort.direction === ''){\n            this.users = data\n            return;\n        }\n\n        this.users = data.sort((a: any, b: any) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'id': return this.compare(a.id, b.id, isAsc);\n                case 'username': return this.compare(a.username, b.username, isAsc);\n                case 'firstname': return this.compare(a.firstname, b.firstname, isAsc);\n                case 'lastname': return this.compare(a.lastname, b.lastname, isAsc);\n                case 'role': return this.compare(a.role, b.role, isAsc);\n                case 'status': return this.compare(a.status, b.status, isAsc);\n                default: return 0;\n            }\n        });\n\n    }\n\n    compare(a: number | string, b: number | string, isAsc: boolean) {\n        return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n}\n","<div>\n    <mat-paginator showFirstLastButtons\n            [length]=\"this.total\"\n            [pageSize]=\"pageSize\"\n            [pageIndex]=\"pageIndex\"\n            [pageSizeOptions]=\"[5, 10, 15, 20, 50]\"\n            (page)=\"onPageChange($event)\">\n    </mat-paginator>\n    <mat-table matSort [dataSource]=\"users\" (matSortChange)=\"sortData($event)\" class=\"w-full\">\n        <ng-container matColumnDef=\"id\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'GLOBAL.id' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.id}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"username\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.username' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.username}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"firstname\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.firstname' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.firstname}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"lastname\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.lastname' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.lastname}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"role\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.role' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\"> {{element.role_label}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"status\">\n            <mat-header-cell mat-sort-header *matHeaderCellDef> {{ 'USER.status' | translate }} </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <span *ngIf=\"element.enabled \"> <span class=\"text-green-400 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'USER.active' | translate }}</span>\n                <span *ngIf=\"!element.enabled\"> <span class=\"text-red-600 text-4xl relative top-2 leading-4\">&bull;</span> {{ 'USER.inactive' | translate }}</span>\n            </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef> </mat-header-cell>\n            <mat-cell *matCellDef=\"let element\">\n                <button routerLink=\"/profile/{{element.id}}\"\n                        matTooltip=\"{{ 'USER.update' | translate }}\" mat-icon-button\n                        class=\"inline-block align-text-top\">\n                    <i class=\"btn-action-icon fas fa-edit fa-lg\"></i>\n                </button>\n                <button *ngIf=\"element.role_label !== 'SuperUtilisateur' && element.enabled\"\n                        (click)=\"$event.stopPropagation();disableConfirmDialog(element.id, element.username)\"\n                        matTooltip=\"{{ 'USER.disable' | translate }}\" mat-icon-button\n                        class=\"inline-block align-text-top\">\n                    <i class=\"btn-action-icon fas fa-pause fa-lg\"></i>\n                </button>\n                <button *ngIf=\"element.role_label !== 'SuperUtilisateur' && !element.enabled\"\n                        (click)=\"$event.stopPropagation();enableConfirmDialog(element.id, element.username)\"\n                        matTooltip=\"{{ 'USER.enable' | translate }}\" mat-icon-button\n                        class=\"inline-block align-text-top\">\n                    <i class=\"btn-action-icon fas fa-play fa-lg\"></i>\n                </button>\n                <button *ngIf=\"element.role_label !== 'SuperUtilisateur'\"\n                        (click)=\"$event.stopPropagation();deleteConfirmDialog(element.id, element.username)\"\n                        matTooltip=\"{{ 'GLOBAL.delete' | translate }}\" mat-icon-button\n                        class=\"inline-block align-text-top\">\n                    <i class=\"btn-action-icon fas fa-trash fa-lg\"></i>\n                </button>\n            </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\n                 routerLink=\"/profile/{{row.id}}\"\n                 class=\"cursor-pointer hover:text-green-400 hover:shadow-md transition-colors duration-300\"></mat-row>\n    </mat-table>\n</div>","import {Injectable} from '@angular/core';\nimport {AuthService} from \"./auth.service\";\nimport {ActivatedRouteSnapshot, Router, RouterStateSnapshot} from \"@angular/router\";\nimport {NotificationService} from \"./notifications/notifications.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginRequiredService {\n\n    constructor(\n        private authService: AuthService,\n        private notify: NotificationService,\n        private translate: TranslateService,\n    ) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        if (this.authService.getToken()) {\n            return true;\n        }\n        else {\n            this.translate.get('AUTH.not_connected').subscribe((translated: string) => {\n                this.authService.setCachedUrl(state.url.replace(/^\\//g, ''));\n                this.notify.error(translated)\n                this.authService.logout()\n            });\n            return false;\n        }\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {FormBuilder} from \"@angular/forms\";\nimport {AuthService} from \"../../../services/auth.service\";\nimport {UserService} from \"../../../services/user.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LocalStorageService} from \"../../../services/local-storage.service\";\nimport {LastUrlService} from \"../../../services/last-url.service\";\n\n@Component({\n    selector: 'app-panel',\n    templateUrl: './panel.component.html',\n    styleUrls: ['./panel.component.scss']\n})\n\nexport class PanelComponent implements OnInit {\n    isMenuOpen : boolean            = true;\n    selectedSetting : string        = \"users\";\n    selectedParentSetting : string  = \"general\";\n    searchSetting : string          = \"\";\n    settingListOpenState : boolean  = true;\n    settingsParent : any[]          = [\n        {\n            \"id\"    : \"general\",\n            \"label\" : this.translate.instant(\"SETTINGS.general\"),\n        },\n        {\n            \"id\"    : \"verifier\",\n            \"label\" : this.translate.instant(\"SETTINGS.verifier\"),\n        },\n        {\n            \"id\"    : \"splitter\",\n            \"label\" : this.translate.instant(\"SETTINGS.splitter\"),\n        },\n    ]\n    settings : any                  = {\n        \"general\" : [\n            {\n                \"id\"    : \"users\",\n                \"label\" : this.translate.instant(\"SETTINGS.users_list\"),\n                \"icon\"  : \"fas fa-user\",\n            },\n            {\n                \"id\"    : \"roles\",\n                \"label\" : this.translate.instant(\"SETTINGS.roles_list\"),\n                \"icon\"  : \"fas fa-users\",\n            },\n            {\n                \"id\"    : \"custom-fields\",\n                \"label\" : this.translate.instant(\"SETTINGS.custom_fields\"),\n                \"icon\"  : \"fas fa-code\",\n            },\n            {\n                \"id\"    : \"version-update\",\n                \"label\" : this.translate.instant(\"SETTINGS.version_and_update\"),\n                \"icon\"  : \"fas fa-sync\",\n            },\n            {\n                \"id\"    : \"about-us\",\n                \"label\" : this.translate.instant(\"SETTINGS.abouts_us\"),\n                \"icon\"  : \"fas fa-address-card\",\n            }\n        ],\n        \"splitter\" : [\n            {\n                \"id\"    : \"separator\",\n                \"label\" : this.translate.instant(\"SETTINGS.document_separator\"),\n                \"icon\"  : \"fas fa-qrcode\",\n            },\n            {\n                \"id\"    : \"document-type\",\n                \"label\" : this.translate.instant(\"SETTINGS.document_type\"),\n                \"icon\"  : \"fas fa-file\",\n            },\n            {\n                \"id\"    : \"connector\",\n                \"label\" : this.translate.instant(\"SETTINGS.connector_EDM\"),\n                \"icon\"  : \"fas fa-link\",\n            }\n        ]\n    }\n\n    constructor(\n        private http: HttpClient,\n        private router: Router,\n        private route: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private authService: AuthService,\n        public userService: UserService,\n        private translate: TranslateService,\n        private routerExtService: LastUrlService,\n        private localeStorageService: LocalStorageService\n    ) { }\n\n    ngOnInit(): void {\n        // If we came from anoter route than profile or settings panel, reset saved settings before launch loadUsers function\n        let lastUrl = this.routerExtService.getPreviousUrl()\n        if (lastUrl.includes('role/') || lastUrl == '/' || lastUrl.includes('profile/')){\n            let selectedSettings = this.localeStorageService.get('selectedSettings')\n            let selectedParentSettings = this.localeStorageService.get('selectedParentSettings')\n            if (selectedSettings)\n                this.selectedSetting = selectedSettings\n\n            if (selectedParentSettings)\n                this.selectedParentSetting = selectedParentSettings\n        }else{\n            this.localeStorageService.remove('selectedSettings')\n            this.localeStorageService.remove('selectedParentSettings')\n        }\n    }\n\n    toggleMenu() {\n        this.isMenuOpen = !this.isMenuOpen;\n    }\n\n    changeSetting(settingId: string, settingParentId: string) {\n        this.selectedSetting = settingId;\n        this.selectedParentSetting = settingParentId\n        this.localeStorageService.save('selectedSettings', settingId)\n        this.localeStorageService.save('selectedParentSettings',settingParentId)\n    }\n}\n","<mat-drawer-container class=\"w-full min-h-screen left-auto bg-white\">\n    <mat-drawer #drawer mode=\"side\" opened class=\"w-1/6\">\n        <h3 class=\"text-center text-gray-900\">{{ \"SETTINGS.administration\" | translate }}</h3>\n        <div class=\"search-input\">\n            <mat-form-field class=\"absolute mt-4 top-4 mx-4 w-5/6\" appearance=\"outline\">\n                <mat-label>{{ 'SPLITTER.search' | translate }}</mat-label>\n                <input id=\"search-input\" matInput [(ngModel)]=\"searchSetting\">\n            </mat-form-field>\n        </div>\n        <mat-accordion class=\"setting-list absolute top-24 w-full\">\n            <mat-expansion-panel *ngFor=\"let parent of settingsParent\"\n                                 [expanded]=\"this.selectedParentSetting == parent['id']\"\n                                 (opened)=\"settingListOpenState = true\"\n                                 (closed)=\"settingListOpenState = false\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        {{ parent['label'] | translate }}\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"w-full border-t-2 border-gray-600\">\n                    <div class=\"border-b border-gray-400 \" *ngFor=\"let setting of settings[parent['id']]; let cpt = index\">\n                        <button mat-button [class.text-green-400]=\"selectedSetting === setting['id']\"\n                                class=\"font-normal w-full h-20 flex justify-center items-center text-center\"\n                                (click)=\"changeSetting(setting['id'], parent['id'])\">\n                            <i class=\"absolute left-4 w-10 h-10 rounded-full flex items-center justify-center fa-lg {{setting['icon']}}\"> </i>\n                            <p [class.font-medium]=\"selectedSetting === setting['id']\" class=\"m-0\">\n                                {{ setting['label'] | translate }}\n                            </p>\n                        </button>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </mat-drawer>\n    <mat-drawer-content class=\"p-10\">\n        <button mat-icon-button (click)=\"drawer.toggle(); toggleMenu();\"\n                class=\"absolute top-0 left-0\">\n            <i [class.fa-arrow-right]=\"!this.isMenuOpen\" class=\"fas fa-arrow-left fa-2x\"></i>\n        </button>\n        <div [ngSwitch]=\"selectedSetting\">\n            <app-users-list *ngSwitchCase=\"'users'\"></app-users-list>\n            <app-roles *ngSwitchCase=\"'roles'\"></app-roles>\n<!--            <app-connector *ngSwitchCase=\"'connector'\"></app-connector>-->\n<!--            <app-custom-fields *ngSwitchCase=\"'custom-fields'\"></app-custom-fields>-->\n<!--            <app-document-type *ngSwitchCase=\"'document-type'\"></app-document-type>-->\n<!--            <app-separator *ngSwitchCase=\"'separator'\"></app-separator>-->\n            <app-version-update *ngSwitchCase=\"'version-update'\"></app-version-update>\n            <app-about-us *ngSwitchCase=\"'about-us'\"></app-about-us>\n        </div>\n    </mat-drawer-content>\n</mat-drawer-container>\n"],"sourceRoot":"webpack:///"}