/**
 * @fileoverview added by tsickle
 * Generated from: lib/store/ngsg-store.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function NgsgState() { }
if (false) {
    /** @type {?} */
    NgsgState.prototype.items;
    /** @type {?} */
    NgsgState.prototype.classes;
    /** @type {?} */
    NgsgState.prototype.selectedItems;
}
export class NgsgStoreService {
    constructor() {
        this.state = new Map();
    }
    /**
     * @param {?} group
     * @param {?=} items
     * @param {?=} classes
     * @return {?}
     */
    initState(group, items = [], classes = {}) {
        this.state.set(group, { items: [...items], classes, selectedItems: [] });
    }
    /**
     * @param {?} group
     * @param {?} dragElement
     * @return {?}
     */
    addSelectedItem(group, dragElement) {
        this.state.get(group).selectedItems.push(dragElement);
    }
    /**
     * @param {?} group
     * @param {?} item
     * @return {?}
     */
    removeSelectedItem(group, item) {
        /** @type {?} */
        const updatedItems = this.state.get(group).selectedItems
            .filter((/**
         * @param {?} dragElement
         * @return {?}
         */
        (dragElement) => dragElement.node !== item));
        this.setSelectedItems(group, updatedItems);
    }
    /**
     * @param {?} group
     * @param {?} items
     * @return {?}
     */
    setItems(group, items) {
        this.state.get(group).items = [...items];
    }
    /**
     * @param {?} group
     * @return {?}
     */
    getItems(group) {
        return this.state.get(group).items;
    }
    /**
     * @param {?} group
     * @return {?}
     */
    hasItems(group) {
        return this.getItems(group).length > 0;
    }
    /**
     * @param {?} group
     * @return {?}
     */
    hasGroup(group) {
        return this.state.has(group);
    }
    /**
     * @param {?} group
     * @return {?}
     */
    getSelectedItems(group) {
        return this.state.get(group).selectedItems;
    }
    /**
     * @param {?} group
     * @param {?} selectedItems
     * @return {?}
     */
    setSelectedItems(group, selectedItems) {
        this.state.get(group).selectedItems = [...selectedItems];
    }
    /**
     * @param {?} group
     * @return {?}
     */
    getFirstSelectItem(group) {
        return this.state.get(group).selectedItems[0];
    }
    /**
     * @param {?} group
     * @return {?}
     */
    hasSelectedItems(group) {
        return this.getSelectedItems(group).length > 0;
    }
    /**
     * @param {?} group
     * @return {?}
     */
    resetSelectedItems(group) {
        this.setSelectedItems(group, []);
    }
    /**
     * @param {?} group
     * @return {?}
     */
    getClasses(group) {
        return this.state.get(group).classes;
    }
}
NgsgStoreService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ NgsgStoreService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgStoreService_Factory() { return new NgsgStoreService(); }, token: NgsgStoreService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgsgStoreService.prototype.state;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmdzZy1zdG9yZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctc29ydGdyaWQvc3JjL2xpYi9zdG9yZS9uZ3NnLXN0b3JlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDOzs7OztBQUt6QywrQkFJQzs7O0lBSEMsMEJBQWE7O0lBQ2IsNEJBQWE7O0lBQ2Isa0NBQWlDOztBQU1uQyxNQUFNLE9BQU8sZ0JBQWdCO0lBSDdCO1FBSVUsVUFBSyxHQUFHLElBQUksR0FBRyxFQUFxQixDQUFDO0tBdUQ5Qzs7Ozs7OztJQXJEUSxTQUFTLENBQUMsS0FBYSxFQUFFLFFBQWUsRUFBRSxFQUFFLFVBQWUsRUFBRTtRQUNsRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsRUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsRUFBRSxFQUFDLENBQUMsQ0FBQztJQUN6RSxDQUFDOzs7Ozs7SUFFTSxlQUFlLENBQUMsS0FBYSxFQUFFLFdBQTRCO1FBQ2hFLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7Ozs7O0lBRU0sa0JBQWtCLENBQUMsS0FBYSxFQUFFLElBQWE7O2NBQzlDLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxhQUFhO2FBQ3JELE1BQU07Ozs7UUFBQyxDQUFDLFdBQTRCLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssSUFBSSxFQUFDO1FBQ3RFLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7Ozs7O0lBRU0sUUFBUSxDQUFDLEtBQWEsRUFBRSxLQUFVO1FBQ3ZDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDLENBQUM7SUFDM0MsQ0FBQzs7Ozs7SUFFTSxRQUFRLENBQUMsS0FBYTtRQUMzQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUNyQyxDQUFDOzs7OztJQUVNLFFBQVEsQ0FBQyxLQUFhO1FBQzNCLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Ozs7O0lBRU0sUUFBUSxDQUFDLEtBQWE7UUFDM0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVNLGdCQUFnQixDQUFDLEtBQWE7UUFDbkMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxhQUFhLENBQUM7SUFDN0MsQ0FBQzs7Ozs7O0lBRU0sZ0JBQWdCLENBQUMsS0FBYSxFQUFFLGFBQW9CO1FBQ3pELElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLGFBQWEsR0FBRyxDQUFDLEdBQUcsYUFBYSxDQUFDLENBQUM7SUFDM0QsQ0FBQzs7Ozs7SUFFTSxrQkFBa0IsQ0FBQyxLQUFhO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hELENBQUM7Ozs7O0lBRU0sZ0JBQWdCLENBQUMsS0FBYTtRQUNuQyxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2pELENBQUM7Ozs7O0lBRU0sa0JBQWtCLENBQUMsS0FBYTtRQUNyQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7O0lBRU0sVUFBVSxDQUFDLEtBQWE7UUFDN0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUM7SUFDdkMsQ0FBQzs7O1lBMURGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7Ozs7Ozs7SUFFQyxpQ0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQge05nc2dEcmFnZWxlbWVudH0gZnJvbSAnLi4vc2hhcmVkL25nc2ctZHJhZ2VsZW1lbnQubW9kZWwnO1xuXG4vLyBUT0RPIGFkZCBpbnRlcmZhY2VzIGZvciBjbGFzc2VzXG5leHBvcnQgaW50ZXJmYWNlIE5nc2dTdGF0ZSB7XG4gIGl0ZW1zOiBhbnlbXTtcbiAgY2xhc3NlczogYW55O1xuICBzZWxlY3RlZEl0ZW1zOiBOZ3NnRHJhZ2VsZW1lbnRbXTtcbn1cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTmdzZ1N0b3JlU2VydmljZSB7XG4gIHByaXZhdGUgc3RhdGUgPSBuZXcgTWFwPHN0cmluZywgTmdzZ1N0YXRlPigpO1xuXG4gIHB1YmxpYyBpbml0U3RhdGUoZ3JvdXA6IHN0cmluZywgaXRlbXM6IGFueVtdID0gW10sIGNsYXNzZXM6IGFueSA9IHt9KTogdm9pZCB7XG4gICAgdGhpcy5zdGF0ZS5zZXQoZ3JvdXAsIHtpdGVtczogWy4uLml0ZW1zXSwgY2xhc3Nlcywgc2VsZWN0ZWRJdGVtczogW119KTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRTZWxlY3RlZEl0ZW0oZ3JvdXA6IHN0cmluZywgZHJhZ0VsZW1lbnQ6IE5nc2dEcmFnZWxlbWVudCk6IHZvaWQge1xuICAgIHRoaXMuc3RhdGUuZ2V0KGdyb3VwKS5zZWxlY3RlZEl0ZW1zLnB1c2goZHJhZ0VsZW1lbnQpO1xuICB9XG5cbiAgcHVibGljIHJlbW92ZVNlbGVjdGVkSXRlbShncm91cDogc3RyaW5nLCBpdGVtOiBFbGVtZW50KTogdm9pZCB7XG4gICAgY29uc3QgdXBkYXRlZEl0ZW1zID0gdGhpcy5zdGF0ZS5nZXQoZ3JvdXApLnNlbGVjdGVkSXRlbXNcbiAgICAgIC5maWx0ZXIoKGRyYWdFbGVtZW50OiBOZ3NnRHJhZ2VsZW1lbnQpID0+IGRyYWdFbGVtZW50Lm5vZGUgIT09IGl0ZW0pO1xuICAgIHRoaXMuc2V0U2VsZWN0ZWRJdGVtcyhncm91cCwgdXBkYXRlZEl0ZW1zKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRJdGVtcyhncm91cDogc3RyaW5nLCBpdGVtczogYW55KTogdm9pZCB7XG4gICAgdGhpcy5zdGF0ZS5nZXQoZ3JvdXApLml0ZW1zID0gWy4uLml0ZW1zXTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRJdGVtcyhncm91cDogc3RyaW5nKTogYW55W10ge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmdldChncm91cCkuaXRlbXM7XG4gIH1cblxuICBwdWJsaWMgaGFzSXRlbXMoZ3JvdXA6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmdldEl0ZW1zKGdyb3VwKS5sZW5ndGggPiAwO1xuICB9XG5cbiAgcHVibGljIGhhc0dyb3VwKGdyb3VwOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5oYXMoZ3JvdXApO1xuICB9XG5cbiAgcHVibGljIGdldFNlbGVjdGVkSXRlbXMoZ3JvdXA6IHN0cmluZyk6IE5nc2dEcmFnZWxlbWVudFtdIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXQoZ3JvdXApLnNlbGVjdGVkSXRlbXM7XG4gIH1cblxuICBwdWJsaWMgc2V0U2VsZWN0ZWRJdGVtcyhncm91cDogc3RyaW5nLCBzZWxlY3RlZEl0ZW1zOiBhbnlbXSk6IHZvaWQge1xuICAgIHRoaXMuc3RhdGUuZ2V0KGdyb3VwKS5zZWxlY3RlZEl0ZW1zID0gWy4uLnNlbGVjdGVkSXRlbXNdO1xuICB9XG5cbiAgcHVibGljIGdldEZpcnN0U2VsZWN0SXRlbShncm91cDogc3RyaW5nKTogTmdzZ0RyYWdlbGVtZW50IHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXQoZ3JvdXApLnNlbGVjdGVkSXRlbXNbMF07XG4gIH1cblxuICBwdWJsaWMgaGFzU2VsZWN0ZWRJdGVtcyhncm91cDogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0U2VsZWN0ZWRJdGVtcyhncm91cCkubGVuZ3RoID4gMDtcbiAgfVxuXG4gIHB1YmxpYyByZXNldFNlbGVjdGVkSXRlbXMoZ3JvdXA6IHN0cmluZyk6IHZvaWQge1xuICAgIHRoaXMuc2V0U2VsZWN0ZWRJdGVtcyhncm91cCwgW10pO1xuICB9XG5cbiAgcHVibGljIGdldENsYXNzZXMoZ3JvdXA6IHN0cmluZyk6IGFueVtdIHtcbiAgICByZXR1cm4gdGhpcy5zdGF0ZS5nZXQoZ3JvdXApLmNsYXNzZXM7XG4gIH1cbn1cbiJdfQ==