import { AfterViewInit, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { ScrollHelperService } from './helpers/scroll/scroll-helper.service';
import { NgsgSelectionService } from './mutliselect/ngsg-selection.service';
import { NgsgEventsService } from './shared/ngsg-events.service';
import { NgsgOrderChange } from './shared/ngsg-order-change.model';
import { NgsgReflectService } from './sort/reflection/ngsg-reflect.service';
import { NgsgSortService } from './sort/sort/ngsg-sort.service';
import { NgsgStoreService } from './store/ngsg-store.service';
export declare class NgsgItemDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    el: ElementRef;
    private sortService;
    private selectionService;
    private reflectService;
    private ngsgStore;
    private ngsgEventService;
    private scrollHelperService;
    ngSortGridGroup: string;
    ngSortGridItems: any[];
    scrollPointTop: number;
    scrollPointBottom: number;
    scrollSpeed: number;
    autoScroll: boolean;
    sorted: EventEmitter<NgsgOrderChange<any>>;
    private selected;
    private destroy$;
    constructor(el: ElementRef, sortService: NgsgSortService, selectionService: NgsgSelectionService, reflectService: NgsgReflectService, ngsgStore: NgsgStoreService, ngsgEventService: NgsgEventsService, scrollHelperService: ScrollHelperService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    dragStart(event: any): void;
    dragEnter(): void;
    dragOver(event: any): boolean;
    drop(): void;
    clicked(): void;
    private isItemCurrentlySelected;
    private occuredOnHost;
}
