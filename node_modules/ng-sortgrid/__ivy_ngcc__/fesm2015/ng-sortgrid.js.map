{"version":3,"file":"ng-sortgrid.js","sources":["../../../projects/ng-sortgrid/src/lib/helpers/element/ngsg-elements.helper.ts","../../../projects/ng-sortgrid/src/lib/helpers/scroll/scroll-helper.service.ts","../../../projects/ng-sortgrid/src/lib/helpers/class/ngsg-class.service.ts","../../../projects/ng-sortgrid/src/lib/store/ngsg-store.service.ts","../../../projects/ng-sortgrid/src/lib/mutliselect/ngsg-selection.service.ts","../../../projects/ng-sortgrid/src/lib/shared/ngsg-events.service.ts","../../../projects/ng-sortgrid/src/lib/sort/reflection/ngsg-reflect.service.ts","../../../projects/ng-sortgrid/src/lib/sort/sort/ngsg-sort.service.ts","../../../projects/ng-sortgrid/src/lib/ngsg-item.directive.ts","../../../projects/ng-sortgrid/src/lib/ngsg.module.ts","../../../projects/ng-sortgrid/src/lib/shared/ngsg-order-change.model.ts"],"names":[],"mappings":"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","sourcesContent":["export class NgsgElementsHelper {\n\n  public static findIndex(element: Element): number {\n    const allElements = element.parentNode.children;\n    return Array.prototype.indexOf.call(allElements, element);\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nexport interface ScrollPoints {\n  top?: number;\n  bottom?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollHelperService {\n\n  private window: WindowProxy;\n  private DEFAULT_SCROLLSPEED = 50;\n  private SCROLL_BUFFER = 50;\n\n  constructor(@Inject(DOCUMENT) private document) {\n    this.window = document.defaultView;\n  }\n\n  public scrollIfNecessary(event: any, scrollPoints: ScrollPoints = {}, scrollSpeed?: number): void {\n    const currentPosition = event.pageY - this.window.scrollY;\n\n    if (this.isTopScrollNeeded(currentPosition, scrollPoints.top)) {\n      this.window.scrollBy({top: -scrollSpeed || -this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n      return;\n    }\n\n    if (this.isBottomScrollNeeded(currentPosition, scrollPoints.bottom)) {\n      this.window.scrollBy({top: scrollSpeed || this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n    }\n  }\n\n  private isTopScrollNeeded(currentPosition: number, scrollPointTop: number): boolean {\n    return scrollPointTop ? currentPosition < scrollPointTop :\n      currentPosition < this.SCROLL_BUFFER;\n  }\n\n  private isBottomScrollNeeded(currentPosition: number, scrollPointBottom: number): boolean {\n    return scrollPointBottom ? currentPosition > scrollPointBottom :\n      currentPosition > this.window.innerHeight - this.SCROLL_BUFFER;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgClassService {\n  private SELECTED_DEFAULT_CLASS = 'ng-sg-selected';\n  private PLACEHOLDER_DEFAULT_CLASS = 'ng-sg-placeholder';\n  private DROPPED_DEFAULT_CLASS = 'ng-sg-dropped';\n\n  public addPlaceHolderClass(element: Element): void {\n    element.classList.add(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public removePlaceHolderClass(element: Element): void {\n    element.classList.remove(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public addDroppedClass(element: Element): void {\n    element.classList.add(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public removeDroppedClass(element: Element): void {\n    element.classList.remove(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public addSelectedClass(element: Element): void {\n    element.classList.add(this.SELECTED_DEFAULT_CLASS);\n  }\n\n  public removeSelectedClass(element: Element): void {\n    element.classList.remove(this.SELECTED_DEFAULT_CLASS);\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgsgDragelement} from '../shared/ngsg-dragelement.model';\n\n// TODO add interfaces for classes\nexport interface NgsgState {\n  items: any[];\n  classes: any;\n  selectedItems: NgsgDragelement[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgStoreService {\n  private state = new Map<string, NgsgState>();\n\n  public initState(group: string, items: any[] = [], classes: any = {}): void {\n    this.state.set(group, {items: [...items], classes, selectedItems: []});\n  }\n\n  public addSelectedItem(group: string, dragElement: NgsgDragelement): void {\n    this.state.get(group).selectedItems.push(dragElement);\n  }\n\n  public removeSelectedItem(group: string, item: Element): void {\n    const updatedItems = this.state.get(group).selectedItems\n      .filter((dragElement: NgsgDragelement) => dragElement.node !== item);\n    this.setSelectedItems(group, updatedItems);\n  }\n\n  public setItems(group: string, items: any): void {\n    this.state.get(group).items = [...items];\n  }\n\n  public getItems(group: string): any[] {\n    return this.state.get(group).items;\n  }\n\n  public hasItems(group: string): boolean {\n    return this.getItems(group).length > 0;\n  }\n\n  public hasGroup(group: string): boolean {\n    return this.state.has(group);\n  }\n\n  public getSelectedItems(group: string): NgsgDragelement[] {\n    return this.state.get(group).selectedItems;\n  }\n\n  public setSelectedItems(group: string, selectedItems: any[]): void {\n    this.state.get(group).selectedItems = [...selectedItems];\n  }\n\n  public getFirstSelectItem(group: string): NgsgDragelement {\n    return this.state.get(group).selectedItems[0];\n  }\n\n  public hasSelectedItems(group: string): boolean {\n    return this.getSelectedItems(group).length > 0;\n  }\n\n  public resetSelectedItems(group: string): void {\n    this.setSelectedItems(group, []);\n  }\n\n  public getClasses(group: string): any[] {\n    return this.state.get(group).classes;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {fromEvent, merge, NEVER, Observable, Subject} from 'rxjs';\nimport {filter, mapTo, switchMap, withLatestFrom} from 'rxjs/operators';\n\nimport {NgsgClassService} from '../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../helpers/element/ngsg-elements.helper';\nimport {NgsgStoreService} from '../store/ngsg-store.service';\n\nenum ChangeAction {\n  ADD,\n  REMOVE\n}\n\ninterface SelectionChange {\n  key: string;\n  item: Element;\n  action: ChangeAction;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSelectionService {\n  private COMMAND_KEY = 'Meta';\n  private CONTROL_KEY = 'Control';\n\n  private selectionChange$ = new Subject<SelectionChange>();\n\n  constructor(private classService: NgsgClassService, private ngsgStore: NgsgStoreService) {\n    const selectionKeyPressed$ = this.selectionKeyPressed();\n    this.selectionChange$\n      .pipe(withLatestFrom(selectionKeyPressed$))\n      .subscribe(([selectionChange, selectionKeyPressed]) => {\n        selectionKeyPressed\n          ? this.handleSelectionChange(selectionChange)\n          : this.resetSelectedItems(selectionChange.key);\n      });\n  }\n\n  private resetSelectedItems(group: string): void {\n    this.ngsgStore.getSelectedItems(group).forEach(item => this.classService.removeSelectedClass(item.node));\n    this.ngsgStore.resetSelectedItems(group);\n  }\n\n  private handleSelectionChange(selectionChange: SelectionChange): void {\n    if (selectionChange.action === ChangeAction.ADD) {\n      this.classService.addSelectedClass(selectionChange.item);\n      this.ngsgStore.addSelectedItem(selectionChange.key, {\n        node: selectionChange.item,\n        originalIndex: NgsgElementsHelper.findIndex(selectionChange.item)\n      });\n    }\n    if (selectionChange.action === ChangeAction.REMOVE) {\n      this.classService.removeSelectedClass(selectionChange.item);\n      this.ngsgStore.removeSelectedItem(selectionChange.key, selectionChange.item);\n    }\n  }\n\n  private selectionKeyPressed(): Observable<boolean> {\n    const selectionKeyPressed = fromEvent(window, 'keydown').pipe(\n      filter(\n        (keyboardEvent: KeyboardEvent) =>\n          keyboardEvent.key === this.COMMAND_KEY || keyboardEvent.key === this.CONTROL_KEY\n      ),\n      mapTo(true)\n    );\n    const keyup = fromEvent(window, 'keyup').pipe(mapTo(false));\n    return merge(selectionKeyPressed, keyup);\n  }\n\n  public selectElementIfNoSelection(group: string, dragedElement: Element): void {\n    if (this.ngsgStore.hasSelectedItems(group)) {\n      return;\n    }\n    this.ngsgStore.addSelectedItem(group, {\n      node: dragedElement,\n      originalIndex: NgsgElementsHelper.findIndex(dragedElement)\n    });\n  }\n\n  public updateSelectedDragItem(key: string, item: Element, selected: boolean): void {\n    this.selectionChange$.next({\n      key,\n      item,\n      action: selected ? ChangeAction.ADD : ChangeAction.REMOVE\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgEventsService {\n  public dropped$ = new Subject();\n}\n","import { Injectable } from '@angular/core';\n\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgReflectService {\n  constructor(private ngsgStore: NgsgStoreService) {}\n\n  public reflectChanges(key: string, element: Element): any[] {\n    const items = this.ngsgStore.getItems(key);\n    const selectedElements = this.ngsgStore.getSelectedItems(key);\n    const selectedElementIndices = this.getSelectedElementsIndices(selectedElements);\n    const selectedItems = this.getSelectedItems(items, selectedElementIndices);\n    const sortedIndices = selectedElementIndices.sort();\n    const dropIndex = this.findDropIndex(selectedElements, element);\n\n    while (sortedIndices.length > 0) {\n      items.splice(sortedIndices.pop(), 1);\n    }\n\n    const result = this.getReflectedItems(items, selectedItems, dropIndex);\n    this.ngsgStore.setItems(key, result);\n    return result;\n  }\n\n  private getReflectedItems(items: any, selectedItems: any, dropIndex: number): any[] {\n    const beforeSelection = items.slice(0, dropIndex);\n    const afterSelection = items.slice(dropIndex, items.length);\n    return [...beforeSelection, ...selectedItems, ...afterSelection];\n  }\n\n  private getSelectedItems(items: any[], selectedElementIndexes: number[]): any[] {\n    const selectedItems = [];\n    selectedElementIndexes.forEach(index => {\n      selectedItems.push(items[index]);\n    });\n    return selectedItems;\n  }\n\n  private getSelectedElementsIndices(selectedElements: NgsgDragelement[]): number[] {\n    return selectedElements.map((selectedElement: NgsgDragelement) => selectedElement.originalIndex);\n  }\n\n  private findDropIndex(selectedElements: NgsgDragelement[], element: Element): number {\n    if (this.isDropInSelection(selectedElements, element)) {\n      return NgsgElementsHelper.findIndex(selectedElements[0].node);\n    }\n    return NgsgElementsHelper.findIndex(element);\n  }\n\n  private isDropInSelection(collection: NgsgDragelement[], dropElement: Element): boolean {\n    return !!collection.find((dragElment: NgsgDragelement) => dragElment.node === dropElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport {NgsgClassService} from '../../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSortService {\n  private dragIndex: number;\n  private dragElements: NgsgDragelement[];\n\n  constructor(\n    private classService: NgsgClassService,\n    private ngsgStore: NgsgStoreService\n  ) {}\n\n  public initSort(group: string): void {\n    this.dragIndex = this.ngsgStore.getFirstSelectItem(group).originalIndex;\n    this.dragElements = this.ngsgStore.getSelectedItems(group);\n  }\n\n  public sort(dropElement: Element): void {\n    const hoverIndex = NgsgElementsHelper.findIndex(dropElement);\n    const el = this.getSibling(dropElement, this.dragIndex, hoverIndex);\n\n    if (this.isDropInSelection(el)) {\n      return;\n    }\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      const insertedNode = dropElement.parentNode.insertBefore(dragElement.node, el.node);\n      this.classService.addPlaceHolderClass(insertedNode as Element);\n    });\n    this.dragIndex = NgsgElementsHelper.findIndex(this.dragElements[0].node);\n  }\n\n  public endSort(): void {\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      this.updateDropedItem(dragElement.node);\n    });\n  }\n\n  private getSibling(dropElement: any, dragIndex: number, hoverIndex: number): NgsgDragelement | null {\n    if (dragIndex < hoverIndex) {\n      return { node: dropElement.nextSibling, originalIndex: hoverIndex + 1 };\n    }\n    return { node: dropElement, originalIndex: hoverIndex };\n  }\n\n  private isDropInSelection(dropElement: NgsgDragelement): boolean {\n    return !!this.dragElements.find((dragElment: NgsgDragelement) => dragElment.node === dropElement.node);\n  }\n\n  private updateDropedItem(item: Element): void {\n    this.classService.removePlaceHolderClass(item);\n    this.classService.addDroppedClass(item);\n    this.classService.removeSelectedClass(item);\n    timer(500).subscribe(() => this.classService.removeDroppedClass(item));\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {takeUntil, takeWhile, throttleTime} from 'rxjs/operators';\n\nimport {NgsgElementsHelper} from './helpers/element/ngsg-elements.helper';\nimport {ScrollHelperService} from './helpers/scroll/scroll-helper.service';\nimport {NgsgSelectionService} from './mutliselect/ngsg-selection.service';\nimport {NgsgEventsService} from './shared/ngsg-events.service';\nimport {NgsgOrderChange} from './shared/ngsg-order-change.model';\nimport {NgsgReflectService} from './sort/reflection/ngsg-reflect.service';\nimport {NgsgSortService} from './sort/sort/ngsg-sort.service';\nimport {NgsgStoreService} from './store/ngsg-store.service';\n\nconst selector = '[ngSortgridItem]';\n\n@Directive({selector})\nexport class NgsgItemDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() ngSortGridGroup = 'defaultGroup';\n  @Input() ngSortGridItems: any[];\n  @Input() scrollPointTop: number;\n  @Input() scrollPointBottom: number;\n  @Input() scrollSpeed: number;\n  @Input() autoScroll = false;\n\n  @Output() sorted = new EventEmitter<NgsgOrderChange<any>>();\n\n  private selected = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    public el: ElementRef,\n    private sortService: NgsgSortService,\n    private selectionService: NgsgSelectionService,\n    private reflectService: NgsgReflectService,\n    private ngsgStore: NgsgStoreService,\n    private ngsgEventService: NgsgEventsService,\n    private scrollHelperService: ScrollHelperService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.ngsgEventService.dropped$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => this.selected = false);\n\n    fromEvent<DragEvent>(this.el.nativeElement, 'drag').pipe(\n      throttleTime(20),\n      takeUntil(this.destroy$),\n      takeWhile(() => this.autoScroll)\n    ).subscribe(() => {\n        this.scrollHelperService.scrollIfNecessary(event, {\n          top: this.scrollPointTop,\n          bottom: this.scrollPointBottom\n        }, this.scrollSpeed);\n      }\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const sortGridItemChanges = changes.ngSortGridItems;\n    const sortGridItems = sortGridItemChanges.currentValue ? sortGridItemChanges.currentValue : [];\n\n    if (!this.ngsgStore.hasGroup(this.ngSortGridGroup)) {\n      this.ngsgStore.initState(this.ngSortGridGroup, sortGridItems);\n      return;\n    }\n    this.ngsgStore.setItems(this.ngSortGridGroup, sortGridItems);\n  }\n\n  ngAfterViewInit(): void {\n    this.el.nativeElement.draggable = true;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('dragstart', ['$event'])\n  dragStart(event): void {\n    if (!this.occuredOnHost(event)) {\n      return;\n    }\n    this.selectionService.selectElementIfNoSelection(this.ngSortGridGroup, event.target);\n    this.sortService.initSort(this.ngSortGridGroup);\n  }\n\n  @HostListener('dragenter')\n  dragEnter(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n    this.sortService.sort(this.el.nativeElement);\n  }\n\n  @HostListener('dragover', ['$event'])\n  dragOver(event): boolean {\n    if (event.preventDefault) {\n      // Necessary. Allows us to drop.\n      event.preventDefault();\n    }\n    return false;\n  }\n\n  @HostListener('dragend')\n  drop(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n\n    if (!this.ngsgStore.hasItems(this.ngSortGridGroup)) {\n      console.warn(`Ng-sortgrid: No items provided - please use [sortGridItems] to pass in an array of items -\n      otherwhise the ordered items can not be emitted in the (sorted) event`);\n      return;\n    }\n    const previousOrder = [...this.ngsgStore.getItems(this.ngSortGridGroup)];\n    this.sortService.endSort();\n    const currentOrder = this.reflectService.reflectChanges(this.ngSortGridGroup, this.el.nativeElement);\n    this.sorted.next({previousOrder, currentOrder});\n    this.ngsgStore.resetSelectedItems(this.ngSortGridGroup);\n    this.ngsgEventService.dropped$.next();\n  }\n\n  @HostListener('click')\n  clicked(): void {\n    this.selected = !this.isItemCurrentlySelected();\n    this.selectionService.updateSelectedDragItem(this.ngSortGridGroup, this.el.nativeElement, this.selected);\n  }\n\n  private isItemCurrentlySelected(): boolean {\n    const index = NgsgElementsHelper.findIndex(this.el.nativeElement);\n    return !!this.ngsgStore.getSelectedItems(this.ngSortGridGroup)\n      .find(element => element.originalIndex === index);\n  }\n\n  private occuredOnHost(event): boolean {\n    return event.target.matches(selector);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgsgItemDirective } from './ngsg-item.directive';\n\n@NgModule({\n  declarations: [NgsgItemDirective],\n  exports: [NgsgItemDirective]\n})\nexport class NgsgModule {}\n","export interface NgsgOrderChange<T> {\n  previousOrder: T[];\n  currentOrder: T[];\n}\n"]}