(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ng-sortgrid', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/common'], factory) :
    (global = global || self, factory(global['ng-sortgrid'] = {}, global.ng.core, global.rxjs, global.rxjs.operators, global.ng.common));
}(this, (function (exports, i0, rxjs, operators, i1) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/helpers/element/ngsg-elements.helper.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgsgElementsHelper = /** @class */ (function () {
        function NgsgElementsHelper() {
        }
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgElementsHelper.findIndex = function (element) {
            /** @type {?} */
            var allElements = element.parentNode.children;
            return Array.prototype.indexOf.call(allElements, element);
        };
        return NgsgElementsHelper;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/helpers/scroll/scroll-helper.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @record
     */
    function ScrollPoints() { }
    if (false) {
        /** @type {?|undefined} */
        ScrollPoints.prototype.top;
        /** @type {?|undefined} */
        ScrollPoints.prototype.bottom;
    }
    var ScrollHelperService = /** @class */ (function () {
        /**
         * @param {?} document
         */
        function ScrollHelperService(document) {
            this.document = document;
            this.DEFAULT_SCROLLSPEED = 50;
            this.SCROLL_BUFFER = 50;
            this.window = document.defaultView;
        }
        /**
         * @param {?} event
         * @param {?=} scrollPoints
         * @param {?=} scrollSpeed
         * @return {?}
         */
        ScrollHelperService.prototype.scrollIfNecessary = function (event, scrollPoints, scrollSpeed) {
            if (scrollPoints === void 0) { scrollPoints = {}; }
            /** @type {?} */
            var currentPosition = event.pageY - this.window.scrollY;
            if (this.isTopScrollNeeded(currentPosition, scrollPoints.top)) {
                this.window.scrollBy({ top: -scrollSpeed || -this.DEFAULT_SCROLLSPEED, behavior: 'smooth' });
                return;
            }
            if (this.isBottomScrollNeeded(currentPosition, scrollPoints.bottom)) {
                this.window.scrollBy({ top: scrollSpeed || this.DEFAULT_SCROLLSPEED, behavior: 'smooth' });
            }
        };
        /**
         * @private
         * @param {?} currentPosition
         * @param {?} scrollPointTop
         * @return {?}
         */
        ScrollHelperService.prototype.isTopScrollNeeded = function (currentPosition, scrollPointTop) {
            return scrollPointTop ? currentPosition < scrollPointTop :
                currentPosition < this.SCROLL_BUFFER;
        };
        /**
         * @private
         * @param {?} currentPosition
         * @param {?} scrollPointBottom
         * @return {?}
         */
        ScrollHelperService.prototype.isBottomScrollNeeded = function (currentPosition, scrollPointBottom) {
            return scrollPointBottom ? currentPosition > scrollPointBottom :
                currentPosition > this.window.innerHeight - this.SCROLL_BUFFER;
        };
        return ScrollHelperService;
    }());
    ScrollHelperService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    ScrollHelperService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: i0.Inject, args: [i1.DOCUMENT,] }] }
    ]; };
    /** @nocollapse */ ScrollHelperService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ScrollHelperService_Factory() { return new ScrollHelperService(i0.ɵɵinject(i1.DOCUMENT)); }, token: ScrollHelperService, providedIn: "root" });
    if (false) {
        /**
         * @type {?}
         * @private
         */
        ScrollHelperService.prototype.window;
        /**
         * @type {?}
         * @private
         */
        ScrollHelperService.prototype.DEFAULT_SCROLLSPEED;
        /**
         * @type {?}
         * @private
         */
        ScrollHelperService.prototype.SCROLL_BUFFER;
        /**
         * @type {?}
         * @private
         */
        ScrollHelperService.prototype.document;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/helpers/class/ngsg-class.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgsgClassService = /** @class */ (function () {
        function NgsgClassService() {
            this.SELECTED_DEFAULT_CLASS = 'ng-sg-selected';
            this.PLACEHOLDER_DEFAULT_CLASS = 'ng-sg-placeholder';
            this.DROPPED_DEFAULT_CLASS = 'ng-sg-dropped';
        }
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgClassService.prototype.addPlaceHolderClass = function (element) {
            element.classList.add(this.PLACEHOLDER_DEFAULT_CLASS);
        };
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgClassService.prototype.removePlaceHolderClass = function (element) {
            element.classList.remove(this.PLACEHOLDER_DEFAULT_CLASS);
        };
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgClassService.prototype.addDroppedClass = function (element) {
            element.classList.add(this.DROPPED_DEFAULT_CLASS);
        };
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgClassService.prototype.removeDroppedClass = function (element) {
            element.classList.remove(this.DROPPED_DEFAULT_CLASS);
        };
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgClassService.prototype.addSelectedClass = function (element) {
            element.classList.add(this.SELECTED_DEFAULT_CLASS);
        };
        /**
         * @param {?} element
         * @return {?}
         */
        NgsgClassService.prototype.removeSelectedClass = function (element) {
            element.classList.remove(this.SELECTED_DEFAULT_CLASS);
        };
        return NgsgClassService;
    }());
    NgsgClassService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ NgsgClassService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgClassService_Factory() { return new NgsgClassService(); }, token: NgsgClassService, providedIn: "root" });
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgsgClassService.prototype.SELECTED_DEFAULT_CLASS;
        /**
         * @type {?}
         * @private
         */
        NgsgClassService.prototype.PLACEHOLDER_DEFAULT_CLASS;
        /**
         * @type {?}
         * @private
         */
        NgsgClassService.prototype.DROPPED_DEFAULT_CLASS;
    }

    /**
     * @record
     */
    function NgsgState() { }
    if (false) {
        /** @type {?} */
        NgsgState.prototype.items;
        /** @type {?} */
        NgsgState.prototype.classes;
        /** @type {?} */
        NgsgState.prototype.selectedItems;
    }
    var NgsgStoreService = /** @class */ (function () {
        function NgsgStoreService() {
            this.state = new Map();
        }
        /**
         * @param {?} group
         * @param {?=} items
         * @param {?=} classes
         * @return {?}
         */
        NgsgStoreService.prototype.initState = function (group, items, classes) {
            if (items === void 0) { items = []; }
            if (classes === void 0) { classes = {}; }
            this.state.set(group, { items: __spread(items), classes: classes, selectedItems: [] });
        };
        /**
         * @param {?} group
         * @param {?} dragElement
         * @return {?}
         */
        NgsgStoreService.prototype.addSelectedItem = function (group, dragElement) {
            this.state.get(group).selectedItems.push(dragElement);
        };
        /**
         * @param {?} group
         * @param {?} item
         * @return {?}
         */
        NgsgStoreService.prototype.removeSelectedItem = function (group, item) {
            /** @type {?} */
            var updatedItems = this.state.get(group).selectedItems
                .filter(( /**
         * @param {?} dragElement
         * @return {?}
         */function (dragElement) { return dragElement.node !== item; }));
            this.setSelectedItems(group, updatedItems);
        };
        /**
         * @param {?} group
         * @param {?} items
         * @return {?}
         */
        NgsgStoreService.prototype.setItems = function (group, items) {
            this.state.get(group).items = __spread(items);
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.getItems = function (group) {
            return this.state.get(group).items;
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.hasItems = function (group) {
            return this.getItems(group).length > 0;
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.hasGroup = function (group) {
            return this.state.has(group);
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.getSelectedItems = function (group) {
            return this.state.get(group).selectedItems;
        };
        /**
         * @param {?} group
         * @param {?} selectedItems
         * @return {?}
         */
        NgsgStoreService.prototype.setSelectedItems = function (group, selectedItems) {
            this.state.get(group).selectedItems = __spread(selectedItems);
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.getFirstSelectItem = function (group) {
            return this.state.get(group).selectedItems[0];
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.hasSelectedItems = function (group) {
            return this.getSelectedItems(group).length > 0;
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.resetSelectedItems = function (group) {
            this.setSelectedItems(group, []);
        };
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgStoreService.prototype.getClasses = function (group) {
            return this.state.get(group).classes;
        };
        return NgsgStoreService;
    }());
    NgsgStoreService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ NgsgStoreService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgStoreService_Factory() { return new NgsgStoreService(); }, token: NgsgStoreService, providedIn: "root" });
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgsgStoreService.prototype.state;
    }

    /** @enum {number} */
    var ChangeAction = {
        ADD: 0,
        REMOVE: 1,
    };
    ChangeAction[ChangeAction.ADD] = 'ADD';
    ChangeAction[ChangeAction.REMOVE] = 'REMOVE';
    /**
     * @record
     */
    function SelectionChange() { }
    if (false) {
        /** @type {?} */
        SelectionChange.prototype.key;
        /** @type {?} */
        SelectionChange.prototype.item;
        /** @type {?} */
        SelectionChange.prototype.action;
    }
    var NgsgSelectionService = /** @class */ (function () {
        /**
         * @param {?} classService
         * @param {?} ngsgStore
         */
        function NgsgSelectionService(classService, ngsgStore) {
            var _this = this;
            this.classService = classService;
            this.ngsgStore = ngsgStore;
            this.COMMAND_KEY = 'Meta';
            this.CONTROL_KEY = 'Control';
            this.selectionChange$ = new rxjs.Subject();
            /** @type {?} */
            var selectionKeyPressed$ = this.selectionKeyPressed();
            this.selectionChange$
                .pipe(operators.withLatestFrom(selectionKeyPressed$))
                .subscribe(( /**
         * @param {?} __0
         * @return {?}
         */function (_a) {
                var _b = __read(_a, 2), selectionChange = _b[0], selectionKeyPressed = _b[1];
                selectionKeyPressed
                    ? _this.handleSelectionChange(selectionChange)
                    : _this.resetSelectedItems(selectionChange.key);
            }));
        }
        /**
         * @private
         * @param {?} group
         * @return {?}
         */
        NgsgSelectionService.prototype.resetSelectedItems = function (group) {
            var _this = this;
            this.ngsgStore.getSelectedItems(group).forEach(( /**
             * @param {?} item
             * @return {?}
             */function (/**
             * @param {?} item
             * @return {?}
             */ item) { return _this.classService.removeSelectedClass(item.node); }));
            this.ngsgStore.resetSelectedItems(group);
        };
        /**
         * @private
         * @param {?} selectionChange
         * @return {?}
         */
        NgsgSelectionService.prototype.handleSelectionChange = function (selectionChange) {
            if (selectionChange.action === ChangeAction.ADD) {
                this.classService.addSelectedClass(selectionChange.item);
                this.ngsgStore.addSelectedItem(selectionChange.key, {
                    node: selectionChange.item,
                    originalIndex: NgsgElementsHelper.findIndex(selectionChange.item)
                });
            }
            if (selectionChange.action === ChangeAction.REMOVE) {
                this.classService.removeSelectedClass(selectionChange.item);
                this.ngsgStore.removeSelectedItem(selectionChange.key, selectionChange.item);
            }
        };
        /**
         * @private
         * @return {?}
         */
        NgsgSelectionService.prototype.selectionKeyPressed = function () {
            var _this = this;
            /** @type {?} */
            var selectionKeyPressed = rxjs.fromEvent(window, 'keydown').pipe(operators.filter(( /**
             * @param {?} keyboardEvent
             * @return {?}
             */function (keyboardEvent) { return keyboardEvent.key === _this.COMMAND_KEY || keyboardEvent.key === _this.CONTROL_KEY; })), operators.mapTo(true));
            /** @type {?} */
            var keyup = rxjs.fromEvent(window, 'keyup').pipe(operators.mapTo(false));
            return rxjs.merge(selectionKeyPressed, keyup);
        };
        /**
         * @param {?} group
         * @param {?} dragedElement
         * @return {?}
         */
        NgsgSelectionService.prototype.selectElementIfNoSelection = function (group, dragedElement) {
            if (this.ngsgStore.hasSelectedItems(group)) {
                return;
            }
            this.ngsgStore.addSelectedItem(group, {
                node: dragedElement,
                originalIndex: NgsgElementsHelper.findIndex(dragedElement)
            });
        };
        /**
         * @param {?} key
         * @param {?} item
         * @param {?} selected
         * @return {?}
         */
        NgsgSelectionService.prototype.updateSelectedDragItem = function (key, item, selected) {
            this.selectionChange$.next({
                key: key,
                item: item,
                action: selected ? ChangeAction.ADD : ChangeAction.REMOVE
            });
        };
        return NgsgSelectionService;
    }());
    NgsgSelectionService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgsgSelectionService.ctorParameters = function () { return [
        { type: NgsgClassService },
        { type: NgsgStoreService }
    ]; };
    /** @nocollapse */ NgsgSelectionService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgSelectionService_Factory() { return new NgsgSelectionService(i0.ɵɵinject(NgsgClassService), i0.ɵɵinject(NgsgStoreService)); }, token: NgsgSelectionService, providedIn: "root" });
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgsgSelectionService.prototype.COMMAND_KEY;
        /**
         * @type {?}
         * @private
         */
        NgsgSelectionService.prototype.CONTROL_KEY;
        /**
         * @type {?}
         * @private
         */
        NgsgSelectionService.prototype.selectionChange$;
        /**
         * @type {?}
         * @private
         */
        NgsgSelectionService.prototype.classService;
        /**
         * @type {?}
         * @private
         */
        NgsgSelectionService.prototype.ngsgStore;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/shared/ngsg-events.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgsgEventsService = /** @class */ (function () {
        function NgsgEventsService() {
            this.dropped$ = new rxjs.Subject();
        }
        return NgsgEventsService;
    }());
    NgsgEventsService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */ NgsgEventsService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgEventsService_Factory() { return new NgsgEventsService(); }, token: NgsgEventsService, providedIn: "root" });
    if (false) {
        /** @type {?} */
        NgsgEventsService.prototype.dropped$;
    }

    var NgsgReflectService = /** @class */ (function () {
        /**
         * @param {?} ngsgStore
         */
        function NgsgReflectService(ngsgStore) {
            this.ngsgStore = ngsgStore;
        }
        /**
         * @param {?} key
         * @param {?} element
         * @return {?}
         */
        NgsgReflectService.prototype.reflectChanges = function (key, element) {
            /** @type {?} */
            var items = this.ngsgStore.getItems(key);
            /** @type {?} */
            var selectedElements = this.ngsgStore.getSelectedItems(key);
            /** @type {?} */
            var selectedElementIndices = this.getSelectedElementsIndices(selectedElements);
            /** @type {?} */
            var selectedItems = this.getSelectedItems(items, selectedElementIndices);
            /** @type {?} */
            var sortedIndices = selectedElementIndices.sort();
            /** @type {?} */
            var dropIndex = this.findDropIndex(selectedElements, element);
            while (sortedIndices.length > 0) {
                items.splice(sortedIndices.pop(), 1);
            }
            /** @type {?} */
            var result = this.getReflectedItems(items, selectedItems, dropIndex);
            this.ngsgStore.setItems(key, result);
            return result;
        };
        /**
         * @private
         * @param {?} items
         * @param {?} selectedItems
         * @param {?} dropIndex
         * @return {?}
         */
        NgsgReflectService.prototype.getReflectedItems = function (items, selectedItems, dropIndex) {
            /** @type {?} */
            var beforeSelection = items.slice(0, dropIndex);
            /** @type {?} */
            var afterSelection = items.slice(dropIndex, items.length);
            return __spread(beforeSelection, selectedItems, afterSelection);
        };
        /**
         * @private
         * @param {?} items
         * @param {?} selectedElementIndexes
         * @return {?}
         */
        NgsgReflectService.prototype.getSelectedItems = function (items, selectedElementIndexes) {
            /** @type {?} */
            var selectedItems = [];
            selectedElementIndexes.forEach(( /**
             * @param {?} index
             * @return {?}
             */function (/**
             * @param {?} index
             * @return {?}
             */ index) {
                selectedItems.push(items[index]);
            }));
            return selectedItems;
        };
        /**
         * @private
         * @param {?} selectedElements
         * @return {?}
         */
        NgsgReflectService.prototype.getSelectedElementsIndices = function (selectedElements) {
            return selectedElements.map(( /**
             * @param {?} selectedElement
             * @return {?}
             */function (selectedElement) { return selectedElement.originalIndex; }));
        };
        /**
         * @private
         * @param {?} selectedElements
         * @param {?} element
         * @return {?}
         */
        NgsgReflectService.prototype.findDropIndex = function (selectedElements, element) {
            if (this.isDropInSelection(selectedElements, element)) {
                return NgsgElementsHelper.findIndex(selectedElements[0].node);
            }
            return NgsgElementsHelper.findIndex(element);
        };
        /**
         * @private
         * @param {?} collection
         * @param {?} dropElement
         * @return {?}
         */
        NgsgReflectService.prototype.isDropInSelection = function (collection, dropElement) {
            return !!collection.find(( /**
             * @param {?} dragElment
             * @return {?}
             */function (dragElment) { return dragElment.node === dropElement; }));
        };
        return NgsgReflectService;
    }());
    NgsgReflectService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgsgReflectService.ctorParameters = function () { return [
        { type: NgsgStoreService }
    ]; };
    /** @nocollapse */ NgsgReflectService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgReflectService_Factory() { return new NgsgReflectService(i0.ɵɵinject(NgsgStoreService)); }, token: NgsgReflectService, providedIn: "root" });
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgsgReflectService.prototype.ngsgStore;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/sort/sort/ngsg-sort.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgsgSortService = /** @class */ (function () {
        /**
         * @param {?} classService
         * @param {?} ngsgStore
         */
        function NgsgSortService(classService, ngsgStore) {
            this.classService = classService;
            this.ngsgStore = ngsgStore;
        }
        /**
         * @param {?} group
         * @return {?}
         */
        NgsgSortService.prototype.initSort = function (group) {
            this.dragIndex = this.ngsgStore.getFirstSelectItem(group).originalIndex;
            this.dragElements = this.ngsgStore.getSelectedItems(group);
        };
        /**
         * @param {?} dropElement
         * @return {?}
         */
        NgsgSortService.prototype.sort = function (dropElement) {
            var _this = this;
            /** @type {?} */
            var hoverIndex = NgsgElementsHelper.findIndex(dropElement);
            /** @type {?} */
            var el = this.getSibling(dropElement, this.dragIndex, hoverIndex);
            if (this.isDropInSelection(el)) {
                return;
            }
            this.dragElements.forEach(( /**
             * @param {?} dragElement
             * @return {?}
             */function (dragElement) {
                /** @type {?} */
                var insertedNode = dropElement.parentNode.insertBefore(dragElement.node, el.node);
                _this.classService.addPlaceHolderClass(( /** @type {?} */(insertedNode)));
            }));
            this.dragIndex = NgsgElementsHelper.findIndex(this.dragElements[0].node);
        };
        /**
         * @return {?}
         */
        NgsgSortService.prototype.endSort = function () {
            var _this = this;
            this.dragElements.forEach(( /**
             * @param {?} dragElement
             * @return {?}
             */function (dragElement) {
                _this.updateDropedItem(dragElement.node);
            }));
        };
        /**
         * @private
         * @param {?} dropElement
         * @param {?} dragIndex
         * @param {?} hoverIndex
         * @return {?}
         */
        NgsgSortService.prototype.getSibling = function (dropElement, dragIndex, hoverIndex) {
            if (dragIndex < hoverIndex) {
                return { node: dropElement.nextSibling, originalIndex: hoverIndex + 1 };
            }
            return { node: dropElement, originalIndex: hoverIndex };
        };
        /**
         * @private
         * @param {?} dropElement
         * @return {?}
         */
        NgsgSortService.prototype.isDropInSelection = function (dropElement) {
            return !!this.dragElements.find(( /**
             * @param {?} dragElment
             * @return {?}
             */function (dragElment) { return dragElment.node === dropElement.node; }));
        };
        /**
         * @private
         * @param {?} item
         * @return {?}
         */
        NgsgSortService.prototype.updateDropedItem = function (item) {
            var _this = this;
            this.classService.removePlaceHolderClass(item);
            this.classService.addDroppedClass(item);
            this.classService.removeSelectedClass(item);
            rxjs.timer(500).subscribe(( /**
             * @return {?}
             */function () { return _this.classService.removeDroppedClass(item); }));
        };
        return NgsgSortService;
    }());
    NgsgSortService.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    NgsgSortService.ctorParameters = function () { return [
        { type: NgsgClassService },
        { type: NgsgStoreService }
    ]; };
    /** @nocollapse */ NgsgSortService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgsgSortService_Factory() { return new NgsgSortService(i0.ɵɵinject(NgsgClassService), i0.ɵɵinject(NgsgStoreService)); }, token: NgsgSortService, providedIn: "root" });
    if (false) {
        /**
         * @type {?}
         * @private
         */
        NgsgSortService.prototype.dragIndex;
        /**
         * @type {?}
         * @private
         */
        NgsgSortService.prototype.dragElements;
        /**
         * @type {?}
         * @private
         */
        NgsgSortService.prototype.classService;
        /**
         * @type {?}
         * @private
         */
        NgsgSortService.prototype.ngsgStore;
    }

    /** @type {?} */
    var selector = '[ngSortgridItem]';
    var NgsgItemDirective = /** @class */ (function () {
        /**
         * @param {?} el
         * @param {?} sortService
         * @param {?} selectionService
         * @param {?} reflectService
         * @param {?} ngsgStore
         * @param {?} ngsgEventService
         * @param {?} scrollHelperService
         */
        function NgsgItemDirective(el, sortService, selectionService, reflectService, ngsgStore, ngsgEventService, scrollHelperService) {
            this.el = el;
            this.sortService = sortService;
            this.selectionService = selectionService;
            this.reflectService = reflectService;
            this.ngsgStore = ngsgStore;
            this.ngsgEventService = ngsgEventService;
            this.scrollHelperService = scrollHelperService;
            this.ngSortGridGroup = 'defaultGroup';
            this.autoScroll = false;
            this.sorted = new i0.EventEmitter();
            this.selected = false;
            this.destroy$ = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        NgsgItemDirective.prototype.ngOnInit = function () {
            var _this = this;
            this.ngsgEventService.dropped$.pipe(operators.takeUntil(this.destroy$)).subscribe(( /**
             * @return {?}
             */function () { return _this.selected = false; }));
            rxjs.fromEvent(this.el.nativeElement, 'drag').pipe(operators.throttleTime(20), operators.takeUntil(this.destroy$), operators.takeWhile(( /**
             * @return {?}
             */function () { return _this.autoScroll; }))).subscribe(( /**
             * @return {?}
             */function () {
                _this.scrollHelperService.scrollIfNecessary(event, {
                    top: _this.scrollPointTop,
                    bottom: _this.scrollPointBottom
                }, _this.scrollSpeed);
            }));
        };
        /**
         * @param {?} changes
         * @return {?}
         */
        NgsgItemDirective.prototype.ngOnChanges = function (changes) {
            /** @type {?} */
            var sortGridItemChanges = changes.ngSortGridItems;
            /** @type {?} */
            var sortGridItems = sortGridItemChanges.currentValue ? sortGridItemChanges.currentValue : [];
            if (!this.ngsgStore.hasGroup(this.ngSortGridGroup)) {
                this.ngsgStore.initState(this.ngSortGridGroup, sortGridItems);
                return;
            }
            this.ngsgStore.setItems(this.ngSortGridGroup, sortGridItems);
        };
        /**
         * @return {?}
         */
        NgsgItemDirective.prototype.ngAfterViewInit = function () {
            this.el.nativeElement.draggable = true;
        };
        /**
         * @return {?}
         */
        NgsgItemDirective.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroy$.complete();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        NgsgItemDirective.prototype.dragStart = function (event) {
            if (!this.occuredOnHost(event)) {
                return;
            }
            this.selectionService.selectElementIfNoSelection(this.ngSortGridGroup, event.target);
            this.sortService.initSort(this.ngSortGridGroup);
        };
        /**
         * @return {?}
         */
        NgsgItemDirective.prototype.dragEnter = function () {
            if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {
                return;
            }
            this.sortService.sort(this.el.nativeElement);
        };
        /**
         * @param {?} event
         * @return {?}
         */
        NgsgItemDirective.prototype.dragOver = function (event) {
            if (event.preventDefault) {
                // Necessary. Allows us to drop.
                event.preventDefault();
            }
            return false;
        };
        /**
         * @return {?}
         */
        NgsgItemDirective.prototype.drop = function () {
            if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {
                return;
            }
            if (!this.ngsgStore.hasItems(this.ngSortGridGroup)) {
                console.warn("Ng-sortgrid: No items provided - please use [sortGridItems] to pass in an array of items -\n      otherwhise the ordered items can not be emitted in the (sorted) event");
                return;
            }
            /** @type {?} */
            var previousOrder = __spread(this.ngsgStore.getItems(this.ngSortGridGroup));
            this.sortService.endSort();
            /** @type {?} */
            var currentOrder = this.reflectService.reflectChanges(this.ngSortGridGroup, this.el.nativeElement);
            this.sorted.next({ previousOrder: previousOrder, currentOrder: currentOrder });
            this.ngsgStore.resetSelectedItems(this.ngSortGridGroup);
            this.ngsgEventService.dropped$.next();
        };
        /**
         * @return {?}
         */
        NgsgItemDirective.prototype.clicked = function () {
            this.selected = !this.isItemCurrentlySelected();
            this.selectionService.updateSelectedDragItem(this.ngSortGridGroup, this.el.nativeElement, this.selected);
        };
        /**
         * @private
         * @return {?}
         */
        NgsgItemDirective.prototype.isItemCurrentlySelected = function () {
            /** @type {?} */
            var index = NgsgElementsHelper.findIndex(this.el.nativeElement);
            return !!this.ngsgStore.getSelectedItems(this.ngSortGridGroup)
                .find(( /**
         * @param {?} element
         * @return {?}
         */function (/**
         * @param {?} element
         * @return {?}
         */ element) { return element.originalIndex === index; }));
        };
        /**
         * @private
         * @param {?} event
         * @return {?}
         */
        NgsgItemDirective.prototype.occuredOnHost = function (event) {
            return event.target.matches(selector);
        };
        return NgsgItemDirective;
    }());
    NgsgItemDirective.decorators = [
        { type: i0.Directive, args: [{ selector: selector },] }
    ];
    /** @nocollapse */
    NgsgItemDirective.ctorParameters = function () { return [
        { type: i0.ElementRef },
        { type: NgsgSortService },
        { type: NgsgSelectionService },
        { type: NgsgReflectService },
        { type: NgsgStoreService },
        { type: NgsgEventsService },
        { type: ScrollHelperService }
    ]; };
    NgsgItemDirective.propDecorators = {
        ngSortGridGroup: [{ type: i0.Input }],
        ngSortGridItems: [{ type: i0.Input }],
        scrollPointTop: [{ type: i0.Input }],
        scrollPointBottom: [{ type: i0.Input }],
        scrollSpeed: [{ type: i0.Input }],
        autoScroll: [{ type: i0.Input }],
        sorted: [{ type: i0.Output }],
        dragStart: [{ type: i0.HostListener, args: ['dragstart', ['$event'],] }],
        dragEnter: [{ type: i0.HostListener, args: ['dragenter',] }],
        dragOver: [{ type: i0.HostListener, args: ['dragover', ['$event'],] }],
        drop: [{ type: i0.HostListener, args: ['dragend',] }],
        clicked: [{ type: i0.HostListener, args: ['click',] }]
    };
    if (false) {
        /** @type {?} */
        NgsgItemDirective.prototype.ngSortGridGroup;
        /** @type {?} */
        NgsgItemDirective.prototype.ngSortGridItems;
        /** @type {?} */
        NgsgItemDirective.prototype.scrollPointTop;
        /** @type {?} */
        NgsgItemDirective.prototype.scrollPointBottom;
        /** @type {?} */
        NgsgItemDirective.prototype.scrollSpeed;
        /** @type {?} */
        NgsgItemDirective.prototype.autoScroll;
        /** @type {?} */
        NgsgItemDirective.prototype.sorted;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.selected;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.destroy$;
        /** @type {?} */
        NgsgItemDirective.prototype.el;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.sortService;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.selectionService;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.reflectService;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.ngsgStore;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.ngsgEventService;
        /**
         * @type {?}
         * @private
         */
        NgsgItemDirective.prototype.scrollHelperService;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/ngsg.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgsgModule = /** @class */ (function () {
        function NgsgModule() {
        }
        return NgsgModule;
    }());
    NgsgModule.decorators = [
        { type: i0.NgModule, args: [{
                    declarations: [NgsgItemDirective],
                    exports: [NgsgItemDirective]
                },] }
    ];

    /**
     * @fileoverview added by tsickle
     * Generated from: public-api.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * Generated from: ng-sortgrid.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.NgsgItemDirective = NgsgItemDirective;
    exports.NgsgModule = NgsgModule;
    exports.ɵa = NgsgSortService;
    exports.ɵb = NgsgClassService;
    exports.ɵc = NgsgStoreService;
    exports.ɵd = NgsgSelectionService;
    exports.ɵe = NgsgReflectService;
    exports.ɵf = NgsgEventsService;
    exports.ɵg = ScrollHelperService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-sortgrid.umd.js.map
