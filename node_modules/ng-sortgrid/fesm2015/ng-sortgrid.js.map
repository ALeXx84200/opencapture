{"version":3,"file":"ng-sortgrid.js","sources":["../../../projects/ng-sortgrid/src/lib/helpers/element/ngsg-elements.helper.ts","../../../projects/ng-sortgrid/src/lib/helpers/scroll/scroll-helper.service.ts","../../../projects/ng-sortgrid/src/lib/helpers/class/ngsg-class.service.ts","../../../projects/ng-sortgrid/src/lib/store/ngsg-store.service.ts","../../../projects/ng-sortgrid/src/lib/mutliselect/ngsg-selection.service.ts","../../../projects/ng-sortgrid/src/lib/shared/ngsg-events.service.ts","../../../projects/ng-sortgrid/src/lib/sort/reflection/ngsg-reflect.service.ts","../../../projects/ng-sortgrid/src/lib/sort/sort/ngsg-sort.service.ts","../../../projects/ng-sortgrid/src/lib/ngsg-item.directive.ts","../../../projects/ng-sortgrid/src/lib/ngsg.module.ts","../../../projects/ng-sortgrid/src/lib/shared/ngsg-order-change.model.ts"],"sourcesContent":["export class NgsgElementsHelper {\n\n  public static findIndex(element: Element): number {\n    const allElements = element.parentNode.children;\n    return Array.prototype.indexOf.call(allElements, element);\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nexport interface ScrollPoints {\n  top?: number;\n  bottom?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollHelperService {\n\n  private window: WindowProxy;\n  private DEFAULT_SCROLLSPEED = 50;\n  private SCROLL_BUFFER = 50;\n\n  constructor(@Inject(DOCUMENT) private document) {\n    this.window = document.defaultView;\n  }\n\n  public scrollIfNecessary(event: any, scrollPoints: ScrollPoints = {}, scrollSpeed?: number): void {\n    const currentPosition = event.pageY - this.window.scrollY;\n\n    if (this.isTopScrollNeeded(currentPosition, scrollPoints.top)) {\n      this.window.scrollBy({top: -scrollSpeed || -this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n      return;\n    }\n\n    if (this.isBottomScrollNeeded(currentPosition, scrollPoints.bottom)) {\n      this.window.scrollBy({top: scrollSpeed || this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n    }\n  }\n\n  private isTopScrollNeeded(currentPosition: number, scrollPointTop: number): boolean {\n    return scrollPointTop ? currentPosition < scrollPointTop :\n      currentPosition < this.SCROLL_BUFFER;\n  }\n\n  private isBottomScrollNeeded(currentPosition: number, scrollPointBottom: number): boolean {\n    return scrollPointBottom ? currentPosition > scrollPointBottom :\n      currentPosition > this.window.innerHeight - this.SCROLL_BUFFER;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgClassService {\n  private SELECTED_DEFAULT_CLASS = 'ng-sg-selected';\n  private PLACEHOLDER_DEFAULT_CLASS = 'ng-sg-placeholder';\n  private DROPPED_DEFAULT_CLASS = 'ng-sg-dropped';\n\n  public addPlaceHolderClass(element: Element): void {\n    element.classList.add(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public removePlaceHolderClass(element: Element): void {\n    element.classList.remove(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public addDroppedClass(element: Element): void {\n    element.classList.add(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public removeDroppedClass(element: Element): void {\n    element.classList.remove(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public addSelectedClass(element: Element): void {\n    element.classList.add(this.SELECTED_DEFAULT_CLASS);\n  }\n\n  public removeSelectedClass(element: Element): void {\n    element.classList.remove(this.SELECTED_DEFAULT_CLASS);\n  }\n\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgsgDragelement} from '../shared/ngsg-dragelement.model';\n\n// TODO add interfaces for classes\nexport interface NgsgState {\n  items: any[];\n  classes: any;\n  selectedItems: NgsgDragelement[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgStoreService {\n  private state = new Map<string, NgsgState>();\n\n  public initState(group: string, items: any[] = [], classes: any = {}): void {\n    this.state.set(group, {items: [...items], classes, selectedItems: []});\n  }\n\n  public addSelectedItem(group: string, dragElement: NgsgDragelement): void {\n    this.state.get(group).selectedItems.push(dragElement);\n  }\n\n  public removeSelectedItem(group: string, item: Element): void {\n    const updatedItems = this.state.get(group).selectedItems\n      .filter((dragElement: NgsgDragelement) => dragElement.node !== item);\n    this.setSelectedItems(group, updatedItems);\n  }\n\n  public setItems(group: string, items: any): void {\n    this.state.get(group).items = [...items];\n  }\n\n  public getItems(group: string): any[] {\n    return this.state.get(group).items;\n  }\n\n  public hasItems(group: string): boolean {\n    return this.getItems(group).length > 0;\n  }\n\n  public hasGroup(group: string): boolean {\n    return this.state.has(group);\n  }\n\n  public getSelectedItems(group: string): NgsgDragelement[] {\n    return this.state.get(group).selectedItems;\n  }\n\n  public setSelectedItems(group: string, selectedItems: any[]): void {\n    this.state.get(group).selectedItems = [...selectedItems];\n  }\n\n  public getFirstSelectItem(group: string): NgsgDragelement {\n    return this.state.get(group).selectedItems[0];\n  }\n\n  public hasSelectedItems(group: string): boolean {\n    return this.getSelectedItems(group).length > 0;\n  }\n\n  public resetSelectedItems(group: string): void {\n    this.setSelectedItems(group, []);\n  }\n\n  public getClasses(group: string): any[] {\n    return this.state.get(group).classes;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {fromEvent, merge, NEVER, Observable, Subject} from 'rxjs';\nimport {filter, mapTo, switchMap, withLatestFrom} from 'rxjs/operators';\n\nimport {NgsgClassService} from '../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../helpers/element/ngsg-elements.helper';\nimport {NgsgStoreService} from '../store/ngsg-store.service';\n\nenum ChangeAction {\n  ADD,\n  REMOVE\n}\n\ninterface SelectionChange {\n  key: string;\n  item: Element;\n  action: ChangeAction;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSelectionService {\n  private COMMAND_KEY = 'Meta';\n  private CONTROL_KEY = 'Control';\n\n  private selectionChange$ = new Subject<SelectionChange>();\n\n  constructor(private classService: NgsgClassService, private ngsgStore: NgsgStoreService) {\n    const selectionKeyPressed$ = this.selectionKeyPressed();\n    this.selectionChange$\n      .pipe(withLatestFrom(selectionKeyPressed$))\n      .subscribe(([selectionChange, selectionKeyPressed]) => {\n        selectionKeyPressed\n          ? this.handleSelectionChange(selectionChange)\n          : this.resetSelectedItems(selectionChange.key);\n      });\n  }\n\n  private resetSelectedItems(group: string): void {\n    this.ngsgStore.getSelectedItems(group).forEach(item => this.classService.removeSelectedClass(item.node));\n    this.ngsgStore.resetSelectedItems(group);\n  }\n\n  private handleSelectionChange(selectionChange: SelectionChange): void {\n    if (selectionChange.action === ChangeAction.ADD) {\n      this.classService.addSelectedClass(selectionChange.item);\n      this.ngsgStore.addSelectedItem(selectionChange.key, {\n        node: selectionChange.item,\n        originalIndex: NgsgElementsHelper.findIndex(selectionChange.item)\n      });\n    }\n    if (selectionChange.action === ChangeAction.REMOVE) {\n      this.classService.removeSelectedClass(selectionChange.item);\n      this.ngsgStore.removeSelectedItem(selectionChange.key, selectionChange.item);\n    }\n  }\n\n  private selectionKeyPressed(): Observable<boolean> {\n    const selectionKeyPressed = fromEvent(window, 'keydown').pipe(\n      filter(\n        (keyboardEvent: KeyboardEvent) =>\n          keyboardEvent.key === this.COMMAND_KEY || keyboardEvent.key === this.CONTROL_KEY\n      ),\n      mapTo(true)\n    );\n    const keyup = fromEvent(window, 'keyup').pipe(mapTo(false));\n    return merge(selectionKeyPressed, keyup);\n  }\n\n  public selectElementIfNoSelection(group: string, dragedElement: Element): void {\n    if (this.ngsgStore.hasSelectedItems(group)) {\n      return;\n    }\n    this.ngsgStore.addSelectedItem(group, {\n      node: dragedElement,\n      originalIndex: NgsgElementsHelper.findIndex(dragedElement)\n    });\n  }\n\n  public updateSelectedDragItem(key: string, item: Element, selected: boolean): void {\n    this.selectionChange$.next({\n      key,\n      item,\n      action: selected ? ChangeAction.ADD : ChangeAction.REMOVE\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgEventsService {\n  public dropped$ = new Subject();\n}\n","import { Injectable } from '@angular/core';\n\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgReflectService {\n  constructor(private ngsgStore: NgsgStoreService) {}\n\n  public reflectChanges(key: string, element: Element): any[] {\n    const items = this.ngsgStore.getItems(key);\n    const selectedElements = this.ngsgStore.getSelectedItems(key);\n    const selectedElementIndices = this.getSelectedElementsIndices(selectedElements);\n    const selectedItems = this.getSelectedItems(items, selectedElementIndices);\n    const sortedIndices = selectedElementIndices.sort();\n    const dropIndex = this.findDropIndex(selectedElements, element);\n\n    while (sortedIndices.length > 0) {\n      items.splice(sortedIndices.pop(), 1);\n    }\n\n    const result = this.getReflectedItems(items, selectedItems, dropIndex);\n    this.ngsgStore.setItems(key, result);\n    return result;\n  }\n\n  private getReflectedItems(items: any, selectedItems: any, dropIndex: number): any[] {\n    const beforeSelection = items.slice(0, dropIndex);\n    const afterSelection = items.slice(dropIndex, items.length);\n    return [...beforeSelection, ...selectedItems, ...afterSelection];\n  }\n\n  private getSelectedItems(items: any[], selectedElementIndexes: number[]): any[] {\n    const selectedItems = [];\n    selectedElementIndexes.forEach(index => {\n      selectedItems.push(items[index]);\n    });\n    return selectedItems;\n  }\n\n  private getSelectedElementsIndices(selectedElements: NgsgDragelement[]): number[] {\n    return selectedElements.map((selectedElement: NgsgDragelement) => selectedElement.originalIndex);\n  }\n\n  private findDropIndex(selectedElements: NgsgDragelement[], element: Element): number {\n    if (this.isDropInSelection(selectedElements, element)) {\n      return NgsgElementsHelper.findIndex(selectedElements[0].node);\n    }\n    return NgsgElementsHelper.findIndex(element);\n  }\n\n  private isDropInSelection(collection: NgsgDragelement[], dropElement: Element): boolean {\n    return !!collection.find((dragElment: NgsgDragelement) => dragElment.node === dropElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport {NgsgClassService} from '../../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSortService {\n  private dragIndex: number;\n  private dragElements: NgsgDragelement[];\n\n  constructor(\n    private classService: NgsgClassService,\n    private ngsgStore: NgsgStoreService\n  ) {}\n\n  public initSort(group: string): void {\n    this.dragIndex = this.ngsgStore.getFirstSelectItem(group).originalIndex;\n    this.dragElements = this.ngsgStore.getSelectedItems(group);\n  }\n\n  public sort(dropElement: Element): void {\n    const hoverIndex = NgsgElementsHelper.findIndex(dropElement);\n    const el = this.getSibling(dropElement, this.dragIndex, hoverIndex);\n\n    if (this.isDropInSelection(el)) {\n      return;\n    }\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      const insertedNode = dropElement.parentNode.insertBefore(dragElement.node, el.node);\n      this.classService.addPlaceHolderClass(insertedNode as Element);\n    });\n    this.dragIndex = NgsgElementsHelper.findIndex(this.dragElements[0].node);\n  }\n\n  public endSort(): void {\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      this.updateDropedItem(dragElement.node);\n    });\n  }\n\n  private getSibling(dropElement: any, dragIndex: number, hoverIndex: number): NgsgDragelement | null {\n    if (dragIndex < hoverIndex) {\n      return { node: dropElement.nextSibling, originalIndex: hoverIndex + 1 };\n    }\n    return { node: dropElement, originalIndex: hoverIndex };\n  }\n\n  private isDropInSelection(dropElement: NgsgDragelement): boolean {\n    return !!this.dragElements.find((dragElment: NgsgDragelement) => dragElment.node === dropElement.node);\n  }\n\n  private updateDropedItem(item: Element): void {\n    this.classService.removePlaceHolderClass(item);\n    this.classService.addDroppedClass(item);\n    this.classService.removeSelectedClass(item);\n    timer(500).subscribe(() => this.classService.removeDroppedClass(item));\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {takeUntil, takeWhile, throttleTime} from 'rxjs/operators';\n\nimport {NgsgElementsHelper} from './helpers/element/ngsg-elements.helper';\nimport {ScrollHelperService} from './helpers/scroll/scroll-helper.service';\nimport {NgsgSelectionService} from './mutliselect/ngsg-selection.service';\nimport {NgsgEventsService} from './shared/ngsg-events.service';\nimport {NgsgOrderChange} from './shared/ngsg-order-change.model';\nimport {NgsgReflectService} from './sort/reflection/ngsg-reflect.service';\nimport {NgsgSortService} from './sort/sort/ngsg-sort.service';\nimport {NgsgStoreService} from './store/ngsg-store.service';\n\nconst selector = '[ngSortgridItem]';\n\n@Directive({selector})\nexport class NgsgItemDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() ngSortGridGroup = 'defaultGroup';\n  @Input() ngSortGridItems: any[];\n  @Input() scrollPointTop: number;\n  @Input() scrollPointBottom: number;\n  @Input() scrollSpeed: number;\n  @Input() autoScroll = false;\n\n  @Output() sorted = new EventEmitter<NgsgOrderChange<any>>();\n\n  private selected = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    public el: ElementRef,\n    private sortService: NgsgSortService,\n    private selectionService: NgsgSelectionService,\n    private reflectService: NgsgReflectService,\n    private ngsgStore: NgsgStoreService,\n    private ngsgEventService: NgsgEventsService,\n    private scrollHelperService: ScrollHelperService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.ngsgEventService.dropped$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => this.selected = false);\n\n    fromEvent<DragEvent>(this.el.nativeElement, 'drag').pipe(\n      throttleTime(20),\n      takeUntil(this.destroy$),\n      takeWhile(() => this.autoScroll)\n    ).subscribe(() => {\n        this.scrollHelperService.scrollIfNecessary(event, {\n          top: this.scrollPointTop,\n          bottom: this.scrollPointBottom\n        }, this.scrollSpeed);\n      }\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const sortGridItemChanges = changes.ngSortGridItems;\n    const sortGridItems = sortGridItemChanges.currentValue ? sortGridItemChanges.currentValue : [];\n\n    if (!this.ngsgStore.hasGroup(this.ngSortGridGroup)) {\n      this.ngsgStore.initState(this.ngSortGridGroup, sortGridItems);\n      return;\n    }\n    this.ngsgStore.setItems(this.ngSortGridGroup, sortGridItems);\n  }\n\n  ngAfterViewInit(): void {\n    this.el.nativeElement.draggable = true;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('dragstart', ['$event'])\n  dragStart(event): void {\n    if (!this.occuredOnHost(event)) {\n      return;\n    }\n    this.selectionService.selectElementIfNoSelection(this.ngSortGridGroup, event.target);\n    this.sortService.initSort(this.ngSortGridGroup);\n  }\n\n  @HostListener('dragenter')\n  dragEnter(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n    this.sortService.sort(this.el.nativeElement);\n  }\n\n  @HostListener('dragover', ['$event'])\n  dragOver(event): boolean {\n    if (event.preventDefault) {\n      // Necessary. Allows us to drop.\n      event.preventDefault();\n    }\n    return false;\n  }\n\n  @HostListener('dragend')\n  drop(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n\n    if (!this.ngsgStore.hasItems(this.ngSortGridGroup)) {\n      console.warn(`Ng-sortgrid: No items provided - please use [sortGridItems] to pass in an array of items -\n      otherwhise the ordered items can not be emitted in the (sorted) event`);\n      return;\n    }\n    const previousOrder = [...this.ngsgStore.getItems(this.ngSortGridGroup)];\n    this.sortService.endSort();\n    const currentOrder = this.reflectService.reflectChanges(this.ngSortGridGroup, this.el.nativeElement);\n    this.sorted.next({previousOrder, currentOrder});\n    this.ngsgStore.resetSelectedItems(this.ngSortGridGroup);\n    this.ngsgEventService.dropped$.next();\n  }\n\n  @HostListener('click')\n  clicked(): void {\n    this.selected = !this.isItemCurrentlySelected();\n    this.selectionService.updateSelectedDragItem(this.ngSortGridGroup, this.el.nativeElement, this.selected);\n  }\n\n  private isItemCurrentlySelected(): boolean {\n    const index = NgsgElementsHelper.findIndex(this.el.nativeElement);\n    return !!this.ngsgStore.getSelectedItems(this.ngSortGridGroup)\n      .find(element => element.originalIndex === index);\n  }\n\n  private occuredOnHost(event): boolean {\n    return event.target.matches(selector);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgsgItemDirective } from './ngsg-item.directive';\n\n@NgModule({\n  declarations: [NgsgItemDirective],\n  exports: [NgsgItemDirective]\n})\nexport class NgsgModule {}\n","export interface NgsgOrderChange<T> {\n  previousOrder: T[];\n  currentOrder: T[];\n}\n"],"names":[],"mappings":";;;;;;;;;;MAAa,kBAAkB;;;;;IAEtB,OAAO,SAAS,CAAC,OAAgB;;cAChC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ;QAC/C,OAAO,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;KAC3D;;;;;;;;;;;2BCCF;;;IAFC,2BAAa;;IACb,8BAAgB;;MAML,mBAAmB;;;;IAM9B,YAAsC,QAAQ;QAAR,aAAQ,GAAR,QAAQ,CAAA;QAHtC,wBAAmB,GAAG,EAAE,CAAC;QACzB,kBAAa,GAAG,EAAE,CAAC;QAGzB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,WAAW,CAAC;KACpC;;;;;;;IAEM,iBAAiB,CAAC,KAAU,EAAE,eAA6B,EAAE,EAAE,WAAoB;;cAClF,eAAe,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO;QAEzD,IAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,EAAE,YAAY,CAAC,GAAG,CAAC,EAAE;YAC7D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;YAC3F,OAAO;SACR;QAED,IAAI,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,YAAY,CAAC,MAAM,CAAC,EAAE;YACnE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,GAAG,EAAE,WAAW,IAAI,IAAI,CAAC,mBAAmB,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,CAAC;SAC1F;KACF;;;;;;;IAEO,iBAAiB,CAAC,eAAuB,EAAE,cAAsB;QACvE,OAAO,cAAc,GAAG,eAAe,GAAG,cAAc;YACtD,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC;KACxC;;;;;;;IAEO,oBAAoB,CAAC,eAAuB,EAAE,iBAAyB;QAC7E,OAAO,iBAAiB,GAAG,eAAe,GAAG,iBAAiB;YAC5D,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC;KAClE;;;YAlCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;4CAOc,MAAM,SAAC,QAAQ;;;;;;;;IAJ5B,qCAA4B;;;;;IAC5B,kDAAiC;;;;;IACjC,4CAA2B;;;;;IAEf,uCAAkC;;;;;;;;MCZnC,gBAAgB;IAH7B;QAIU,2BAAsB,GAAG,gBAAgB,CAAC;QAC1C,8BAAyB,GAAG,mBAAmB,CAAC;QAChD,0BAAqB,GAAG,eAAe,CAAC;KA0BjD;;;;;IAxBQ,mBAAmB,CAAC,OAAgB;QACzC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;KACvD;;;;;IAEM,sBAAsB,CAAC,OAAgB;QAC5C,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;KAC1D;;;;;IAEM,eAAe,CAAC,OAAgB;QACrC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;KACnD;;;;;IAEM,kBAAkB,CAAC,OAAgB;QACxC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;KACtD;;;;;IAEM,gBAAgB,CAAC,OAAgB;QACtC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;KACpD;;;;;IAEM,mBAAmB,CAAC,OAAgB;QACzC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;KACvD;;;YA9BF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;IAEC,kDAAkD;;;;;IAClD,qDAAwD;;;;;IACxD,iDAAgD;;;;;;;;;;;wBCCjD;;;IAHC,0BAAa;;IACb,4BAAa;;IACb,kCAAiC;;MAMtB,gBAAgB;IAH7B;QAIU,UAAK,GAAG,IAAI,GAAG,EAAqB,CAAC;KAuD9C;;;;;;;IArDQ,SAAS,CAAC,KAAa,EAAE,QAAe,EAAE,EAAE,UAAe,EAAE;QAClE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,EAAC,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,OAAO,EAAE,aAAa,EAAE,EAAE,EAAC,CAAC,CAAC;KACxE;;;;;;IAEM,eAAe,CAAC,KAAa,EAAE,WAA4B;QAChE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACvD;;;;;;IAEM,kBAAkB,CAAC,KAAa,EAAE,IAAa;;cAC9C,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa;aACrD,MAAM;;;;QAAC,CAAC,WAA4B,KAAK,WAAW,CAAC,IAAI,KAAK,IAAI,EAAC;QACtE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;KAC5C;;;;;;IAEM,QAAQ,CAAC,KAAa,EAAE,KAAU;QACvC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;KAC1C;;;;;IAEM,QAAQ,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;KACpC;;;;;IAEM,QAAQ,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KACxC;;;;;IAEM,QAAQ,CAAC,KAAa;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC9B;;;;;IAEM,gBAAgB,CAAC,KAAa;QACnC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;KAC5C;;;;;;IAEM,gBAAgB,CAAC,KAAa,EAAE,aAAoB;QACzD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,GAAG,CAAC,GAAG,aAAa,CAAC,CAAC;KAC1D;;;;;IAEM,kBAAkB,CAAC,KAAa;QACrC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;KAC/C;;;;;IAEM,gBAAgB,CAAC,KAAa;QACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KAChD;;;;;IAEM,kBAAkB,CAAC,KAAa;QACrC,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;KAClC;;;;;IAEM,UAAU,CAAC,KAAa;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;KACtC;;;YA1DF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;IAEC,iCAA6C;;;;;;;;;ACP/C,MAAK,YAAY;IACf,GAAG,GAAA;IACH,MAAM,GAAA;EACP;;;;;;AAED,8BAIC;;;IAHC,8BAAY;;IACZ,+BAAc;;IACd,iCAAqB;;MAMV,oBAAoB;;;;;IAM/B,YAAoB,YAA8B,EAAU,SAA2B;QAAnE,iBAAY,GAAZ,YAAY,CAAkB;QAAU,cAAS,GAAT,SAAS,CAAkB;QAL/E,gBAAW,GAAG,MAAM,CAAC;QACrB,gBAAW,GAAG,SAAS,CAAC;QAExB,qBAAgB,GAAG,IAAI,OAAO,EAAmB,CAAC;;cAGlD,oBAAoB,GAAG,IAAI,CAAC,mBAAmB,EAAE;QACvD,IAAI,CAAC,gBAAgB;aAClB,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,CAAC;aAC1C,SAAS;;;;QAAC,CAAC,CAAC,eAAe,EAAE,mBAAmB,CAAC;YAChD,mBAAmB;kBACf,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC;kBAC3C,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;SAClD,EAAC,CAAC;KACN;;;;;;IAEO,kBAAkB,CAAC,KAAa;QACtC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,OAAO;;;;QAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC;QACzG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;KAC1C;;;;;;IAEO,qBAAqB,CAAC,eAAgC;QAC5D,IAAI,eAAe,CAAC,MAAM,KAAK,YAAY,CAAC,GAAG,EAAE;YAC/C,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,EAAE;gBAClD,IAAI,EAAE,eAAe,CAAC,IAAI;gBAC1B,aAAa,EAAE,kBAAkB,CAAC,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC;aAClE,CAAC,CAAC;SACJ;QACD,IAAI,eAAe,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,EAAE;YAClD,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,eAAe,CAAC,GAAG,EAAE,eAAe,CAAC,IAAI,CAAC,CAAC;SAC9E;KACF;;;;;IAEO,mBAAmB;;cACnB,mBAAmB,GAAG,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,IAAI,CAC3D,MAAM;;;;QACJ,CAAC,aAA4B,KAC3B,aAAa,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,IAAI,aAAa,CAAC,GAAG,KAAK,IAAI,CAAC,WAAW,EACnF,EACD,KAAK,CAAC,IAAI,CAAC,CACZ;;cACK,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3D,OAAO,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;KAC1C;;;;;;IAEM,0BAA0B,CAAC,KAAa,EAAE,aAAsB;QACrE,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;YAC1C,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,KAAK,EAAE;YACpC,IAAI,EAAE,aAAa;YACnB,aAAa,EAAE,kBAAkB,CAAC,SAAS,CAAC,aAAa,CAAC;SAC3D,CAAC,CAAC;KACJ;;;;;;;IAEM,sBAAsB,CAAC,GAAW,EAAE,IAAa,EAAE,QAAiB;QACzE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;YACzB,GAAG;YACH,IAAI;YACJ,MAAM,EAAE,QAAQ,GAAG,YAAY,CAAC,GAAG,GAAG,YAAY,CAAC,MAAM;SAC1D,CAAC,CAAC;KACJ;;;YAnEF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAjBO,gBAAgB;YAEhB,gBAAgB;;;;;;;;IAiBtB,2CAA6B;;;;;IAC7B,2CAAgC;;;;;IAEhC,gDAA0D;;;;;IAE9C,4CAAsC;;;;;IAAE,yCAAmC;;;;;;;;MCtB5E,iBAAiB;IAH9B;QAIS,aAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;KACjC;;;YALA,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;IAEC,qCAAgC;;;;;;;;MCErB,kBAAkB;;;;IAC7B,YAAoB,SAA2B;QAA3B,cAAS,GAAT,SAAS,CAAkB;KAAI;;;;;;IAE5C,cAAc,CAAC,GAAW,EAAE,OAAgB;;cAC3C,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC;;cACpC,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC;;cACvD,sBAAsB,GAAG,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,CAAC;;cAC1E,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,sBAAsB,CAAC;;cACpE,aAAa,GAAG,sBAAsB,CAAC,IAAI,EAAE;;cAC7C,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,OAAO,CAAC;QAE/D,OAAO,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/B,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;SACtC;;cAEK,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,aAAa,EAAE,SAAS,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACrC,OAAO,MAAM,CAAC;KACf;;;;;;;;IAEO,iBAAiB,CAAC,KAAU,EAAE,aAAkB,EAAE,SAAiB;;cACnE,eAAe,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,SAAS,CAAC;;cAC3C,cAAc,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;QAC3D,OAAO,CAAC,GAAG,eAAe,EAAE,GAAG,aAAa,EAAE,GAAG,cAAc,CAAC,CAAC;KAClE;;;;;;;IAEO,gBAAgB,CAAC,KAAY,EAAE,sBAAgC;;cAC/D,aAAa,GAAG,EAAE;QACxB,sBAAsB,CAAC,OAAO;;;;QAAC,KAAK;YAClC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;SAClC,EAAC,CAAC;QACH,OAAO,aAAa,CAAC;KACtB;;;;;;IAEO,0BAA0B,CAAC,gBAAmC;QACpE,OAAO,gBAAgB,CAAC,GAAG;;;;QAAC,CAAC,eAAgC,KAAK,eAAe,CAAC,aAAa,EAAC,CAAC;KAClG;;;;;;;IAEO,aAAa,CAAC,gBAAmC,EAAE,OAAgB;QACzE,IAAI,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,OAAO,CAAC,EAAE;YACrD,OAAO,kBAAkB,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SAC/D;QACD,OAAO,kBAAkB,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KAC9C;;;;;;;IAEO,iBAAiB,CAAC,UAA6B,EAAE,WAAoB;QAC3E,OAAO,CAAC,CAAC,UAAU,CAAC,IAAI;;;;QAAC,CAAC,UAA2B,KAAK,UAAU,CAAC,IAAI,KAAK,WAAW,EAAC,CAAC;KAC5F;;;YAlDF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAJO,gBAAgB;;;;;;;;IAMV,uCAAmC;;;;;;;;MCCpC,eAAe;;;;;IAI1B,YACU,YAA8B,EAC9B,SAA2B;QAD3B,iBAAY,GAAZ,YAAY,CAAkB;QAC9B,cAAS,GAAT,SAAS,CAAkB;KACjC;;;;;IAEG,QAAQ,CAAC,KAAa;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC5D;;;;;IAEM,IAAI,CAAC,WAAoB;;cACxB,UAAU,GAAG,kBAAkB,CAAC,SAAS,CAAC,WAAW,CAAC;;cACtD,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC;QAEnE,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAE;YAC9B,OAAO;SACR;QACD,IAAI,CAAC,YAAY,CAAC,OAAO;;;;QAAC,CAAC,WAA4B;;kBAC/C,YAAY,GAAG,WAAW,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC;YACnF,IAAI,CAAC,YAAY,CAAC,mBAAmB,oBAAC,YAAY,GAAY,CAAC;SAChE,EAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;KAC1E;;;;IAEM,OAAO;QACZ,IAAI,CAAC,YAAY,CAAC,OAAO;;;;QAAC,CAAC,WAA4B;YACrD,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACzC,EAAC,CAAC;KACJ;;;;;;;;IAEO,UAAU,CAAC,WAAgB,EAAE,SAAiB,EAAE,UAAkB;QACxE,IAAI,SAAS,GAAG,UAAU,EAAE;YAC1B,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC,WAAW,EAAE,aAAa,EAAE,UAAU,GAAG,CAAC,EAAE,CAAC;SACzE;QACD,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC;KACzD;;;;;;IAEO,iBAAiB,CAAC,WAA4B;QACpD,OAAO,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI;;;;QAAC,CAAC,UAA2B,KAAK,UAAU,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,EAAC,CAAC;KACxG;;;;;;IAEO,gBAAgB,CAAC,IAAa;QACpC,IAAI,CAAC,YAAY,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC5C,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAC,CAAC;KACxE;;;YArDF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YAPO,gBAAgB;YAGhB,gBAAgB;;;;;;;;IAMtB,oCAA0B;;;;;IAC1B,uCAAwC;;;;;IAGtC,uCAAsC;;;;;IACtC,oCAAmC;;;;;;;;;MCQjC,QAAQ,GAAG,kBAAkB;MAGtB,iBAAiB;;;;;;;;;;IAa5B,YACS,EAAc,EACb,WAA4B,EAC5B,gBAAsC,EACtC,cAAkC,EAClC,SAA2B,EAC3B,gBAAmC,EACnC,mBAAwC;QANzC,OAAE,GAAF,EAAE,CAAY;QACb,gBAAW,GAAX,WAAW,CAAiB;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAsB;QACtC,mBAAc,GAAd,cAAc,CAAoB;QAClC,cAAS,GAAT,SAAS,CAAkB;QAC3B,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAnBzC,oBAAe,GAAG,cAAc,CAAC;QAKjC,eAAU,GAAG,KAAK,CAAC;QAElB,WAAM,GAAG,IAAI,YAAY,EAAwB,CAAC;QAEpD,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,IAAI,OAAO,EAAE,CAAC;KAWhC;;;;IAED,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CACjC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB,CAAC,SAAS;;;QAAC,MAAM,IAAI,CAAC,QAAQ,GAAG,KAAK,EAAC,CAAC;QAEzC,SAAS,CAAY,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,IAAI,CACtD,YAAY,CAAC,EAAE,CAAC,EAChB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EACxB,SAAS;;;QAAC,MAAM,IAAI,CAAC,UAAU,EAAC,CACjC,CAAC,SAAS;;;QAAC;YACR,IAAI,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,KAAK,EAAE;gBAChD,GAAG,EAAE,IAAI,CAAC,cAAc;gBACxB,MAAM,EAAE,IAAI,CAAC,iBAAiB;aAC/B,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACtB,EACF,CAAC;KACH;;;;;IAED,WAAW,CAAC,OAAsB;;cAC1B,mBAAmB,GAAG,OAAO,CAAC,eAAe;;cAC7C,aAAa,GAAG,mBAAmB,CAAC,YAAY,GAAG,mBAAmB,CAAC,YAAY,GAAG,EAAE;QAE9F,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YAClD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;YAC9D,OAAO;SACR;QACD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;KAC9D;;;;IAED,eAAe;QACb,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,IAAI,CAAC;KACxC;;;;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;;;IAGD,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAC9B,OAAO;SACR;QACD,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KACjD;;;;IAGD,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YAC1D,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;KAC9C;;;;;IAGD,QAAQ,CAAC,KAAK;QACZ,IAAI,KAAK,CAAC,cAAc,EAAE;;YAExB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;QACD,OAAO,KAAK,CAAC;KACd;;;;IAGD,IAAI;QACF,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YAC1D,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YAClD,OAAO,CAAC,IAAI,CAAC;4EACyD,CAAC,CAAC;YACxE,OAAO;SACR;;cACK,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;;cACrB,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACpG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,aAAa,EAAE,YAAY,EAAC,CAAC,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;KACvC;;;;IAGD,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAChD,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC1G;;;;;IAEO,uBAAuB;;cACvB,KAAK,GAAG,kBAAkB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACjE,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC;aAC3D,IAAI;;;;QAAC,OAAO,IAAI,OAAO,CAAC,aAAa,KAAK,KAAK,EAAC,CAAC;KACrD;;;;;;IAEO,aAAa,CAAC,KAAK;QACzB,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;KACvC;;;YA1HF,SAAS,SAAC,EAAC,QAAQ,EAAC;;;;YAxBnB,UAAU;YAmBJ,eAAe;YAJf,oBAAoB;YAGpB,kBAAkB;YAElB,gBAAgB;YAJhB,iBAAiB;YAFjB,mBAAmB;;;8BAYxB,KAAK;8BACL,KAAK;6BACL,KAAK;gCACL,KAAK;0BACL,KAAK;yBACL,KAAK;qBAEL,MAAM;wBAsDN,YAAY,SAAC,WAAW,EAAE,CAAC,QAAQ,CAAC;wBASpC,YAAY,SAAC,WAAW;uBAQxB,YAAY,SAAC,UAAU,EAAE,CAAC,QAAQ,CAAC;mBASnC,YAAY,SAAC,SAAS;sBAmBtB,YAAY,SAAC,OAAO;;;;IA1GrB,4CAA0C;;IAC1C,4CAAgC;;IAChC,2CAAgC;;IAChC,8CAAmC;;IACnC,wCAA6B;;IAC7B,uCAA4B;;IAE5B,mCAA4D;;;;;IAE5D,qCAAyB;;;;;IACzB,qCAAiC;;IAG/B,+BAAqB;;;;;IACrB,wCAAoC;;;;;IACpC,6CAA8C;;;;;IAC9C,2CAA0C;;;;;IAC1C,sCAAmC;;;;;IACnC,6CAA2C;;;;;IAC3C,gDAAgD;;;;;;;;MCxCvC,UAAU;;;YAJtB,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,iBAAiB,CAAC;gBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;aAC7B;;;;;;;;;;;;8BCJA;;;IAFC,wCAAmB;;IACnB,uCAAkB;;;;;;;;;;;;;;;;;"}