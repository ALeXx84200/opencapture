"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const tasks_1 = require("@angular-devkit/schematics/tasks");
const change_1 = require("@schematics/angular/utility/change");
const dependencies_1 = require("@schematics/angular/utility/dependencies");
const workspace_1 = require("@schematics/angular/utility/workspace");
const constants_1 = require("../../constants");
const utils_1 = require("../../utils");
function default_1(options) {
    return (tree, context) => {
        if (utils_1.isNx(tree)) {
            // If ng-add is invoked inside of Nx Workspace, call the nx-setup schematics instead
            context.addTask(new tasks_1.RunSchematicTask('nx-setup', options));
            return tree;
        }
        return schematics_1.chain([
            addPackageJsonDependencies(),
            installDependencies(),
            setupProject(options),
        ])(tree, context);
    };
}
exports.default = default_1;
function addPackageJsonDependencies() {
    return (tree, context) => {
        return Promise.all([...constants_1.DEPENDENCIES].map((dep) => utils_1.getLatestNodeVersion(dep).then(({ name, version }) => {
            context.logger.info(`✅️ Added ${name}@${version}`);
            const nodeDependency = {
                name,
                version,
                type: dependencies_1.NodeDependencyType.Dev,
                overwrite: false,
            };
            dependencies_1.addPackageJsonDependency(tree, nodeDependency);
        }))).then(() => tree);
    };
}
function installDependencies() {
    return (tree, context) => {
        context.addTask(new tasks_1.NodePackageInstallTask());
        context.logger.info('✅️ Installed dependencies');
        return tree;
    };
}
function setupProject(options) {
    return schematics_1.chain([
        utils_1.addConfigFiles(options.enableTailwindInComponentsStyles),
        utils_1.updateWorkspaceTargets(options.project, workspace_1.updateWorkspace),
        utils_1.updateProjectRootStyles(options.project, workspace_1.getWorkspace, change_1.InsertChange),
    ]);
}
//# sourceMappingURL=ng-add.js.map