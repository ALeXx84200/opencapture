{"version":3,"file":"ngx-file-drag-drop.js","sources":["../../../projects/ngx-file-drag-drop/src/lib/byte.pipe.ts","../../../projects/ngx-file-drag-drop/src/lib/ngx-file-drag-drop/ngx-file-drag-drop.component.ts","../../../projects/ngx-file-drag-drop/src/lib/ngx-file-drag-drop.module.ts","../../../projects/ngx-file-drag-drop/src/lib/validators.ts","../../../projects/ngx-file-drag-drop/src/public-api.ts","../../../projects/ngx-file-drag-drop/src/ngx-file-drag-drop.ts"],"names":[],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'byte'\r\n})\r\nexport class BytePipe implements PipeTransform {\r\n  private unit = 'Bytes';\r\n\r\n  transform(value: string | number, decimals?: number | string): string {\r\n    value = value.toString();\r\n    if (parseInt(value, 10) >= 0) {\r\n      value = this.formatBytes(+value, +decimals);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  // https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\r\n  formatBytes(bytes: number, decimals = 2): string {\r\n    if (bytes === 0) { return '0 Bytes'; }\r\n\r\n    const k = 1024;\r\n    const dm = decimals < 0 ? 0 : decimals;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n  }\r\n}\r\n","import { Component, forwardRef, HostBinding, HostListener, ViewChild, Input, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { BytePipe } from '../byte.pipe';\r\n\r\n@Component({\r\n  selector: 'ngx-file-drag-drop',\r\n  templateUrl: './ngx-file-drag-drop.component.html',\r\n  styleUrls: ['./ngx-file-drag-drop.component.css'],\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxFileDragDropComponent),\r\n    multi: true\r\n  }]\r\n})\r\nexport class NgxFileDragDropComponent implements ControlValueAccessor {\r\n\r\n  constructor() { }\r\n  @HostBinding('class.disabled')\r\n  @Input()\r\n  get\r\n    disabled() {\r\n    return this._disabled;\r\n  }\r\n  set\r\n    disabled(val: boolean) {\r\n    this._disabled = coerceBooleanProperty(val);\r\n  }\r\n  @Input()\r\n  set multiple(value: boolean) {\r\n    this._multiple = coerceBooleanProperty(value);\r\n  }\r\n  get multiple() {\r\n    return this._multiple;\r\n  }\r\n\r\n  @Input()\r\n  set\r\n    displayFileSize(value: boolean) {\r\n    this._displayFileSize = coerceBooleanProperty(value);\r\n  }\r\n  get\r\n    displayFileSize() {\r\n    return this._displayFileSize;\r\n  }\r\n\r\n  @Input('activeBorderColor')\r\n  @HostBinding('style.border-color')\r\n  set borderColor(color: string) {\r\n    this._activeBorderColor = color;\r\n  }\r\n  get borderColor() {\r\n    return this.isDragover ? this._activeBorderColor : '#ccc';\r\n  }\r\n  get\r\n    files() {\r\n    return this._files;\r\n  }\r\n\r\n  @HostBinding('class.empty-input')\r\n  get isEmpty() {\r\n    return !this.files?.length;\r\n  }\r\n\r\n\r\n  // @HostBinding('class.drag-over')\r\n  get isDragover() {\r\n    return this._isDragOver;\r\n  }\r\n  set isDragover(value: boolean) {\r\n    if (!this.disabled) {\r\n      this._isDragOver = value;\r\n    }\r\n  }\r\n\r\n  @Output()\r\n  private valueChanged = new EventEmitter<File[]>();\r\n\r\n\r\n  @ViewChild('fileInputEl')\r\n  private fileInputEl: ElementRef;\r\n\r\n\r\n  // does no validation, just sets the hidden file input\r\n  @Input() accept = '*';\r\n\r\n  private _disabled = false;\r\n\r\n  _multiple = false;\r\n\r\n  @Input() emptyPlaceholder = `Drop file${this.multiple ? 's' : ''} or click to select`;\r\n\r\n  private _displayFileSize = false;\r\n\r\n\r\n  private _activeBorderColor = 'purple';\r\n\r\n\r\n\r\n  private _files: File[] = [];\r\n  private _isDragOver = false;\r\n\r\n  // https://angular.io/api/forms/ControlValueAccessor\r\n  private _onChange = (val: File[]) => { };\r\n  private _onTouched = () => { };\r\n\r\n  writeValue(files: File[]): void {\r\n    const fileArray = this.convertToArray(files);\r\n    if (fileArray.length < 2 || this.multiple) {\r\n      this._files = fileArray;\r\n      this.emitChanges(this._files);\r\n    }\r\n    else { throw Error('Multiple files not allowed'); }\r\n\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this._onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this._onTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  private emitChanges(files: File[]) {\r\n    this.valueChanged.emit(files);\r\n    this._onChange(files);\r\n  }\r\n\r\n  addFiles(files: File[] | FileList | File) {\r\n\r\n    // this._onTouched();\r\n\r\n    const fileArray = this.convertToArray(files);\r\n\r\n    if (this.multiple) {\r\n      // this.errorOnEqualFilenames(fileArray);\r\n      const merged = this.files.concat(fileArray);\r\n      this.writeValue(merged);\r\n    }\r\n    else {\r\n      this.writeValue(fileArray);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  removeFile(file: File) {\r\n    const fileIndex = this.files.indexOf(file);\r\n    if (fileIndex >= 0) {\r\n      const currentFiles = this.files.slice();\r\n      currentFiles.splice(fileIndex, 1);\r\n      this.writeValue(currentFiles);\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.writeValue([]);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  change(event: Event) {\r\n    event.stopPropagation();\r\n    this._onTouched();\r\n    const fileList: FileList = (event.target as HTMLInputElement).files;\r\n    if (fileList?.length) {\r\n      this.addFiles(fileList);\r\n    }\r\n    // clear it so change is triggered if same file is selected again\r\n    (event.target as HTMLInputElement).value = '';\r\n  }\r\n\r\n  @HostListener('dragenter', ['$event'])\r\n  @HostListener('dragover', ['$event'])\r\n  activate(e) {\r\n    e.preventDefault();\r\n    this.isDragover = true;\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  deactivate(e) {\r\n    e.preventDefault();\r\n    this.isDragover = false;\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  handleDrop(e) {\r\n    this.deactivate(e);\r\n    if (!this.disabled) {\r\n\r\n      const fileList = e.dataTransfer.files;\r\n      this.removeDirectories(fileList).then((files: File[]) => {\r\n        if (files?.length) {\r\n          this.addFiles(files);\r\n        }\r\n        this._onTouched();\r\n      });\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  open() {\r\n    if (!this.disabled) {\r\n      this.fileInputEl?.nativeElement.click();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // @HostListener('focusout')\r\n  // blur() {\r\n  //   console.log('blurred')\r\n  //   this._onTouched();\r\n  // }\r\n\r\n  // private errorOnEqualFilenames(files: File[]) {\r\n  //   if (this.files.some(file => files.some(file2 => file.name === file2.name))) {\r\n  //     throw Error('one of the provided filenames already exists')\r\n  //   }\r\n\r\n  //   for (let i = 0; i < files.length; i++) {\r\n  //     for (let j = i + 1; j < files.length; j++) {\r\n  //       if (files[i].name === files[j].name) {\r\n  //         throw Error(`can't add multiple files with same name`)\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  private removeDirectories(files: FileList) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      const fileArray = this.convertToArray(files);\r\n\r\n      const dirnames = [];\r\n\r\n      const readerList = [];\r\n\r\n      for (let i = 0; i < fileArray.length; i++) {\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onerror = () => {\r\n          dirnames.push(fileArray[i].name);\r\n        };\r\n\r\n        reader.onloadend = () => addToReaderList(i);\r\n\r\n        reader.readAsArrayBuffer(fileArray[i]);\r\n      }\r\n\r\n      function addToReaderList(val: number) {\r\n        readerList.push(val);\r\n        if (readerList.length === fileArray.length) {\r\n          resolve(fileArray.filter((file: File) => !dirnames.includes(file.name)));\r\n        }\r\n\r\n      }\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  private convertToArray(files: FileList | File[] | File | null | undefined): File[] {\r\n    if (files) {\r\n      if (files instanceof File) {\r\n        return [files];\r\n      } else if (Array.isArray(files)) {\r\n        return files;\r\n      } else {\r\n        return Array.prototype.slice.call(files);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getFileName(file: File): string {\r\n    if (!this._displayFileSize) { return file.name; }\r\n\r\n    const size = new BytePipe().transform(file.size);\r\n    return `${file.name} (${size})`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxFileDragDropComponent } from './ngx-file-drag-drop/ngx-file-drag-drop.component';\r\nimport { BytePipe } from './byte.pipe';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgxFileDragDropComponent, BytePipe],\r\n  imports: [\r\n    CommonModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [NgxFileDragDropComponent, BytePipe]\r\n})\r\nexport class NgxFileDragDropModule { }\r\n","import { ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\n// @dynamic\r\nexport class FileValidators {\r\n    static fileExtension(ext: string[]): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n            const validExtensions = ext.map(e => e.trim().toLowerCase());\r\n            const fileArray = (control.value as File[]);\r\n\r\n            const invalidFiles = fileArray.map(file => file.name).filter(\r\n                fname => {\r\n                    const extension = fname.slice((fname.lastIndexOf('.') - 1 >>> 0) + 2).toLowerCase();\r\n                    return !validExtensions.includes(extension);\r\n                }).map(name => ({ name, ext: name.slice((name.lastIndexOf('.') - 1 >>> 0) + 2) }));\r\n\r\n\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    fileExtension: {\r\n                        requiredExtension: ext.toString(),\r\n                        actualExtensions: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static uniqueFileNames(control: AbstractControl): ValidationErrors | null {\r\n\r\n        const fileNameArray = (control.value as File[]).map(file => file.name);\r\n\r\n        const duplicates = fileNameArray.reduce((acc, curr) => {\r\n            acc[curr] = acc[curr] ? acc[curr] + 1 : 1;\r\n            return acc;\r\n        }, {});\r\n\r\n\r\n\r\n        const duplicatesArray: { name: string, count: number }[] = (Object.entries(duplicates) as [string, number][])\r\n            .filter(arr => arr[1] > 1)\r\n            .map(arr => ({ name: arr[0], count: arr[1] }));\r\n\r\n        return !duplicatesArray.length\r\n            ? null\r\n            : {\r\n                uniqueFileNames: { duplicatedFileNames: duplicatesArray }\r\n            };\r\n    }\r\n\r\n    static fileType(types: string[] | RegExp): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n            let regExp: RegExp;\r\n            if (Array.isArray(types)) {\r\n                const joinedTypes = types.join('$|^');\r\n                regExp = new RegExp(`$${joinedTypes}^`, 'i');\r\n            } else {\r\n                regExp = types;\r\n            }\r\n\r\n            const fileArray = (control.value as File[]);\r\n\r\n\r\n\r\n            const invalidFiles = fileArray.filter(\r\n                file => !regExp.test(file.type)).map(file => ({ name: file.name, type: file.type }));\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    fileType: {\r\n                        requiredType: types.toString(),\r\n                        actualTypes: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n\r\n\r\n    static maxFileCount(count: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const fileCount = control?.value ? (control.value as File[]).length : 0;\r\n            const result = count >= fileCount;\r\n            return result\r\n                ? null\r\n                : {\r\n                    maxFileCount: {\r\n                        maxCount: count,\r\n                        actualCount: fileCount\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static maxFileSize(bytes: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n\r\n\r\n            const fileArray = (control.value as File[]);\r\n\r\n            const invalidFiles = fileArray.filter(file => file.size > bytes).map(file => ({ name: file.name, size: file.size }));\r\n\r\n            return !invalidFiles.length\r\n                ? null\r\n                : {\r\n                    maxFileSize: {\r\n                        maxSize: bytes,\r\n                        actualSizes: invalidFiles\r\n                    }\r\n                };\r\n        };\r\n    }\r\n\r\n    static maxTotalSize(bytes: number): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            const size = control?.value ? (control.value as File[]).map(file => file.size).reduce((acc, i) => acc + i, 0) : 0;\r\n            const result = bytes >= size;\r\n            return result\r\n                ? null\r\n                : {\r\n                    maxTotalSize: {\r\n                        maxSize: bytes,\r\n                        actualSize: size\r\n                    }\r\n                };\r\n        };\r\n    }\r\n    static required(control: AbstractControl): ValidationErrors | null {\r\n        const count = control?.value?.length;\r\n        return count\r\n            ? null\r\n            : {\r\n                required: true\r\n            };\r\n    }\r\n}\r\n","/*\r\n * Public API Surface of ngx-file-drag-drop\r\n */\r\n\r\nexport * from './lib/ngx-file-drag-drop/ngx-file-drag-drop.component';\r\nexport * from './lib/ngx-file-drag-drop.module';\r\nexport * from './lib/validators';\r\nexport * from './lib/byte.pipe';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}